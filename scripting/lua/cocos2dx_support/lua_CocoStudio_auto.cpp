/*
** Lua binding: CocoStudio
** Generated automatically by tolua++-1.0.92 on Tue Dec 30 14:33:20 2014.
*/

/****************************************************************************
 Copyright (c) 2011 cocos2d-x.org

 http://www.cocos2d-x.org

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 ****************************************************************************/

extern "C" {
#include "tolua_fix.h"
}

#include <string>
#include "cocos2d.h"
#include "CCLuaEngine.h"
#include "SimpleAudioEngine.h"
#include "cocos-ext.h"
#include "lua_CocoStudio_auto.h"

using namespace std;
USING_NS_CC;
USING_NS_CC_EXT;
USING_NS_TIMELINE;
using namespace CocosDenshion;
using namespace cocos2d::ui;




/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_ColorFrame (lua_State* tolua_S)
{
 ColorFrame* self = (ColorFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ObjectFactory__TInfo (lua_State* tolua_S)
{
 ObjectFactory::TInfo* self = (ObjectFactory::TInfo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlSaturationBrightnessPicker (lua_State* tolua_S)
{
 CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCEditBox (lua_State* tolua_S)
{
 CCEditBox* self = (CCEditBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionScaleFrame (lua_State* tolua_S)
{
 ActionScaleFrame* self = (ActionScaleFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCBatchNode (lua_State* tolua_S)
{
 CCBatchNode* self = (CCBatchNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionRotationFrame (lua_State* tolua_S)
{
 ActionRotationFrame* self = (ActionRotationFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RGBA (lua_State* tolua_S)
{
 RGBA* self = (RGBA*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RichText (lua_State* tolua_S)
{
 RichText* self = (RichText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCScrollViewDelegate (lua_State* tolua_S)
{
 CCScrollViewDelegate* self = (CCScrollViewDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCParticleDisplayData (lua_State* tolua_S)
{
 CCParticleDisplayData* self = (CCParticleDisplayData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ListView (lua_State* tolua_S)
{
 ListView* self = (ListView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArmatureDisplayData (lua_State* tolua_S)
{
 CCArmatureDisplayData* self = (CCArmatureDisplayData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PageView (lua_State* tolua_S)
{
 PageView* self = (PageView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCComController (lua_State* tolua_S)
{
 CCComController* self = (CCComController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TouchGroup (lua_State* tolua_S)
{
 TouchGroup* self = (TouchGroup*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTransformHelp (lua_State* tolua_S)
{
 CCTransformHelp* self = (CCTransformHelp*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GUIReader (lua_State* tolua_S)
{
 GUIReader* self = (GUIReader*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RelativeLayoutParameter (lua_State* tolua_S)
{
 RelativeLayoutParameter* self = (RelativeLayoutParameter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TriggerObj (lua_State* tolua_S)
{
 TriggerObj* self = (TriggerObj*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCBoneData (lua_State* tolua_S)
{
 CCBoneData* self = (CCBoneData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionTimelineCache (lua_State* tolua_S)
{
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CheckBox (lua_State* tolua_S)
{
 CheckBox* self = (CheckBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCProcessBase (lua_State* tolua_S)
{
 CCProcessBase* self = (CCProcessBase*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCSortableObject (lua_State* tolua_S)
{
 CCSortableObject* self = (CCSortableObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArmatureData (lua_State* tolua_S)
{
 CCArmatureData* self = (CCArmatureData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCSkin (lua_State* tolua_S)
{
 CCSkin* self = (CCSkin*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ccColor3B (lua_State* tolua_S)
{
 ccColor3B* self = (ccColor3B*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCColor3bObject (lua_State* tolua_S)
{
 CCColor3bObject* self = (CCColor3bObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlColourPicker (lua_State* tolua_S)
{
 CCControlColourPicker* self = (CCControlColourPicker*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LayoutParameter (lua_State* tolua_S)
{
 LayoutParameter* self = (LayoutParameter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LabelBMFont (lua_State* tolua_S)
{
 LabelBMFont* self = (LabelBMFont*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InnerActionFrame (lua_State* tolua_S)
{
 InnerActionFrame* self = (InnerActionFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTableViewDataSource (lua_State* tolua_S)
{
 CCTableViewDataSource* self = (CCTableViewDataSource*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCComAudio (lua_State* tolua_S)
{
 CCComAudio* self = (CCComAudio*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionFadeFrame (lua_State* tolua_S)
{
 ActionFadeFrame* self = (ActionFadeFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlSlider (lua_State* tolua_S)
{
 CCControlSlider* self = (CCControlSlider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCSpriteDisplayData (lua_State* tolua_S)
{
 CCSpriteDisplayData* self = (CCSpriteDisplayData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCDisplayData (lua_State* tolua_S)
{
 CCDisplayData* self = (CCDisplayData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionTimeline (lua_State* tolua_S)
{
    cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RichElement (lua_State* tolua_S)
{
 RichElement* self = (RichElement*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkewFrame (lua_State* tolua_S)
{
 SkewFrame* self = (SkewFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CocoLoader (lua_State* tolua_S)
{
 CocoLoader* self = (CocoLoader*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCComRender (lua_State* tolua_S)
{
 CCComRender* self = (CCComRender*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionMoveFrame (lua_State* tolua_S)
{
 ActionMoveFrame* self = (ActionMoveFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCInputDelegate (lua_State* tolua_S)
{
 CCInputDelegate* self = (CCInputDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ZOrderFrame (lua_State* tolua_S)
{
 ZOrderFrame* self = (ZOrderFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCBaseData (lua_State* tolua_S)
{
 CCBaseData* self = (CCBaseData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_NodeCreateCallFunc (lua_State* tolua_S)
{
 NodeCreateCallFunc* self = (NodeCreateCallFunc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AnchorPointFrame (lua_State* tolua_S)
{
 AnchorPointFrame* self = (AnchorPointFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ccColor4B (lua_State* tolua_S)
{
 ccColor4B* self = (ccColor4B*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCAffineTransform (lua_State* tolua_S)
{
 CCAffineTransform* self = (CCAffineTransform*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RichElementCustomNode (lua_State* tolua_S)
{
 RichElementCustomNode* self = (RichElementCustomNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ccBlendFunc (lua_State* tolua_S)
{
 ccBlendFunc* self = (ccBlendFunc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlHuePicker (lua_State* tolua_S)
{
 CCControlHuePicker* self = (CCControlHuePicker*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCDecorativeDisplay (lua_State* tolua_S)
{
 CCDecorativeDisplay* self = (CCDecorativeDisplay*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCScale9Sprite (lua_State* tolua_S)
{
 CCScale9Sprite* self = (CCScale9Sprite*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LoadingBar (lua_State* tolua_S)
{
 LoadingBar* self = (LoadingBar*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionTintFrame (lua_State* tolua_S)
{
 ActionTintFrame* self = (ActionTintFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCDisplayManager (lua_State* tolua_S)
{
 CCDisplayManager* self = (CCDisplayManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCMovementBoneData (lua_State* tolua_S)
{
 CCMovementBoneData* self = (CCMovementBoneData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIScrollInterface (lua_State* tolua_S)
{
 UIScrollInterface* self = (UIScrollInterface*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Widget (lua_State* tolua_S)
{
 Widget* self = (Widget*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCMovementData (lua_State* tolua_S)
{
 CCMovementData* self = (CCMovementData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCPoint (lua_State* tolua_S)
{
 CCPoint* self = (CCPoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCContourData (lua_State* tolua_S)
{
 CCContourData* self = (CCContourData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ScaleFrame (lua_State* tolua_S)
{
 ScaleFrame* self = (ScaleFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Label (lua_State* tolua_S)
{
 Label* self = (Label*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TriggerMng (lua_State* tolua_S)
{
 TriggerMng* self = (TriggerMng*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTextureData (lua_State* tolua_S)
{
 CCTextureData* self = (CCTextureData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Layout (lua_State* tolua_S)
{
 Layout* self = (Layout*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FrameCreateCallFunc (lua_State* tolua_S)
{
 FrameCreateCallFunc* self = (FrameCreateCallFunc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionFrame (lua_State* tolua_S)
{
 ActionFrame* self = (ActionFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UICCLabelAtlas (lua_State* tolua_S)
{
 UICCLabelAtlas* self = (UICCLabelAtlas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LabelAtlas (lua_State* tolua_S)
{
 LabelAtlas* self = (LabelAtlas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ArmatureMovementDispatcher (lua_State* tolua_S)
{
 ArmatureMovementDispatcher* self = (ArmatureMovementDispatcher*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCColliderDetector (lua_State* tolua_S)
{
 CCColliderDetector* self = (CCColliderDetector*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionObject (lua_State* tolua_S)
{
 ActionObject* self = (ActionObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EventFrame (lua_State* tolua_S)
{
 EventFrame* self = (EventFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DictionaryHelper (lua_State* tolua_S)
{
 DictionaryHelper* self = (DictionaryHelper*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RichElementImage (lua_State* tolua_S)
{
 RichElementImage* self = (RichElementImage*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionFrameEasing (lua_State* tolua_S)
{
 ActionFrameEasing* self = (ActionFrameEasing*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ImageView (lua_State* tolua_S)
{
 ImageView* self = (ImageView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_VisibleFrame (lua_State* tolua_S)
{
 VisibleFrame* self = (VisibleFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlSwitch (lua_State* tolua_S)
{
 CCControlSwitch* self = (CCControlSwitch*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Frame (lua_State* tolua_S)
{
 Frame* self = (Frame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlButton (lua_State* tolua_S)
{
 CCControlButton* self = (CCControlButton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTween (lua_State* tolua_S)
{
 CCTween* self = (CCTween*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArrayForObjectSorting (lua_State* tolua_S)
{
 CCArrayForObjectSorting* self = (CCArrayForObjectSorting*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RichElementText (lua_State* tolua_S)
{
 RichElementText* self = (RichElementText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArmatureDataManager (lua_State* tolua_S)
{
 CCArmatureDataManager* self = (CCArmatureDataManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HSV (lua_State* tolua_S)
{
 HSV* self = (HSV*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TextureFrame (lua_State* tolua_S)
{
 TextureFrame* self = (TextureFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCRect (lua_State* tolua_S)
{
 CCRect* self = (CCRect*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LinearLayoutParameter (lua_State* tolua_S)
{
 LinearLayoutParameter* self = (LinearLayoutParameter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCComAttribute (lua_State* tolua_S)
{
 CCComAttribute* self = (CCComAttribute*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlStepper (lua_State* tolua_S)
{
 CCControlStepper* self = (CCControlStepper*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCColliderFilter (lua_State* tolua_S)
{
 CCColliderFilter* self = (CCColliderFilter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionManager (lua_State* tolua_S)
{
 ActionManager* self = (ActionManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RotationFrame (lua_State* tolua_S)
{
 RotationFrame* self = (RotationFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ActionNode (lua_State* tolua_S)
{
 ActionNode* self = (ActionNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCEditBoxDelegate (lua_State* tolua_S)
{
 CCEditBoxDelegate* self = (CCEditBoxDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Margin (lua_State* tolua_S)
{
 Margin* self = (Margin*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCScrollView (lua_State* tolua_S)
{
 CCScrollView* self = (CCScrollView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControlPotentiometer (lua_State* tolua_S)
{
 CCControlPotentiometer* self = (CCControlPotentiometer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BaseTriggerCondition (lua_State* tolua_S)
{
 BaseTriggerCondition* self = (BaseTriggerCondition*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCSize (lua_State* tolua_S)
{
 CCSize* self = (CCSize*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UICCTextField (lua_State* tolua_S)
{
 UICCTextField* self = (UICCTextField*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCBone (lua_State* tolua_S)
{
 CCBone* self = (CCBone*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ColliderBody (lua_State* tolua_S)
{
 ColliderBody* self = (ColliderBody*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArmature (lua_State* tolua_S)
{
 CCArmature* self = (CCArmature*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ScrollView (lua_State* tolua_S)
{
 ScrollView* self = (ScrollView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTableViewCell (lua_State* tolua_S)
{
 CCTableViewCell* self = (CCTableViewCell*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCAnimationData (lua_State* tolua_S)
{
 CCAnimationData* self = (CCAnimationData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TextField (lua_State* tolua_S)
{
 TextField* self = (TextField*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCArmatureAnimation (lua_State* tolua_S)
{
 CCArmatureAnimation* self = (CCArmatureAnimation*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ObjectFactory (lua_State* tolua_S)
{
 ObjectFactory* self = (ObjectFactory*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCControl (lua_State* tolua_S)
{
 CCControl* self = (CCControl*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RotationSkewFrame (lua_State* tolua_S)
{
 RotationSkewFrame* self = (RotationSkewFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Timeline (lua_State* tolua_S)
{
 Timeline* self = (Timeline*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCSpriteFrameCacheHelper (lua_State* tolua_S)
{
 CCSpriteFrameCacheHelper* self = (CCSpriteFrameCacheHelper*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCFrameData (lua_State* tolua_S)
{
 CCFrameData* self = (CCFrameData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCTableView (lua_State* tolua_S)
{
 CCTableView* self = (CCTableView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BaseTriggerAction (lua_State* tolua_S)
{
 BaseTriggerAction* self = (BaseTriggerAction*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Button (lua_State* tolua_S)
{
 Button* self = (Button*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PositionFrame (lua_State* tolua_S)
{
 PositionFrame* self = (PositionFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ScrollInnerContainer (lua_State* tolua_S)
{
 ScrollInnerContainer* self = (ScrollInnerContainer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Slider (lua_State* tolua_S)
{
 Slider* self = (Slider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"ColorFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ColorFrame)), "ColorFrame");
 tolua_usertype(tolua_S,"CCControlUtils");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlUtils)), "CCControlUtils");
 tolua_usertype(tolua_S,"CCControlSaturationBrightnessPicker");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlSaturationBrightnessPicker)), "CCControlSaturationBrightnessPicker");
 tolua_usertype(tolua_S,"CCKeypadDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCKeypadDelegate)), "CCKeypadDelegate");
 tolua_usertype(tolua_S,"ActionRotationFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionRotationFrame)), "ActionRotationFrame");
 tolua_usertype(tolua_S,"RGBA");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RGBA)), "RGBA");
 tolua_usertype(tolua_S,"CCScrollViewDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCScrollViewDelegate)), "CCScrollViewDelegate");
 tolua_usertype(tolua_S,"CCParticleDisplayData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCParticleDisplayData)), "CCParticleDisplayData");
 tolua_usertype(tolua_S,"ListView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ListView)), "ListView");
 tolua_usertype(tolua_S,"CCEaseQuarticActionOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuarticActionOut)), "CCEaseQuarticActionOut");
 tolua_usertype(tolua_S,"PageView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(PageView)), "PageView");
 tolua_usertype(tolua_S,"CCTransformHelp");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTransformHelp)), "CCTransformHelp");
 tolua_usertype(tolua_S,"CCSpriteBatchNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSpriteBatchNode)), "CCSpriteBatchNode");
 tolua_usertype(tolua_S,"CheckBox");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CheckBox)), "CheckBox");
 tolua_usertype(tolua_S,"ActionFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionFrame)), "ActionFrame");
 tolua_usertype(tolua_S,"CCControlHuePicker");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlHuePicker)), "CCControlHuePicker");
 tolua_usertype(tolua_S,"CCControlColourPicker");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlColourPicker)), "CCControlColourPicker");
 tolua_usertype(tolua_S,"WidgetReaderProtocol");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(WidgetReaderProtocol)), "WidgetReaderProtocol");
 tolua_usertype(tolua_S,"CCString");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCString)), "CCString");
 tolua_usertype(tolua_S,"CCEaseQuinticActionOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuinticActionOut)), "CCEaseQuinticActionOut");
 tolua_usertype(tolua_S,"CCTextureAtlas");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTextureAtlas)), "CCTextureAtlas");
 tolua_usertype(tolua_S,"CCAnimationData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCAnimationData)), "CCAnimationData");
 tolua_usertype(tolua_S,"ActionTimeline");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionTimeline)), "ActionTimeline");
 tolua_usertype(tolua_S,"ActionMoveFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionMoveFrame)), "ActionMoveFrame");
 tolua_usertype(tolua_S,"CCAction");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCAction)), "CCAction");
 tolua_usertype(tolua_S,"CCEaseCubicActionInOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCubicActionInOut)), "CCEaseCubicActionInOut");
 tolua_usertype(tolua_S,"NodeCreateCallFunc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(NodeCreateCallFunc)), "NodeCreateCallFunc");
 tolua_usertype(tolua_S,"AnchorPointFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(AnchorPointFrame)), "AnchorPointFrame");
 tolua_usertype(tolua_S,"CCLabelTTF");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCLabelTTF)), "CCLabelTTF");
 tolua_usertype(tolua_S,"Layout");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Layout)), "Layout");
 tolua_usertype(tolua_S,"CCTouchDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTouchDelegate)), "CCTouchDelegate");
 tolua_usertype(tolua_S,"CCScale9Sprite");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCScale9Sprite)), "CCScale9Sprite");
 tolua_usertype(tolua_S,"LoadingBar");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(LoadingBar)), "LoadingBar");
 tolua_usertype(tolua_S,"CCComponent");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCComponent)), "CCComponent");
 tolua_usertype(tolua_S,"CCSprite");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSprite)), "CCSprite");
 tolua_usertype(tolua_S,"CCColor3bObject");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCColor3bObject)), "CCColor3bObject");
 tolua_usertype(tolua_S,"CCMovementData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCMovementData)), "CCMovementData");
 tolua_usertype(tolua_S,"CCContourData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCContourData)), "CCContourData");
 tolua_usertype(tolua_S,"CCTexture2D");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTexture2D)), "CCTexture2D");
 tolua_usertype(tolua_S,"CCTouch");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTouch)), "CCTouch");
 tolua_usertype(tolua_S,"CCEaseQuadraticActionIn");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuadraticActionIn)), "CCEaseQuadraticActionIn");
 tolua_usertype(tolua_S,"CCIMEDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCIMEDelegate)), "CCIMEDelegate");
 tolua_usertype(tolua_S,"LabelAtlas");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(LabelAtlas)), "LabelAtlas");
 tolua_usertype(tolua_S,"ArmatureMovementDispatcher");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ArmatureMovementDispatcher)), "ArmatureMovementDispatcher");
 tolua_usertype(tolua_S,"ActionObject");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionObject)), "ActionObject");
 tolua_usertype(tolua_S,"CCTableViewCell");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTableViewCell)), "CCTableViewCell");
 tolua_usertype(tolua_S,"DictionaryHelper");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(DictionaryHelper)), "DictionaryHelper");
 tolua_usertype(tolua_S,"CCMeasurableProtocol");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCMeasurableProtocol)), "CCMeasurableProtocol");
 tolua_usertype(tolua_S,"CCNodeRGBA");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCNodeRGBA)), "CCNodeRGBA");
 tolua_usertype(tolua_S,"VisibleFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(VisibleFrame)), "VisibleFrame");
 tolua_usertype(tolua_S,"CCBlendProtocol");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCBlendProtocol)), "CCBlendProtocol");
 tolua_usertype(tolua_S,"CCTween");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTween)), "CCTween");
 tolua_usertype(tolua_S,"CCArrayForObjectSorting");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArrayForObjectSorting)), "CCArrayForObjectSorting");
 tolua_usertype(tolua_S,"CCArmatureDataManager");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArmatureDataManager)), "CCArmatureDataManager");
 tolua_usertype(tolua_S,"CCTextFieldDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTextFieldDelegate)), "CCTextFieldDelegate");
 tolua_usertype(tolua_S,"TextureFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TextureFrame)), "TextureFrame");
 tolua_usertype(tolua_S,"CCRect");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCRect)), "CCRect");
 tolua_usertype(tolua_S,"CCColliderFilter");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCColliderFilter)), "CCColliderFilter");
 tolua_usertype(tolua_S,"ActionManager");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionManager)), "ActionManager");
 tolua_usertype(tolua_S,"CCEditBoxDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEditBoxDelegate)), "CCEditBoxDelegate");
 tolua_usertype(tolua_S,"UICCTextField");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(UICCTextField)), "UICCTextField");
 tolua_usertype(tolua_S,"CCInvocation");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCInvocation)), "CCInvocation");
 tolua_usertype(tolua_S,"ColliderBody");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ColliderBody)), "ColliderBody");
 tolua_usertype(tolua_S,"RotationFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RotationFrame)), "RotationFrame");
 tolua_usertype(tolua_S,"RichElementImage");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RichElementImage)), "RichElementImage");
 tolua_usertype(tolua_S,"CCArmatureAnimation");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArmatureAnimation)), "CCArmatureAnimation");
 tolua_usertype(tolua_S,"ObjectFactory");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ObjectFactory)), "ObjectFactory");
 tolua_usertype(tolua_S,"Timeline");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Timeline)), "Timeline");
 tolua_usertype(tolua_S,"CCSpriteFrameCacheHelper");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSpriteFrameCacheHelper)), "CCSpriteFrameCacheHelper");
 tolua_usertype(tolua_S,"CCZone");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCZone)), "CCZone");
 tolua_usertype(tolua_S,"BaseTriggerAction");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(BaseTriggerAction)), "BaseTriggerAction");
 tolua_usertype(tolua_S,"stExpCocoObjectDesc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(stExpCocoObjectDesc)), "stExpCocoObjectDesc");
 tolua_usertype(tolua_S,"Slider");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Slider)), "Slider");
 tolua_usertype(tolua_S,"CCEaseQuadraticActionInOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuadraticActionInOut)), "CCEaseQuadraticActionInOut");
 tolua_usertype(tolua_S,"CCActionEase");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCActionEase)), "CCActionEase");
 tolua_usertype(tolua_S,"CCTweenFunction");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTweenFunction)), "CCTweenFunction");
 tolua_usertype(tolua_S,"CocoLoader");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CocoLoader)), "CocoLoader");
 tolua_usertype(tolua_S,"CCArmatureDisplayData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArmatureDisplayData)), "CCArmatureDisplayData");
 tolua_usertype(tolua_S,"CCNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCNode)), "CCNode");
 tolua_usertype(tolua_S,"CCComController");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCComController)), "CCComController");
 tolua_usertype(tolua_S,"CCEaseQuadraticActionOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuadraticActionOut)), "CCEaseQuadraticActionOut");
 tolua_usertype(tolua_S,"Margin");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Margin)), "Margin");
 tolua_usertype(tolua_S,"GUIReader");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(GUIReader)), "GUIReader");
 tolua_usertype(tolua_S,"RelativeLayoutParameter");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RelativeLayoutParameter)), "RelativeLayoutParameter");
 tolua_usertype(tolua_S,"TriggerObj");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TriggerObj)), "TriggerObj");
 tolua_usertype(tolua_S,"CCDisplayFactory");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCDisplayFactory)), "CCDisplayFactory");
 tolua_usertype(tolua_S,"ActionTimelineCache");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionTimelineCache)), "ActionTimelineCache");
 tolua_usertype(tolua_S,"stExpCocoNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(stExpCocoNode)), "stExpCocoNode");
 tolua_usertype(tolua_S,"HSV");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(HSV)), "HSV");
 tolua_usertype(tolua_S,"CCSortableObject");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSortableObject)), "CCSortableObject");
 tolua_usertype(tolua_S,"CCArmatureData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArmatureData)), "CCArmatureData");
 tolua_usertype(tolua_S,"ccColor3B");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ccColor3B)), "ccColor3B");
 tolua_usertype(tolua_S,"CCComAttribute");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCComAttribute)), "CCComAttribute");
 tolua_usertype(tolua_S,"stCocoFileHeader");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(stCocoFileHeader)), "stCocoFileHeader");
 tolua_usertype(tolua_S,"Frame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Frame)), "Frame");
 tolua_usertype(tolua_S,"LayoutParameter");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(LayoutParameter)), "LayoutParameter");
 tolua_usertype(tolua_S,"LabelBMFont");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(LabelBMFont)), "LabelBMFont");
 tolua_usertype(tolua_S,"CCIMEKeyboardNotificationInfo");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCIMEKeyboardNotificationInfo)), "CCIMEKeyboardNotificationInfo");
 tolua_usertype(tolua_S,"stExpCocoAttribDesc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(stExpCocoAttribDesc)), "stExpCocoAttribDesc");
 tolua_usertype(tolua_S,"CCComAudio");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCComAudio)), "CCComAudio");
 tolua_usertype(tolua_S,"ActionFadeFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionFadeFrame)), "ActionFadeFrame");
 tolua_usertype(tolua_S,"ccBlendFunc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ccBlendFunc)), "ccBlendFunc");
 tolua_usertype(tolua_S,"CCEditBox");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEditBox)), "CCEditBox");
 tolua_usertype(tolua_S,"InnerActionFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(InnerActionFrame)), "InnerActionFrame");
 tolua_usertype(tolua_S,"CCEaseCircleActionIn");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCircleActionIn)), "CCEaseCircleActionIn");
 tolua_usertype(tolua_S,"CCBoneData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCBoneData)), "CCBoneData");
 tolua_usertype(tolua_S,"ScrollView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ScrollView)), "ScrollView");
 tolua_usertype(tolua_S,"RichText");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RichText)), "RichText");
 tolua_usertype(tolua_S,"CCEaseQuarticActionInOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuarticActionInOut)), "CCEaseQuarticActionInOut");
 tolua_usertype(tolua_S,"Button");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Button)), "Button");
 tolua_usertype(tolua_S,"CCBatchNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCBatchNode)), "CCBatchNode");
 tolua_usertype(tolua_S,"ZOrderFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ZOrderFrame)), "ZOrderFrame");
 tolua_usertype(tolua_S,"CCSpriteDisplayData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSpriteDisplayData)), "CCSpriteDisplayData");
 tolua_usertype(tolua_S,"LinearLayoutParameter");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(LinearLayoutParameter)), "LinearLayoutParameter");
 tolua_usertype(tolua_S,"CCTextureData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTextureData)), "CCTextureData");
 tolua_usertype(tolua_S,"CCEaseCubicActionOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCubicActionOut)), "CCEaseCubicActionOut");
 tolua_usertype(tolua_S,"CCAffineTransform");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCAffineTransform)), "CCAffineTransform");
 tolua_usertype(tolua_S,"CCSkin");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSkin)), "CCSkin");
 tolua_usertype(tolua_S,"ActionScaleFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionScaleFrame)), "ActionScaleFrame");
 tolua_usertype(tolua_S,"CCTableViewDataSource");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTableViewDataSource)), "CCTableViewDataSource");
 tolua_usertype(tolua_S,"CCDecorativeDisplay");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCDecorativeDisplay)), "CCDecorativeDisplay");
 tolua_usertype(tolua_S,"CCComRender");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCComRender)), "CCComRender");
 tolua_usertype(tolua_S,"CCEaseCircleActionInOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCircleActionInOut)), "CCEaseCircleActionInOut");
 tolua_usertype(tolua_S,"ActionTintFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionTintFrame)), "ActionTintFrame");
 tolua_usertype(tolua_S,"CCCallFunc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCCallFunc)), "CCCallFunc");
 tolua_usertype(tolua_S,"CCMovementBoneData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCMovementBoneData)), "CCMovementBoneData");
 tolua_usertype(tolua_S,"UIScrollInterface");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(UIScrollInterface)), "UIScrollInterface");
 tolua_usertype(tolua_S,"Widget");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Widget)), "Widget");
 tolua_usertype(tolua_S,"CCControlSlider");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlSlider)), "CCControlSlider");
 tolua_usertype(tolua_S,"CCPoint");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCPoint)), "CCPoint");
 tolua_usertype(tolua_S,"RichElement");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RichElement)), "RichElement");
 tolua_usertype(tolua_S,"CCLayer");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCLayer)), "CCLayer");
 tolua_usertype(tolua_S,"Label");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(Label)), "Label");
 tolua_usertype(tolua_S,"TriggerMng");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TriggerMng)), "TriggerMng");
 tolua_usertype(tolua_S,"SkewFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(SkewFrame)), "SkewFrame");
 tolua_usertype(tolua_S,"CCAccelerometerDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCAccelerometerDelegate)), "CCAccelerometerDelegate");
 tolua_usertype(tolua_S,"TextField");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TextField)), "TextField");
 tolua_usertype(tolua_S,"CCSet");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSet)), "CCSet");
 tolua_usertype(tolua_S,"UICCLabelAtlas");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(UICCLabelAtlas)), "UICCLabelAtlas");
 tolua_usertype(tolua_S,"CCBone");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCBone)), "CCBone");
 tolua_usertype(tolua_S,"CCScrollView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCScrollView)), "CCScrollView");
 tolua_usertype(tolua_S,"CCColliderDetector");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCColliderDetector)), "CCColliderDetector");
 tolua_usertype(tolua_S,"CCProgressTimer");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCProgressTimer)), "CCProgressTimer");
 tolua_usertype(tolua_S,"EventFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(EventFrame)), "EventFrame");
 tolua_usertype(tolua_S,"CCInputDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCInputDelegate)), "CCInputDelegate");
 tolua_usertype(tolua_S,"PageViewDataSource");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(PageViewDataSource)), "PageViewDataSource");
 tolua_usertype(tolua_S,"ActionFrameEasing");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionFrameEasing)), "ActionFrameEasing");
 tolua_usertype(tolua_S,"CCEvent");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEvent)), "CCEvent");
 tolua_usertype(tolua_S,"CCDisplayManager");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCDisplayManager)), "CCDisplayManager");
 tolua_usertype(tolua_S,"TimelineActionData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TimelineActionData)), "TimelineActionData");
 tolua_usertype(tolua_S,"ObjectFactory::TInfo");
 tolua_usertype(tolua_S,"CCLabelAtlas");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCLabelAtlas)), "CCLabelAtlas");
 tolua_usertype(tolua_S,"RichElementCustomNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RichElementCustomNode)), "RichElementCustomNode");
 tolua_usertype(tolua_S,"CCBaseData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCBaseData)), "CCBaseData");
 tolua_usertype(tolua_S,"CCEaseQuinticActionIn");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuinticActionIn)), "CCEaseQuinticActionIn");
 tolua_usertype(tolua_S,"CCActionInterval");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCActionInterval)), "CCActionInterval");
 tolua_usertype(tolua_S,"CCProcessBase");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCProcessBase)), "CCProcessBase");
 tolua_usertype(tolua_S,"CCAcceleration");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCAcceleration)), "CCAcceleration");
 tolua_usertype(tolua_S,"CCObject");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCObject)), "CCObject");
 tolua_usertype(tolua_S,"CCSpriteFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSpriteFrame)), "CCSpriteFrame");
 tolua_usertype(tolua_S,"CCEaseCubicActionIn");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCubicActionIn)), "CCEaseCubicActionIn");
 tolua_usertype(tolua_S,"CCControlButton");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlButton)), "CCControlButton");
 tolua_usertype(tolua_S,"CCEaseBezierAction");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseBezierAction)), "CCEaseBezierAction");
 tolua_usertype(tolua_S,"CCCallFuncO");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCCallFuncO)), "CCCallFuncO");
 tolua_usertype(tolua_S,"BaseTriggerCondition");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(BaseTriggerCondition)), "BaseTriggerCondition");
 tolua_usertype(tolua_S,"ActionNode");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ActionNode)), "ActionNode");
 tolua_usertype(tolua_S,"CCEaseQuinticActionInOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuinticActionInOut)), "CCEaseQuinticActionInOut");
 tolua_usertype(tolua_S,"CCTableViewDelegate");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTableViewDelegate)), "CCTableViewDelegate");
 tolua_usertype(tolua_S,"CCTableView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTableView)), "CCTableView");
 tolua_usertype(tolua_S,"CCControlPotentiometer");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlPotentiometer)), "CCControlPotentiometer");
 tolua_usertype(tolua_S,"CCControlStepper");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlStepper)), "CCControlStepper");
 tolua_usertype(tolua_S,"CCSize");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCSize)), "CCSize");
 tolua_usertype(tolua_S,"CCDisplayData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCDisplayData)), "CCDisplayData");
 tolua_usertype(tolua_S,"ccColor4B");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ccColor4B)), "ccColor4B");
 tolua_usertype(tolua_S,"ScaleFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ScaleFrame)), "ScaleFrame");
 tolua_usertype(tolua_S,"CCArmature");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArmature)), "CCArmature");
 tolua_usertype(tolua_S,"CCArray");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCArray)), "CCArray");
 tolua_usertype(tolua_S,"RichElementText");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RichElementText)), "RichElementText");
 tolua_usertype(tolua_S,"ImageView");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ImageView)), "ImageView");
 tolua_usertype(tolua_S,"CCDictionary");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCDictionary)), "CCDictionary");
 tolua_usertype(tolua_S,"FrameCreateCallFunc");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(FrameCreateCallFunc)), "FrameCreateCallFunc");
 tolua_usertype(tolua_S,"CCLayerRGBA");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCLayerRGBA)), "CCLayerRGBA");
 tolua_usertype(tolua_S,"CCControl");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControl)), "CCControl");
 tolua_usertype(tolua_S,"RotationSkewFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(RotationSkewFrame)), "RotationSkewFrame");
 tolua_usertype(tolua_S,"UIHelper");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(UIHelper)), "UIHelper");
 tolua_usertype(tolua_S,"CCTextFieldTTF");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCTextFieldTTF)), "CCTextFieldTTF");
 tolua_usertype(tolua_S,"CCFrameData");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCFrameData)), "CCFrameData");
 tolua_usertype(tolua_S,"CCEaseCircleActionOut");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseCircleActionOut)), "CCEaseCircleActionOut");
 tolua_usertype(tolua_S,"TouchGroup");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(TouchGroup)), "TouchGroup");
 tolua_usertype(tolua_S,"CCEaseQuarticActionIn");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCEaseQuarticActionIn)), "CCEaseQuarticActionIn");
 tolua_usertype(tolua_S,"PositionFrame");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(PositionFrame)), "PositionFrame");
 tolua_usertype(tolua_S,"ScrollInnerContainer");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(ScrollInnerContainer)), "ScrollInnerContainer");
 tolua_usertype(tolua_S,"CCControlSwitch");
 toluafix_add_type_mapping(CLASS_HASH_CODE(typeid(CCControlSwitch)), "CCControlSwitch");
}

/* method: create of class  CCEaseCubicActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionInOut_create00
static int tolua_CocoStudio_CCEaseCubicActionInOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCubicActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCubicActionInOut* tolua_ret = (CCEaseCubicActionInOut*)  CCEaseCubicActionInOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCubicActionInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCubicActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionInOut_copyWithZone00
static int tolua_CocoStudio_CCEaseCubicActionInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionInOut* self = (CCEaseCubicActionInOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCubicActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionInOut_update00
static int tolua_CocoStudio_CCEaseCubicActionInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionInOut* self = (CCEaseCubicActionInOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCubicActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionInOut_reverse00
static int tolua_CocoStudio_CCEaseCubicActionInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionInOut* self = (CCEaseCubicActionInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getAction00
static int tolua_CocoStudio_ActionFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
  ActionFrame* srcFrame = ((ActionFrame*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration,srcFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getAction01
static int tolua_CocoStudio_ActionFrame_getAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_ActionFrame_getAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameType of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getFrameType00
static int tolua_CocoStudio_ActionFrame_getFrameType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameType'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getFrameType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameTime of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_setFrameTime00
static int tolua_CocoStudio_ActionFrame_setFrameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameTime'", NULL);
#endif
  {
   self->setFrameTime(fTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEasingType of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_setEasingType00
static int tolua_CocoStudio_ActionFrame_setEasingType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  int easingType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEasingType'", NULL);
#endif
  {
   self->setEasingType(easingType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEasingType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameTime of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getFrameTime00
static int tolua_CocoStudio_ActionFrame_getFrameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getFrameTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_delete00
static int tolua_CocoStudio_ActionFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_new00
static int tolua_CocoStudio_ActionFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFrame* tolua_ret = (ActionFrame*)  Mtolua_new((ActionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_new00_local
static int tolua_CocoStudio_ActionFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFrame* tolua_ret = (ActionFrame*)  Mtolua_new((ActionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameIndex of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getFrameIndex00
static int tolua_CocoStudio_ActionFrame_getFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameType of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_setFrameType00
static int tolua_CocoStudio_ActionFrame_setFrameType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  int frameType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameType'", NULL);
#endif
  {
   self->setFrameType(frameType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameIndex of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_setFrameIndex00
static int tolua_CocoStudio_ActionFrame_setFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameIndex'", NULL);
#endif
  {
   self->setFrameIndex(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEasingType of class  ActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrame_getEasingType00
static int tolua_CocoStudio_ActionFrame_getEasingType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrame* self = (ActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEasingType'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEasingType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEasingType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frameID of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_frameID
static int tolua_get_CCFrameData_frameID(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frameID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->frameID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frameID of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_frameID
static int tolua_set_CCFrameData_frameID(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frameID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frameID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: duration of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_duration
static int tolua_get_CCFrameData_duration(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->duration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: duration of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_duration
static int tolua_set_CCFrameData_duration(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->duration = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: easingParamNumber of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_easingParamNumber
static int tolua_get_CCFrameData_easingParamNumber(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'easingParamNumber'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->easingParamNumber);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: easingParamNumber of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_easingParamNumber
static int tolua_set_CCFrameData_easingParamNumber(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'easingParamNumber'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->easingParamNumber = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: isTween of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_isTween
static int tolua_get_CCFrameData_isTween(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isTween'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->isTween);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: isTween of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_isTween
static int tolua_set_CCFrameData_isTween(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isTween'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->isTween = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: displayIndex of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_displayIndex
static int tolua_get_CCFrameData_displayIndex(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->displayIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: displayIndex of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_displayIndex
static int tolua_set_CCFrameData_displayIndex(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->displayIndex = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: blendFunc of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_blendFunc
static int tolua_get_CCFrameData_blendFunc(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'blendFunc'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->blendFunc,"ccBlendFunc");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: blendFunc of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_blendFunc
static int tolua_set_CCFrameData_blendFunc(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'blendFunc'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccBlendFunc",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->blendFunc = *((ccBlendFunc*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: strEvent of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_strEvent
static int tolua_get_CCFrameData_strEvent(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strEvent'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->strEvent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: strEvent of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_strEvent
static int tolua_set_CCFrameData_strEvent(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strEvent'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->strEvent = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: strMovement of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_strMovement
static int tolua_get_CCFrameData_strMovement(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strMovement'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->strMovement);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: strMovement of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_strMovement
static int tolua_set_CCFrameData_strMovement(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strMovement'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->strMovement = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: strSound of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_strSound
static int tolua_get_CCFrameData_strSound(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strSound'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->strSound);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: strSound of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_strSound
static int tolua_set_CCFrameData_strSound(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strSound'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->strSound = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: strSoundEffect of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_get_CCFrameData_strSoundEffect
static int tolua_get_CCFrameData_strSoundEffect(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strSoundEffect'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->strSoundEffect);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: strSoundEffect of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_set_CCFrameData_strSoundEffect
static int tolua_set_CCFrameData_strSoundEffect(lua_State* tolua_S)
{
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'strSoundEffect'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->strSoundEffect = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCFrameData_create00
static int tolua_CocoStudio_CCFrameData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCFrameData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCFrameData* tolua_ret = (CCFrameData*)  CCFrameData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCFrameData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCFrameData_copy00
static int tolua_CocoStudio_CCFrameData_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCFrameData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
  const CCBaseData* node = ((const CCBaseData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   self->copy(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCFrameData_delete00
static int tolua_CocoStudio_CCFrameData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCFrameData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCFrameData* self = (CCFrameData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCFrameData_new00
static int tolua_CocoStudio_CCFrameData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCFrameData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCFrameData* tolua_ret = (CCFrameData*)  Mtolua_new((CCFrameData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCFrameData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCFrameData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCFrameData_new00_local
static int tolua_CocoStudio_CCFrameData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCFrameData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCFrameData* tolua_ret = (CCFrameData*)  Mtolua_new((CCFrameData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCFrameData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_create00
static int tolua_CocoStudio_TextField_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextField* tolua_ret = (TextField*)  TextField::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TextField");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_createInstance00
static int tolua_CocoStudio_TextField_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  TextField::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setAnchorPoint00
static int tolua_CocoStudio_TextField_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttachWithIME of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setAttachWithIME00
static int tolua_CocoStudio_TextField_setAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool attach = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttachWithIME'", NULL);
#endif
  {
   self->setAttachWithIME(attach);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFontSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getFontSize00
static int tolua_CocoStudio_TextField_getFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFontSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getFontSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_onEnter00
static int tolua_CocoStudio_TextField_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringValue of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getStringValue00
static int tolua_CocoStudio_TextField_getStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStringValue();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPasswordStyleText of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setPasswordStyleText00
static int tolua_CocoStudio_TextField_setPasswordStyleText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const char* styleText = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPasswordStyleText'", NULL);
#endif
  {
   self->setPasswordStyleText(styleText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPasswordStyleText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getDescription00
static int tolua_CocoStudio_TextField_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getVirtualRenderer00
static int tolua_CocoStudio_TextField_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDeleteBackward of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getDeleteBackward00
static int tolua_CocoStudio_TextField_getDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDeleteBackward'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getDeleteBackward();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlaceHolder of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getPlaceHolder00
static int tolua_CocoStudio_TextField_getPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlaceHolder'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getPlaceHolder();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttachWithIME of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getAttachWithIME00
static int tolua_CocoStudio_TextField_getAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAttachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontName of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setFontName00
static int tolua_CocoStudio_TextField_setFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const string name = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontName'", NULL);
#endif
  {
   self->setFontName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsertText of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getInsertText00
static int tolua_CocoStudio_TextField_getInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsertText'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getInsertText();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsertText of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setInsertText00
static int tolua_CocoStudio_TextField_setInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool insertText = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsertText'", NULL);
#endif
  {
   self->setInsertText(insertText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDetachWithIME of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getDetachWithIME00
static int tolua_CocoStudio_TextField_getDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDetachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getDetachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_delete00
static int tolua_CocoStudio_TextField_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextVerticalAlignment of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setTextVerticalAlignment00
static int tolua_CocoStudio_TextField_setTextVerticalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  CCVerticalTextAlignment alignment = ((CCVerticalTextAlignment) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextVerticalAlignment'", NULL);
#endif
  {
   self->setTextVerticalAlignment(alignment);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextVerticalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getContentSize00
static int tolua_CocoStudio_TextField_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: didNotSelectSelf of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_didNotSelectSelf00
static int tolua_CocoStudio_TextField_didNotSelectSelf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didNotSelectSelf'", NULL);
#endif
  {
   self->didNotSelectSelf();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didNotSelectSelf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFontName of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getFontName00
static int tolua_CocoStudio_TextField_getFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFontName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getFontName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextAreaSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setTextAreaSize00
static int tolua_CocoStudio_TextField_setTextAreaSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextAreaSize'", NULL);
#endif
  {
   self->setTextAreaSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextAreaSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: attachWithIME of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_attachWithIME00
static int tolua_CocoStudio_TextField_attachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'attachWithIME'", NULL);
#endif
  {
   self->attachWithIME();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'attachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPasswordEnabled of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setPasswordEnabled00
static int tolua_CocoStudio_TextField_setPasswordEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPasswordEnabled'", NULL);
#endif
  {
   self->setPasswordEnabled(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPasswordEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPasswordStyleText of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getPasswordStyleText00
static int tolua_CocoStudio_TextField_getPasswordStyleText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPasswordStyleText'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getPasswordStyleText();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPasswordStyleText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_update00
static int tolua_CocoStudio_TextField_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxLengthEnabled of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setMaxLengthEnabled00
static int tolua_CocoStudio_TextField_setMaxLengthEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxLengthEnabled'", NULL);
#endif
  {
   self->setMaxLengthEnabled(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxLengthEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPasswordEnabled of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_isPasswordEnabled00
static int tolua_CocoStudio_TextField_isPasswordEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPasswordEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPasswordEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPasswordEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDeleteBackward of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setDeleteBackward00
static int tolua_CocoStudio_TextField_setDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool deleteBackward = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDeleteBackward'", NULL);
#endif
  {
   self->setDeleteBackward(deleteBackward);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setFontSize00
static int tolua_CocoStudio_TextField_setFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  int size = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontSize'", NULL);
#endif
  {
   self->setFontSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceHolder of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setPlaceHolder00
static int tolua_CocoStudio_TextField_setPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const string value = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceHolder'", NULL);
#endif
  {
   self->setPlaceHolder(value);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchBegan of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_onTouchBegan00
static int tolua_CocoStudio_TextField_onTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTouchBegan(touch,unused_event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextHorizontalAlignment of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setTextHorizontalAlignment00
static int tolua_CocoStudio_TextField_setTextHorizontalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  CCTextAlignment alignment = ((CCTextAlignment) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextHorizontalAlignment'", NULL);
#endif
  {
   self->setTextHorizontalAlignment(alignment);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextHorizontalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxLength of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getMaxLength00
static int tolua_CocoStudio_TextField_getMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMaxLengthEnabled of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_isMaxLengthEnabled00
static int tolua_CocoStudio_TextField_isMaxLengthEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMaxLengthEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMaxLengthEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMaxLengthEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDetachWithIME of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setDetachWithIME00
static int tolua_CocoStudio_TextField_setDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool detach = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDetachWithIME'", NULL);
#endif
  {
   self->setDetachWithIME(detach);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setText00
static int tolua_CocoStudio_TextField_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const string text = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'", NULL);
#endif
  {
   self->setText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchAreaEnabled of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setTouchAreaEnabled00
static int tolua_CocoStudio_TextField_setTouchAreaEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchAreaEnabled'", NULL);
#endif
  {
   self->setTouchAreaEnabled(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchAreaEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hitTest of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_hitTest00
static int tolua_CocoStudio_TextField_hitTest00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hitTest'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hitTest(*pt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hitTest'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxLength of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setMaxLength00
static int tolua_CocoStudio_TextField_setMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  int length = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxLength'", NULL);
#endif
  {
   self->setMaxLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_setTouchSize00
static int tolua_CocoStudio_TextField_setTouchSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchSize'", NULL);
#endif
  {
   self->setTouchSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_new00
static int tolua_CocoStudio_TextField_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextField* tolua_ret = (TextField*)  Mtolua_new((TextField)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TextField");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_new00_local
static int tolua_CocoStudio_TextField_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextField* tolua_ret = (TextField*)  Mtolua_new((TextField)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TextField");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchSize of class  TextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextField_getTouchSize00
static int tolua_CocoStudio_TextField_getTouchSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextField* self = (TextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getTouchSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollViewDidScroll of class  CCScrollViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidScroll00
static int tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidScroll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollViewDelegate* self = (CCScrollViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCScrollView* view = ((CCScrollView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollViewDidScroll'", NULL);
#endif
  {
   self->scrollViewDidScroll(view);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollViewDidScroll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollViewDidZoom of class  CCScrollViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidZoom00
static int tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidZoom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollViewDelegate* self = (CCScrollViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCScrollView* view = ((CCScrollView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollViewDidZoom'", NULL);
#endif
  {
   self->scrollViewDidZoom(view);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollViewDidZoom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCScrollViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollViewDelegate_delete00
static int tolua_CocoStudio_CCScrollViewDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollViewDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollViewDelegate* self = (CCScrollViewDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseCubicActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionIn_create00
static int tolua_CocoStudio_CCEaseCubicActionIn_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCubicActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCubicActionIn* tolua_ret = (CCEaseCubicActionIn*)  CCEaseCubicActionIn::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCubicActionIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCubicActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionIn_copyWithZone00
static int tolua_CocoStudio_CCEaseCubicActionIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionIn* self = (CCEaseCubicActionIn*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCubicActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionIn_update00
static int tolua_CocoStudio_CCEaseCubicActionIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionIn* self = (CCEaseCubicActionIn*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCubicActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionIn_reverse00
static int tolua_CocoStudio_CCEaseCubicActionIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionIn* self = (CCEaseCubicActionIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: delay of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementBoneData_delay
static int tolua_get_CCMovementBoneData_delay(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'delay'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->delay);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: delay of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementBoneData_delay
static int tolua_set_CCMovementBoneData_delay(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'delay'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->delay = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: scale of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementBoneData_scale
static int tolua_get_CCMovementBoneData_scale(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->scale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: scale of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementBoneData_scale
static int tolua_set_CCMovementBoneData_scale(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->scale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: duration of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementBoneData_duration
static int tolua_get_CCMovementBoneData_duration(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->duration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: duration of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementBoneData_duration
static int tolua_set_CCMovementBoneData_duration(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->duration = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementBoneData_name
static int tolua_get_CCMovementBoneData_name(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementBoneData_name
static int tolua_set_CCMovementBoneData_name(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frameList of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementBoneData_frameList
static int tolua_get_CCMovementBoneData_frameList(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frameList'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->frameList,"CCArray");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frameList of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementBoneData_frameList
static int tolua_set_CCMovementBoneData_frameList(lua_State* tolua_S)
{
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frameList'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frameList = *((CCArray*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_create00
static int tolua_CocoStudio_CCMovementBoneData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementBoneData* tolua_ret = (CCMovementBoneData*)  CCMovementBoneData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_init00
static int tolua_CocoStudio_CCMovementBoneData_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_delete00
static int tolua_CocoStudio_CCMovementBoneData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrameData of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_addFrameData00
static int tolua_CocoStudio_CCMovementBoneData_addFrameData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCFrameData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
  CCFrameData* frameData = ((CCFrameData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrameData'", NULL);
#endif
  {
   self->addFrameData(frameData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrameData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameData of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_getFrameData00
static int tolua_CocoStudio_CCMovementBoneData_getFrameData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementBoneData* self = (CCMovementBoneData*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameData'", NULL);
#endif
  {
   CCFrameData* tolua_ret = (CCFrameData*)  self->getFrameData(index);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCFrameData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_new00
static int tolua_CocoStudio_CCMovementBoneData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementBoneData* tolua_ret = (CCMovementBoneData*)  Mtolua_new((CCMovementBoneData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCMovementBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementBoneData_new00_local
static int tolua_CocoStudio_CCMovementBoneData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementBoneData* tolua_ret = (CCMovementBoneData*)  Mtolua_new((CCMovementBoneData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementBoneData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_create00
static int tolua_CocoStudio_RotationFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationFrame* tolua_ret = (RotationFrame*)  RotationFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_onEnter00
static int tolua_CocoStudio_RotationFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationFrame* self = (RotationFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_clone00
static int tolua_CocoStudio_RotationFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationFrame* self = (RotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_new00
static int tolua_CocoStudio_RotationFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationFrame* tolua_ret = (RotationFrame*)  Mtolua_new((RotationFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_new00_local
static int tolua_CocoStudio_RotationFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationFrame* tolua_ret = (RotationFrame*)  Mtolua_new((RotationFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_getRotation00
static int tolua_CocoStudio_RotationFrame_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationFrame* self = (RotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRotation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_setRotation00
static int tolua_CocoStudio_RotationFrame_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationFrame* self = (RotationFrame*)  tolua_tousertype(tolua_S,1,0);
  float rotation = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'", NULL);
#endif
  {
   self->setRotation(rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  RotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationFrame_apply00
static int tolua_CocoStudio_RotationFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationFrame* self = (RotationFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_create00
static int tolua_CocoStudio_Widget_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Widget* tolua_ret = (Widget*)  Widget::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addChild00
static int tolua_CocoStudio_Widget_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addChild01
static int tolua_CocoStudio_Widget_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addChild02
static int tolua_CocoStudio_Widget_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getVirtualRenderer00
static int tolua_CocoStudio_Widget_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCustomSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getCustomSize00
static int tolua_CocoStudio_Widget_getCustomSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCustomSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getCustomSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCustomSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActionTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setActionTag00
static int tolua_CocoStudio_Widget_setActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActionTag'", NULL);
#endif
  {
   self->setActionTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getDescription00
static int tolua_CocoStudio_Widget_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getSize00
static int tolua_CocoStudio_Widget_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildren of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getChildren00
static int tolua_CocoStudio_Widget_getChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildren'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getChildren();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchEnded of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onTouchEnded00
static int tolua_CocoStudio_Widget_onTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchEnded'", NULL);
#endif
  {
   self->onTouchEnded(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPositionType of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getPositionType00
static int tolua_CocoStudio_Widget_getPositionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPositionType'", NULL);
#endif
  {
   PositionType tolua_ret = (PositionType)  self->getPositionType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPositionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildByName of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getChildByName00
static int tolua_CocoStudio_Widget_getChildByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildByName'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getChildByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isEnabled00
static int tolua_CocoStudio_Widget_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFlipX of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isFlipX00
static int tolua_CocoStudio_Widget_isFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFlipX'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFlipX();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFlipY of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isFlipY00
static int tolua_CocoStudio_Widget_isFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFlipY'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFlipY();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeNodeByTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeNodeByTag00
static int tolua_CocoStudio_Widget_removeNodeByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeNodeByTag'", NULL);
#endif
  {
   self->removeNodeByTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeNodeByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: didNotSelectSelf of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_didNotSelectSelf00
static int tolua_CocoStudio_Widget_didNotSelectSelf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didNotSelectSelf'", NULL);
#endif
  {
   self->didNotSelectSelf();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didNotSelectSelf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFocused of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setFocused00
static int tolua_CocoStudio_Widget_setFocused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool fucosed = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFocused'", NULL);
#endif
  {
   self->setFocused(fucosed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFocused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutParameter of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getLayoutParameter00
static int tolua_CocoStudio_Widget_getLayoutParameter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  LayoutParameterType type = ((LayoutParameterType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutParameter'", NULL);
#endif
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  self->getLayoutParameter(type);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutParameter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getColor00
static int tolua_CocoStudio_Widget_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBright of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isBright00
static int tolua_CocoStudio_Widget_isBright00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBright'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBright();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBright'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateSizeAndPosition of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_updateSizeAndPosition00
static int tolua_CocoStudio_Widget_updateSizeAndPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* parentSize = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateSizeAndPosition'", NULL);
#endif
  {
   self->updateSizeAndPosition(*parentSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateSizeAndPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateSizeAndPosition of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_updateSizeAndPosition01
static int tolua_CocoStudio_Widget_updateSizeAndPosition01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateSizeAndPosition'", NULL);
#endif
  {
   self->updateSizeAndPosition();
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_updateSizeAndPosition00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSizeType of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getSizeType00
static int tolua_CocoStudio_Widget_getSizeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSizeType'", NULL);
#endif
  {
   SizeType tolua_ret = (SizeType)  self->getSizeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSizeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onExit00
static int tolua_CocoStudio_Widget_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPositionPercent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getPositionPercent00
static int tolua_CocoStudio_Widget_getPositionPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPositionPercent'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getPositionPercent();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPositionPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeChild00
static int tolua_CocoStudio_Widget_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeChild01
static int tolua_CocoStudio_Widget_removeChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_removeChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: moveEvent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_moveEvent00
static int tolua_CocoStudio_Widget_moveEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'moveEvent'", NULL);
#endif
  {
   self->moveEvent();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'moveEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setSize00
static int tolua_CocoStudio_Widget_setSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSize'", NULL);
#endif
  {
   self->setSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildren of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeAllChildren00
static int tolua_CocoStudio_Widget_removeAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildren'", NULL);
#endif
  {
   self->removeAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseUpEvent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_releaseUpEvent00
static int tolua_CocoStudio_Widget_releaseUpEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseUpEvent'", NULL);
#endif
  {
   self->releaseUpEvent();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseUpEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSizePercent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getSizePercent00
static int tolua_CocoStudio_Widget_getSizePercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSizePercent'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getSizePercent();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSizePercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getLayoutSize00
static int tolua_CocoStudio_Widget_getLayoutSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getLayoutSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPositionType of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setPositionType00
static int tolua_CocoStudio_Widget_setPositionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  PositionType type = ((PositionType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPositionType'", NULL);
#endif
  {
   self->setPositionType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPositionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getContentSize00
static int tolua_CocoStudio_Widget_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getName00
static int tolua_CocoStudio_Widget_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchEnabled of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isTouchEnabled00
static int tolua_CocoStudio_Widget_isTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchEnabled of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setTouchEnabled00
static int tolua_CocoStudio_Widget_setTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchEnabled'", NULL);
#endif
  {
   self->setTouchEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayoutParameter of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setLayoutParameter00
static int tolua_CocoStudio_Widget_setLayoutParameter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  LayoutParameter* parameter = ((LayoutParameter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayoutParameter'", NULL);
#endif
  {
   self->setLayoutParameter(parameter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayoutParameter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeAllChildrenWithCleanup00
static int tolua_CocoStudio_Widget_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchBegan of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onTouchBegan00
static int tolua_CocoStudio_Widget_onTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTouchBegan(touch,unused_event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clippingParentAreaContainPoint of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_clippingParentAreaContainPoint00
static int tolua_CocoStudio_Widget_clippingParentAreaContainPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clippingParentAreaContainPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->clippingParentAreaContainPoint(*pt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clippingParentAreaContainPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFromParentAndCleanup of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeFromParentAndCleanup00
static int tolua_CocoStudio_Widget_removeFromParentAndCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFromParentAndCleanup'", NULL);
#endif
  {
   self->removeFromParentAndCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFromParentAndCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setPosition00
static int tolua_CocoStudio_Widget_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pos = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setColor00
static int tolua_CocoStudio_Widget_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllNodes of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeAllNodes00
static int tolua_CocoStudio_Widget_removeAllNodes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllNodes'", NULL);
#endif
  {
   self->removeAllNodes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllNodes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFocused of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isFocused00
static int tolua_CocoStudio_Widget_isFocused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFocused'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFocused();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFocused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_new00
static int tolua_CocoStudio_Widget_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Widget* tolua_ret = (Widget*)  Mtolua_new((Widget)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_new00_local
static int tolua_CocoStudio_Widget_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Widget* tolua_ret = (Widget*)  Mtolua_new((Widget)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildrenCount of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getChildrenCount00
static int tolua_CocoStudio_Widget_getChildrenCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildrenCount'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getChildrenCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildrenCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onEnter00
static int tolua_CocoStudio_Widget_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLeftInParent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getLeftInParent00
static int tolua_CocoStudio_Widget_getLeftInParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLeftInParent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLeftInParent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLeftInParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPositionPercent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setPositionPercent00
static int tolua_CocoStudio_Widget_setPositionPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* percent = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPositionPercent'", NULL);
#endif
  {
   self->setPositionPercent(*percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPositionPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodes of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getNodes00
static int tolua_CocoStudio_Widget_getNodes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodes'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getNodes();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addNode00
static int tolua_CocoStudio_Widget_addNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addNode01
static int tolua_CocoStudio_Widget_addNode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_addNode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_addNode02
static int tolua_CocoStudio_Widget_addNode02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Widget_addNode01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBottomInParent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getBottomInParent00
static int tolua_CocoStudio_Widget_getBottomInParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBottomInParent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBottomInParent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBottomInParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_Widget_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_visit00
static int tolua_CocoStudio_Widget_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_delete00
static int tolua_CocoStudio_Widget_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setEnabled00
static int tolua_CocoStudio_Widget_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeNode of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeNode00
static int tolua_CocoStudio_Widget_removeNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeNode'", NULL);
#endif
  {
   self->removeNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBrightStyle of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setBrightStyle00
static int tolua_CocoStudio_Widget_setBrightStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  BrightStyle style = ((BrightStyle) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBrightStyle'", NULL);
#endif
  {
   self->setBrightStyle(style);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBrightStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setName00
static int tolua_CocoStudio_Widget_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFlipY of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setFlipY00
static int tolua_CocoStudio_Widget_setFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool flipY = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFlipY'", NULL);
#endif
  {
   self->setFlipY(flipY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFlipX of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setFlipX00
static int tolua_CocoStudio_Widget_setFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool flipX = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFlipX'", NULL);
#endif
  {
   self->setFlipX(flipX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchCancelled of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onTouchCancelled00
static int tolua_CocoStudio_Widget_onTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchCancelled'", NULL);
#endif
  {
   self->onTouchCancelled(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodeByTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getNodeByTag00
static int tolua_CocoStudio_Widget_getNodeByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodeByTag'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getNodeByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodeByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChildByTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeChildByTag00
static int tolua_CocoStudio_Widget_removeChildByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChildByTag'", NULL);
#endif
  {
   self->removeChildByTag(tag,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChildByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hitTest of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_hitTest00
static int tolua_CocoStudio_Widget_hitTest00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hitTest'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hitTest(*pt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hitTest'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSizePercent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setSizePercent00
static int tolua_CocoStudio_Widget_setSizePercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* percent = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSizePercent'", NULL);
#endif
  {
   self->setSizePercent(*percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSizePercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScriptObjectDict of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setScriptObjectDict00
static int tolua_CocoStudio_Widget_setScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* scriptObjectDict = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScriptObjectDict'", NULL);
#endif
  {
   self->setScriptObjectDict(scriptObjectDict);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchEndPos of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getTouchEndPos00
static int tolua_CocoStudio_Widget_getTouchEndPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchEndPos'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getTouchEndPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchEndPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildByTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getChildByTag00
static int tolua_CocoStudio_Widget_getChildByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildByTag'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getChildByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isIgnoreContentAdaptWithSize of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_isIgnoreContentAdaptWithSize00
static int tolua_CocoStudio_Widget_isIgnoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isIgnoreContentAdaptWithSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isIgnoreContentAdaptWithSize();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isIgnoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushDownEvent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_pushDownEvent00
static int tolua_CocoStudio_Widget_pushDownEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushDownEvent'", NULL);
#endif
  {
   self->pushDownEvent();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushDownEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWidgetType of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getWidgetType00
static int tolua_CocoStudio_Widget_getWidgetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWidgetType'", NULL);
#endif
  {
   WidgetType tolua_ret = (WidgetType)  self->getWidgetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWidgetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setOpacity00
static int tolua_CocoStudio_Widget_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionTag of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getActionTag00
static int tolua_CocoStudio_Widget_getActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getActionTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getOpacity00
static int tolua_CocoStudio_Widget_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancelUpEvent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_cancelUpEvent00
static int tolua_CocoStudio_Widget_cancelUpEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancelUpEvent'", NULL);
#endif
  {
   self->cancelUpEvent();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancelUpEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchMovePos of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getTouchMovePos00
static int tolua_CocoStudio_Widget_getTouchMovePos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchMovePos'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getTouchMovePos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchMovePos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchMoved of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_onTouchMoved00
static int tolua_CocoStudio_Widget_onTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchMoved'", NULL);
#endif
  {
   self->onTouchMoved(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFromParent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_removeFromParent00
static int tolua_CocoStudio_Widget_removeFromParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFromParent'", NULL);
#endif
  {
   self->removeFromParent();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFromParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorldPosition of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getWorldPosition00
static int tolua_CocoStudio_Widget_getWorldPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorldPosition'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getWorldPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorldPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_clone00
static int tolua_CocoStudio_Widget_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->clone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sortAllChildren of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_sortAllChildren00
static int tolua_CocoStudio_Widget_sortAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sortAllChildren'", NULL);
#endif
  {
   self->sortAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sortAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkChildInfo of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_checkChildInfo00
static int tolua_CocoStudio_Widget_checkChildInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Widget",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  int handleState = ((int)  tolua_tonumber(tolua_S,2,0));
  Widget* sender = ((Widget*)  tolua_tousertype(tolua_S,3,0));
  const CCPoint* touchPoint = ((const CCPoint*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkChildInfo'", NULL);
#endif
  {
   self->checkChildInfo(handleState,sender,*touchPoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkChildInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTopInParent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getTopInParent00
static int tolua_CocoStudio_Widget_getTopInParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTopInParent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTopInParent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTopInParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScriptObjectDict of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getScriptObjectDict00
static int tolua_CocoStudio_Widget_getScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScriptObjectDict'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getScriptObjectDict();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRightInParent of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getRightInParent00
static int tolua_CocoStudio_Widget_getRightInParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRightInParent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRightInParent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRightInParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchStartPos of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_getTouchStartPos00
static int tolua_CocoStudio_Widget_getTouchStartPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchStartPos'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getTouchStartPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchStartPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSizeType of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setSizeType00
static int tolua_CocoStudio_Widget_setSizeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  SizeType type = ((SizeType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSizeType'", NULL);
#endif
  {
   self->setSizeType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSizeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBright of class  Widget */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Widget_setBright00
static int tolua_CocoStudio_Widget_setBright00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Widget",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* self = (Widget*)  tolua_tousertype(tolua_S,1,0);
  bool bright = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBright'", NULL);
#endif
  {
   self->setBright(bright);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBright'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_create00
static int tolua_CocoStudio_ZOrderFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ZOrderFrame* tolua_ret = (ZOrderFrame*)  ZOrderFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ZOrderFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZOrder of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_getZOrder00
static int tolua_CocoStudio_ZOrderFrame_getZOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ZOrderFrame* self = (ZOrderFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZOrder'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getZOrder();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_clone00
static int tolua_CocoStudio_ZOrderFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ZOrderFrame* self = (ZOrderFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZOrder of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_setZOrder00
static int tolua_CocoStudio_ZOrderFrame_setZOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ZOrderFrame* self = (ZOrderFrame*)  tolua_tousertype(tolua_S,1,0);
  int zorder = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZOrder'", NULL);
#endif
  {
   self->setZOrder(zorder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_onEnter00
static int tolua_CocoStudio_ZOrderFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ZOrderFrame* self = (ZOrderFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_new00
static int tolua_CocoStudio_ZOrderFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ZOrderFrame* tolua_ret = (ZOrderFrame*)  Mtolua_new((ZOrderFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ZOrderFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ZOrderFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ZOrderFrame_new00_local
static int tolua_CocoStudio_ZOrderFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ZOrderFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ZOrderFrame* tolua_ret = (ZOrderFrame*)  Mtolua_new((ZOrderFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ZOrderFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_create00
static int tolua_CocoStudio_Slider_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Slider* tolua_ret = (Slider*)  Slider::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Slider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_createInstance00
static int tolua_CocoStudio_Slider_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  Slider::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPercent of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_setPercent00
static int tolua_CocoStudio_Slider_setPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  int percent = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPercent'", NULL);
#endif
  {
   self->setPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getVirtualRenderer00
static int tolua_CocoStudio_Slider_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchEnded of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_onTouchEnded00
static int tolua_CocoStudio_Slider_onTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchEnded'", NULL);
#endif
  {
   self->onTouchEnded(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSlidBallTextureNormal of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadSlidBallTextureNormal00
static int tolua_CocoStudio_Slider_loadSlidBallTextureNormal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* normal = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSlidBallTextureNormal'", NULL);
#endif
  {
   self->loadSlidBallTextureNormal(normal,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSlidBallTextureNormal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadProgressBarTexture of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadProgressBarTexture00
static int tolua_CocoStudio_Slider_loadProgressBarTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadProgressBarTexture'", NULL);
#endif
  {
   self->loadProgressBarTexture(fileName,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadProgressBarTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getDescription00
static int tolua_CocoStudio_Slider_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale9Enabled of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_setScale9Enabled00
static int tolua_CocoStudio_Slider_setScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  bool able = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale9Enabled'", NULL);
#endif
  {
   self->setScale9Enabled(able);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsetBarRenderer of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getCapInsetBarRenderer00
static int tolua_CocoStudio_Slider_getCapInsetBarRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsetBarRenderer'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsetBarRenderer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsetBarRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_Slider_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSlidBallTextures of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadSlidBallTextures00
static int tolua_CocoStudio_Slider_loadSlidBallTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* normal = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* pressed = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* disabled = ((const char*)  tolua_tostring(tolua_S,4,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSlidBallTextures'", NULL);
#endif
  {
   self->loadSlidBallTextures(normal,pressed,disabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSlidBallTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_delete00
static int tolua_CocoStudio_Slider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getContentSize00
static int tolua_CocoStudio_Slider_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchMoved of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_onTouchMoved00
static int tolua_CocoStudio_Slider_onTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchMoved'", NULL);
#endif
  {
   self->onTouchMoved(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadBarTexture of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadBarTexture00
static int tolua_CocoStudio_Slider_loadBarTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadBarTexture'", NULL);
#endif
  {
   self->loadBarTexture(fileName,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadBarTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchCancelled of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_onTouchCancelled00
static int tolua_CocoStudio_Slider_onTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchCancelled'", NULL);
#endif
  {
   self->onTouchCancelled(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchBegan of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_onTouchBegan00
static int tolua_CocoStudio_Slider_onTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTouchBegan(touch,unused_event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSlidBallTexturePressed of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadSlidBallTexturePressed00
static int tolua_CocoStudio_Slider_loadSlidBallTexturePressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* pressed = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSlidBallTexturePressed'", NULL);
#endif
  {
   self->loadSlidBallTexturePressed(pressed,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSlidBallTexturePressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isScale9Enabled of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_isScale9Enabled00
static int tolua_CocoStudio_Slider_isScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isScale9Enabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isScale9Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsetProgressBarRebderer of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_setCapInsetProgressBarRebderer00
static int tolua_CocoStudio_Slider_setCapInsetProgressBarRebderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsetProgressBarRebderer'", NULL);
#endif
  {
   self->setCapInsetProgressBarRebderer(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsetProgressBarRebderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsetsBarRenderer of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_setCapInsetsBarRenderer00
static int tolua_CocoStudio_Slider_setCapInsetsBarRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsetsBarRenderer'", NULL);
#endif
  {
   self->setCapInsetsBarRenderer(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsetsBarRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsets of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_setCapInsets00
static int tolua_CocoStudio_Slider_setCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsets'", NULL);
#endif
  {
   self->setCapInsets(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_new00
static int tolua_CocoStudio_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Slider* tolua_ret = (Slider*)  Mtolua_new((Slider)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Slider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_new00_local
static int tolua_CocoStudio_Slider_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Slider* tolua_ret = (Slider*)  Mtolua_new((Slider)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Slider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSlidBallTextureDisabled of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_loadSlidBallTextureDisabled00
static int tolua_CocoStudio_Slider_loadSlidBallTextureDisabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
  const char* disabled = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSlidBallTextureDisabled'", NULL);
#endif
  {
   self->loadSlidBallTextureDisabled(disabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSlidBallTextureDisabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPercent of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getPercent00
static int tolua_CocoStudio_Slider_getPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPercent'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsetProgressBarRebderer of class  Slider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Slider_getCapInsetProgressBarRebderer00
static int tolua_CocoStudio_Slider_getCapInsetProgressBarRebderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Slider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Slider* self = (Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsetProgressBarRebderer'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsetProgressBarRebderer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsetProgressBarRebderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_onEnter00
static int tolua_CocoStudio_CCControl_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sendActionsForControlEvents of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_sendActionsForControlEvents00
static int tolua_CocoStudio_CCControl_sendActionsForControlEvents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  unsigned int controlEvents = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sendActionsForControlEvents'", NULL);
#endif
  {
   self->sendActionsForControlEvents(controlEvents);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendActionsForControlEvents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelected of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_setSelected00
static int tolua_CocoStudio_CCControl_setSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  bool bSelected = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelected'", NULL);
#endif
  {
   self->setSelected(bSelected);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasVisibleParents of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_hasVisibleParents00
static int tolua_CocoStudio_CCControl_hasVisibleParents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasVisibleParents'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasVisibleParents();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasVisibleParents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHighlighted of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_setHighlighted00
static int tolua_CocoStudio_CCControl_setHighlighted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  bool bHighlighted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHighlighted'", NULL);
#endif
  {
   self->setHighlighted(bHighlighted);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHighlighted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isHighlighted of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_isHighlighted00
static int tolua_CocoStudio_CCControl_isHighlighted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isHighlighted'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isHighlighted();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHighlighted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeHandleOfControlEvent of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_removeHandleOfControlEvent00
static int tolua_CocoStudio_CCControl_removeHandleOfControlEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  unsigned int controlEvent = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeHandleOfControlEvent'", NULL);
#endif
  {
   self->removeHandleOfControlEvent(controlEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeHandleOfControlEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOpacityModifyRGB of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_isOpacityModifyRGB00
static int tolua_CocoStudio_CCControl_isOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOpacityModifyRGB'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOpacityModifyRGB();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_isEnabled00
static int tolua_CocoStudio_CCControl_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacityModifyRGB of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_setOpacityModifyRGB00
static int tolua_CocoStudio_CCControl_setOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  bool bOpacityModifyRGB = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacityModifyRGB'", NULL);
#endif
  {
   self->setOpacityModifyRGB(bOpacityModifyRGB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_delete00
static int tolua_CocoStudio_CCControl_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSelected of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_isSelected00
static int tolua_CocoStudio_CCControl_isSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSelected'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSelected();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_init00
static int tolua_CocoStudio_CCControl_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_setEnabled00
static int tolua_CocoStudio_CCControl_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  bool bEnabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(bEnabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getState of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_getState00
static int tolua_CocoStudio_CCControl_getState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getState'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needsLayout of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_needsLayout00
static int tolua_CocoStudio_CCControl_needsLayout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needsLayout'", NULL);
#endif
  {
   self->needsLayout();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needsLayout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addHandleOfControlEvent of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_addHandleOfControlEvent00
static int tolua_CocoStudio_CCControl_addHandleOfControlEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  int nFunID = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int controlEvent = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addHandleOfControlEvent'", NULL);
#endif
  {
   self->addHandleOfControlEvent(nFunID,controlEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addHandleOfControlEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchLocation of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_getTouchLocation00
static int tolua_CocoStudio_CCControl_getTouchLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchLocation'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getTouchLocation(touch);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_onExit00
static int tolua_CocoStudio_CCControl_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchInside of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_isTouchInside00
static int tolua_CocoStudio_CCControl_isTouchInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchInside'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchInside(touch);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_new00
static int tolua_CocoStudio_CCControl_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControl* tolua_ret = (CCControl*)  Mtolua_new((CCControl)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_new00_local
static int tolua_CocoStudio_CCControl_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControl* tolua_ret = (CCControl*)  Mtolua_new((CCControl)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControl");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerWithTouchDispatcher of class  CCControl */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControl_registerWithTouchDispatcher00
static int tolua_CocoStudio_CCControl_registerWithTouchDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControl* self = (CCControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerWithTouchDispatcher'", NULL);
#endif
  {
   self->registerWithTouchDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerWithTouchDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCParticleDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCParticleDisplayData_create00
static int tolua_CocoStudio_CCParticleDisplayData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCParticleDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCParticleDisplayData* tolua_ret = (CCParticleDisplayData*)  CCParticleDisplayData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCParticleDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCParticleDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCParticleDisplayData_delete00
static int tolua_CocoStudio_CCParticleDisplayData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCParticleDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCParticleDisplayData* self = (CCParticleDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCParticleDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCParticleDisplayData_new00
static int tolua_CocoStudio_CCParticleDisplayData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCParticleDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCParticleDisplayData* tolua_ret = (CCParticleDisplayData*)  Mtolua_new((CCParticleDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCParticleDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCParticleDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCParticleDisplayData_new00_local
static int tolua_CocoStudio_CCParticleDisplayData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCParticleDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCParticleDisplayData* tolua_ret = (CCParticleDisplayData*)  Mtolua_new((CCParticleDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCParticleDisplayData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: displayName of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_get_CCDisplayData_displayName
static int tolua_get_CCDisplayData_displayName(lua_State* tolua_S)
{
  CCDisplayData* self = (CCDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->displayName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: displayName of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_set_CCDisplayData_displayName
static int tolua_set_CCDisplayData_displayName(lua_State* tolua_S)
{
  CCDisplayData* self = (CCDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->displayName = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeDisplayToTexture of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_changeDisplayToTexture00
static int tolua_CocoStudio_CCDisplayData_changeDisplayToTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* displayName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   const char* tolua_ret = (const char*)  CCDisplayData::changeDisplayToTexture(displayName);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeDisplayToTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_create00
static int tolua_CocoStudio_CCDisplayData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDisplayData* tolua_ret = (CCDisplayData*)  CCDisplayData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_copy00
static int tolua_CocoStudio_CCDisplayData_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayData* self = (CCDisplayData*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   self->copy(displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_delete00
static int tolua_CocoStudio_CCDisplayData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayData* self = (CCDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_new00
static int tolua_CocoStudio_CCDisplayData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDisplayData* tolua_ret = (CCDisplayData*)  Mtolua_new((CCDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayData_new00_local
static int tolua_CocoStudio_CCDisplayData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDisplayData* tolua_ret = (CCDisplayData*)  Mtolua_new((CCDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_reset00
static int tolua_CocoStudio_CCTableViewCell_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIdx of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_setIdx00
static int tolua_CocoStudio_CCTableViewCell_setIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIdx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIdx'", NULL);
#endif
  {
   self->setIdx(uIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjectID of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_setObjectID00
static int tolua_CocoStudio_CCTableViewCell_setObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIdx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjectID'", NULL);
#endif
  {
   self->setObjectID(uIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_setName00
static int tolua_CocoStudio_CCTableViewCell_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
  const string var = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(var);
   tolua_pushcppstring(tolua_S,(const char*)var);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectID of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_getObjectID00
static int tolua_CocoStudio_CCTableViewCell_getObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectID'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getObjectID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_getName00
static int tolua_CocoStudio_CCTableViewCell_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   const string tolua_ret = (const string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_new00
static int tolua_CocoStudio_CCTableViewCell_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTableViewCell* tolua_ret = (CCTableViewCell*)  Mtolua_new((CCTableViewCell)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_new00_local
static int tolua_CocoStudio_CCTableViewCell_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTableViewCell* tolua_ret = (CCTableViewCell*)  Mtolua_new((CCTableViewCell)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewCell");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIdx of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewCell_getIdx00
static int tolua_CocoStudio_CCTableViewCell_getIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIdx'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getIdx();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCSortableObject__ of class  CCTableViewCell */
#ifndef TOLUA_DISABLE_tolua_get_CCTableViewCell___CCSortableObject__
static int tolua_get_CCTableViewCell___CCSortableObject__(lua_State* tolua_S)
{
  CCTableViewCell* self = (CCTableViewCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCSortableObject__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCSortableObject*>(self), "CCSortableObject");
#else
   tolua_pushusertype(tolua_S,(void*)((CCSortableObject*)self), "CCSortableObject");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_create00
static int tolua_CocoStudio_RotationSkewFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationSkewFrame* tolua_ret = (RotationSkewFrame*)  RotationSkewFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationSkewFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_apply00
static int tolua_CocoStudio_RotationSkewFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationSkewFrame* self = (RotationSkewFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_clone00
static int tolua_CocoStudio_RotationSkewFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationSkewFrame* self = (RotationSkewFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_onEnter00
static int tolua_CocoStudio_RotationSkewFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RotationSkewFrame* self = (RotationSkewFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_new00
static int tolua_CocoStudio_RotationSkewFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationSkewFrame* tolua_ret = (RotationSkewFrame*)  Mtolua_new((RotationSkewFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationSkewFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RotationSkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RotationSkewFrame_new00_local
static int tolua_CocoStudio_RotationSkewFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RotationSkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RotationSkewFrame* tolua_ret = (RotationSkewFrame*)  Mtolua_new((RotationSkewFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RotationSkewFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_addSpriteDisplay00
static int tolua_CocoStudio_CCDisplayFactory_addSpriteDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,4,0));
  {
   CCDisplayFactory::addSpriteDisplay(bone,decoDisplay,displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initSpriteDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_initSpriteDisplay00
static int tolua_CocoStudio_CCDisplayFactory_initSpriteDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  const char* displayName = ((const char*)  tolua_tostring(tolua_S,4,0));
  CCSkin* skin = ((CCSkin*)  tolua_tousertype(tolua_S,5,0));
  {
   CCDisplayFactory::initSpriteDisplay(bone,decoDisplay,displayName,skin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initSpriteDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_createDisplay00
static int tolua_CocoStudio_CCDisplayFactory_createDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  {
   CCDisplayFactory::createDisplay(bone,decoDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addArmatureDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_addArmatureDisplay00
static int tolua_CocoStudio_CCDisplayFactory_addArmatureDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,4,0));
  {
   CCDisplayFactory::addArmatureDisplay(bone,decoDisplay,displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addArmatureDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateArmatureDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_updateArmatureDisplay00
static int tolua_CocoStudio_CCDisplayFactory_updateArmatureDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCNode* display = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
  float dt = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   CCDisplayFactory::updateArmatureDisplay(bone,display,dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateArmatureDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createParticleDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_createParticleDisplay00
static int tolua_CocoStudio_CCDisplayFactory_createParticleDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  {
   CCDisplayFactory::createParticleDisplay(bone,decoDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createParticleDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createSpriteDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_createSpriteDisplay00
static int tolua_CocoStudio_CCDisplayFactory_createSpriteDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  {
   CCDisplayFactory::createSpriteDisplay(bone,decoDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createSpriteDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addParticleDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_addParticleDisplay00
static int tolua_CocoStudio_CCDisplayFactory_addParticleDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,4,0));
  {
   CCDisplayFactory::addParticleDisplay(bone,decoDisplay,displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addParticleDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_updateDisplay00
static int tolua_CocoStudio_CCDisplayFactory_updateDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  float dt = ((float)  tolua_tonumber(tolua_S,3,0));
  bool dirty = ((bool)  tolua_toboolean(tolua_S,4,0));
  {
   CCDisplayFactory::updateDisplay(bone,dt,dirty);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createArmatureDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_createArmatureDisplay00
static int tolua_CocoStudio_CCDisplayFactory_createArmatureDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  {
   CCDisplayFactory::createArmatureDisplay(bone,decoDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createArmatureDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateParticleDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_updateParticleDisplay00
static int tolua_CocoStudio_CCDisplayFactory_updateParticleDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCNode* display = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
  float dt = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   CCDisplayFactory::updateParticleDisplay(bone,display,dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateParticleDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplay of class  CCDisplayFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayFactory_addDisplay00
static int tolua_CocoStudio_CCDisplayFactory_addDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,3,0));
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,4,0));
  {
   CCDisplayFactory::addDisplay(bone,decoDisplay,displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RichElementText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementText_create00
static int tolua_CocoStudio_RichElementText_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,5,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,6,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,7,0));
  {
   RichElementText* tolua_ret = (RichElementText*)  RichElementText::create(tag,*color,opacity,text,fontName,fontSize);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  RichElementText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementText_init00
static int tolua_CocoStudio_RichElementText_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementText* self = (RichElementText*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,5,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,6,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(tag,*color,opacity,text,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RichElementText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementText_delete00
static int tolua_CocoStudio_RichElementText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementText* self = (RichElementText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RichElementText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementText_new00
static int tolua_CocoStudio_RichElementText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementText* tolua_ret = (RichElementText*)  Mtolua_new((RichElementText)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RichElementText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementText_new00_local
static int tolua_CocoStudio_RichElementText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementText* tolua_ret = (RichElementText*)  Mtolua_new((RichElementText)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseCircleActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionOut_create00
static int tolua_CocoStudio_CCEaseCircleActionOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCircleActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCircleActionOut* tolua_ret = (CCEaseCircleActionOut*)  CCEaseCircleActionOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCircleActionOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCircleActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionOut_copyWithZone00
static int tolua_CocoStudio_CCEaseCircleActionOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionOut* self = (CCEaseCircleActionOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCircleActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionOut_update00
static int tolua_CocoStudio_CCEaseCircleActionOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionOut* self = (CCEaseCircleActionOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCircleActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionOut_reverse00
static int tolua_CocoStudio_CCEaseCircleActionOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionOut* self = (CCEaseCircleActionOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_create00
static int tolua_CocoStudio_EventFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EventFrame* tolua_ret = (EventFrame*)  EventFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"EventFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEvent of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_setEvent00
static int tolua_CocoStudio_EventFrame_setEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EventFrame* self = (EventFrame*)  tolua_tousertype(tolua_S,1,0);
  string event = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEvent'", NULL);
#endif
  {
   self->setEvent(event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEvent of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_getEvent00
static int tolua_CocoStudio_EventFrame_getEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EventFrame* self = (EventFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEvent'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getEvent();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_clone00
static int tolua_CocoStudio_EventFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EventFrame* self = (EventFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_onEnter00
static int tolua_CocoStudio_EventFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EventFrame* self = (EventFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_new00
static int tolua_CocoStudio_EventFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EventFrame* tolua_ret = (EventFrame*)  Mtolua_new((EventFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"EventFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EventFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_EventFrame_new00_local
static int tolua_CocoStudio_EventFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EventFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EventFrame* tolua_ret = (EventFrame*)  Mtolua_new((EventFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"EventFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuinticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionOut_create00
static int tolua_CocoStudio_CCEaseQuinticActionOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuinticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuinticActionOut* tolua_ret = (CCEaseQuinticActionOut*)  CCEaseQuinticActionOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuinticActionOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuinticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuinticActionOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionOut* self = (CCEaseQuinticActionOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuinticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionOut_update00
static int tolua_CocoStudio_CCEaseQuinticActionOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionOut* self = (CCEaseQuinticActionOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuinticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionOut_reverse00
static int tolua_CocoStudio_CCEaseQuinticActionOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionOut* self = (CCEaseQuinticActionOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_create00
static int tolua_CocoStudio_CCTableView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableViewDataSource",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDataSource* dataSource = ((CCTableViewDataSource*)  tolua_tousertype(tolua_S,2,0));
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,3,0));
  CCNode* container = ((CCNode*)  tolua_tousertype(tolua_S,4,0));
  {
   CCTableView* tolua_ret = (CCTableView*)  CCTableView::create(dataSource,size,container);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_create01
static int tolua_CocoStudio_CCTableView_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableViewDataSource",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCTableViewDataSource* dataSource = ((CCTableViewDataSource*)  tolua_tousertype(tolua_S,2,0));
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTableView* tolua_ret = (CCTableView*)  CCTableView::create(dataSource,size);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableView");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCTableView_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_ccTouchBegan00
static int tolua_CocoStudio_CCTableView_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollViewDidScroll of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_scrollViewDidScroll00
static int tolua_CocoStudio_CCTableView_scrollViewDidScroll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCScrollView* view = ((CCScrollView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollViewDidScroll'", NULL);
#endif
  {
   self->scrollViewDidScroll(view);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollViewDidScroll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColCount of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_setColCount00
static int tolua_CocoStudio_CCTableView_setColCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int var = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColCount'", NULL);
#endif
  {
   self->setColCount(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_ccTouchEnded00
static int tolua_CocoStudio_CCTableView_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDataSource of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_getDataSource00
static int tolua_CocoStudio_CCTableView_getDataSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDataSource'", NULL);
#endif
  {
   CCTableViewDataSource* tolua_ret = (CCTableViewDataSource*)  self->getDataSource();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewDataSource");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDataSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateCellAtIndex of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_updateCellAtIndex00
static int tolua_CocoStudio_CCTableView_updateCellAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateCellAtIndex'", NULL);
#endif
  {
   self->updateCellAtIndex(idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateCellAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithViewSize of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_initWithViewSize00
static int tolua_CocoStudio_CCTableView_initWithViewSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
  CCNode* container = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithViewSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithViewSize(size,container);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithViewSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeCellAtIndex of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_removeCellAtIndex00
static int tolua_CocoStudio_CCTableView_removeCellAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeCellAtIndex'", NULL);
#endif
  {
   self->removeCellAtIndex(idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeCellAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_delete00
static int tolua_CocoStudio_CCTableView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColCount of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_getColCount00
static int tolua_CocoStudio_CCTableView_getColCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColCount'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getColCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_ccTouchMoved00
static int tolua_CocoStudio_CCTableView_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadData of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_reloadData00
static int tolua_CocoStudio_CCTableView_reloadData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reloadData'", NULL);
#endif
  {
   self->reloadData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dequeueCell of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_dequeueCell00
static int tolua_CocoStudio_CCTableView_dequeueCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  const string name = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dequeueCell'", NULL);
#endif
  {
   CCTableViewCell* tolua_ret = (CCTableViewCell*)  self->dequeueCell(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewCell");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dequeueCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelegate of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_setDelegate00
static int tolua_CocoStudio_CCTableView_setDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableViewDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTableViewDelegate* pDelegate = ((CCTableViewDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelegate'", NULL);
#endif
  {
   self->setDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollViewDidZoom of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_scrollViewDidZoom00
static int tolua_CocoStudio_CCTableView_scrollViewDidZoom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCScrollView* view = ((CCScrollView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollViewDidZoom'", NULL);
#endif
  {
   self->scrollViewDidZoom(view);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollViewDidZoom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertCellAtIndex of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_insertCellAtIndex00
static int tolua_CocoStudio_CCTableView_insertCellAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertCellAtIndex'", NULL);
#endif
  {
   self->insertCellAtIndex(idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertCellAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cellAtIndex of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_cellAtIndex00
static int tolua_CocoStudio_CCTableView_cellAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cellAtIndex'", NULL);
#endif
  {
   CCTableViewCell* tolua_ret = (CCTableViewCell*)  self->cellAtIndex(idx);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cellAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelegate of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_getDelegate00
static int tolua_CocoStudio_CCTableView_getDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelegate'", NULL);
#endif
  {
   CCTableViewDelegate* tolua_ret = (CCTableViewDelegate*)  self->getDelegate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRealRows of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_getRealRows00
static int tolua_CocoStudio_CCTableView_getRealRows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRealRows'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRealRows();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRealRows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: _updateContentSize of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView__updateContentSize00
static int tolua_CocoStudio_CCTableView__updateContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function '_updateContentSize'", NULL);
#endif
  {
   self->_updateContentSize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '_updateContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unregisterAllScriptHandler of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_unregisterAllScriptHandler00
static int tolua_CocoStudio_CCTableView_unregisterAllScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unregisterAllScriptHandler'", NULL);
#endif
  {
   self->unregisterAllScriptHandler();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregisterAllScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_ccTouchCancelled00
static int tolua_CocoStudio_CCTableView_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDataSource of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_setDataSource00
static int tolua_CocoStudio_CCTableView_setDataSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableViewDataSource",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
  CCTableViewDataSource* source = ((CCTableViewDataSource*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDataSource'", NULL);
#endif
  {
   self->setDataSource(source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDataSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_new00
static int tolua_CocoStudio_CCTableView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTableView* tolua_ret = (CCTableView*)  Mtolua_new((CCTableView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableView_new00_local
static int tolua_CocoStudio_CCTableView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTableView* tolua_ret = (CCTableView*)  Mtolua_new((CCTableView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCScrollViewDelegate__ of class  CCTableView */
#ifndef TOLUA_DISABLE_tolua_get_CCTableView___CCScrollViewDelegate__
static int tolua_get_CCTableView___CCScrollViewDelegate__(lua_State* tolua_S)
{
  CCTableView* self = (CCTableView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCScrollViewDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCScrollViewDelegate*>(self), "CCScrollViewDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCScrollViewDelegate*)self), "CCScrollViewDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeDictionaryHelper of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_purgeDictionaryHelper00
static int tolua_CocoStudio_DictionaryHelper_purgeDictionaryHelper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DictionaryHelper::purgeDictionaryHelper();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeDictionaryHelper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shareHelper of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_shareHelper00
static int tolua_CocoStudio_DictionaryHelper_shareHelper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DictionaryHelper* tolua_ret = (DictionaryHelper*)  DictionaryHelper::shareHelper();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DictionaryHelper");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shareHelper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSubDictionary of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getSubDictionary00
static int tolua_CocoStudio_DictionaryHelper_getSubDictionary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSubDictionary'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getSubDictionary(root,key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSubDictionary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getStringValue00
static int tolua_CocoStudio_DictionaryHelper_getStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStringValue(root,key);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectToFloatValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_objectToFloatValue00
static int tolua_CocoStudio_DictionaryHelper_objectToFloatValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCObject* obj = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectToFloatValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->objectToFloatValue(obj);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectToFloatValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectToCCArray of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_objectToCCArray00
static int tolua_CocoStudio_DictionaryHelper_objectToCCArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCObject* obj = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectToCCArray'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->objectToCCArray(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectToCCArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFloatValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getFloatValue00
static int tolua_CocoStudio_DictionaryHelper_getFloatValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFloatValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getFloatValue(root,key);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFloatValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_delete00
static int tolua_CocoStudio_DictionaryHelper_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkObjectExist of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_checkObjectExist00
static int tolua_CocoStudio_DictionaryHelper_checkObjectExist00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkObjectExist'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->checkObjectExist(root,key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkObjectExist'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectToBooleanValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_objectToBooleanValue00
static int tolua_CocoStudio_DictionaryHelper_objectToBooleanValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCObject* obj = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectToBooleanValue'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->objectToBooleanValue(obj);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectToBooleanValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectToIntValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_objectToIntValue00
static int tolua_CocoStudio_DictionaryHelper_objectToIntValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCObject* obj = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectToIntValue'", NULL);
#endif
  {
   int tolua_ret = (int)  self->objectToIntValue(obj);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectToIntValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_new00
static int tolua_CocoStudio_DictionaryHelper_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DictionaryHelper* tolua_ret = (DictionaryHelper*)  Mtolua_new((DictionaryHelper)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DictionaryHelper");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_new00_local
static int tolua_CocoStudio_DictionaryHelper_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DictionaryHelper* tolua_ret = (DictionaryHelper*)  Mtolua_new((DictionaryHelper)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DictionaryHelper");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBooleanValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getBooleanValue00
static int tolua_CocoStudio_DictionaryHelper_getBooleanValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBooleanValue'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getBooleanValue(root,key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBooleanValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getIntValue00
static int tolua_CocoStudio_DictionaryHelper_getIntValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntValue'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getIntValue(root,key);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArrayValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_getArrayValue00
static int tolua_CocoStudio_DictionaryHelper_getArrayValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* root = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArrayValue'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getArrayValue(root,key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArrayValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectToStringValue of class  DictionaryHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_DictionaryHelper_objectToStringValue00
static int tolua_CocoStudio_DictionaryHelper_objectToStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DictionaryHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DictionaryHelper* self = (DictionaryHelper*)  tolua_tousertype(tolua_S,1,0);
  CCObject* obj = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectToStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->objectToStringValue(obj);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectToStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: triggerMngVersion of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_triggerMngVersion00
static int tolua_CocoStudio_TriggerMng_triggerMngVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   const char* tolua_ret = (const char*)  TriggerMng::triggerMngVersion();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'triggerMngVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInstance of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_getInstance00
static int tolua_CocoStudio_TriggerMng_getInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerMng* tolua_ret = (TriggerMng*)  TriggerMng::getInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerMng");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_removeAll00
static int tolua_CocoStudio_TriggerMng_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTriggerObj of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_removeTriggerObj00
static int tolua_CocoStudio_TriggerMng_removeTriggerObj00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTriggerObj'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeTriggerObj(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTriggerObj'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_get00
static int tolua_CocoStudio_TriggerMng_get00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int event = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->get(event);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroyInstance of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_destroyInstance00
static int tolua_CocoStudio_TriggerMng_destroyInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroyInstance'", NULL);
#endif
  {
   self->destroyInstance();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroyInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeArmatureAllMovementCallBack of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_removeArmatureAllMovementCallBack00
static int tolua_CocoStudio_TriggerMng_removeArmatureAllMovementCallBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  CCArmature* pAr = ((CCArmature*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeArmatureAllMovementCallBack'", NULL);
#endif
  {
   self->removeArmatureAllMovementCallBack(pAr);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeArmatureAllMovementCallBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_remove00
static int tolua_CocoStudio_TriggerMng_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int event = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  TriggerObj* pObj = ((TriggerObj*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->remove(event,pObj);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_remove01
static int tolua_CocoStudio_TriggerMng_remove01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int event = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->remove(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_TriggerMng_remove00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_delete00
static int tolua_CocoStudio_TriggerMng_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parse of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_parse00
static int tolua_CocoStudio_TriggerMng_parse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parse'", NULL);
#endif
  {
   self->parse(pCocoLoader,pCocoNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_add00
static int tolua_CocoStudio_TriggerMng_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int event = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  TriggerObj* pObj = ((TriggerObj*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->add(event,pObj);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEmpty of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_isEmpty00
static int tolua_CocoStudio_TriggerMng_isEmpty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEmpty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEmpty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEmpty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_new00
static int tolua_CocoStudio_TriggerMng_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerMng* tolua_ret = (TriggerMng*)  Mtolua_new((TriggerMng)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerMng");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_new00_local
static int tolua_CocoStudio_TriggerMng_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerMng* tolua_ret = (TriggerMng*)  Mtolua_new((TriggerMng)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerMng");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriggerObj of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_getTriggerObj00
static int tolua_CocoStudio_TriggerMng_getTriggerObj00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriggerObj'", NULL);
#endif
  {
   TriggerObj* tolua_ret = (TriggerObj*)  self->getTriggerObj(id);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TriggerObj");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriggerObj'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllArmatureMovementCallBack of class  TriggerMng */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerMng_removeAllArmatureMovementCallBack00
static int tolua_CocoStudio_TriggerMng_removeAllArmatureMovementCallBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerMng",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerMng* self = (TriggerMng*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllArmatureMovementCallBack'", NULL);
#endif
  {
   self->removeAllArmatureMovementCallBack();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllArmatureMovementCallBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  BaseTriggerCondition */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerCondition_serialize00
static int tolua_CocoStudio_BaseTriggerCondition_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerCondition",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerCondition* self = (BaseTriggerCondition*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   self->serialize(pCocoLoader,pCocoNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  BaseTriggerCondition */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerCondition_removeAll00
static int tolua_CocoStudio_BaseTriggerCondition_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerCondition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerCondition* self = (BaseTriggerCondition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  BaseTriggerCondition */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerCondition_init00
static int tolua_CocoStudio_BaseTriggerCondition_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerCondition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerCondition* self = (BaseTriggerCondition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: detect of class  BaseTriggerCondition */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerCondition_detect00
static int tolua_CocoStudio_BaseTriggerCondition_detect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerCondition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerCondition* self = (BaseTriggerCondition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'detect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->detect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'detect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BaseTriggerCondition */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerCondition_delete00
static int tolua_CocoStudio_BaseTriggerCondition_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerCondition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerCondition* self = (BaseTriggerCondition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuadraticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionIn_create00
static int tolua_CocoStudio_CCEaseQuadraticActionIn_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuadraticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuadraticActionIn* tolua_ret = (CCEaseQuadraticActionIn*)  CCEaseQuadraticActionIn::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuadraticActionIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuadraticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionIn_copyWithZone00
static int tolua_CocoStudio_CCEaseQuadraticActionIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionIn* self = (CCEaseQuadraticActionIn*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuadraticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionIn_update00
static int tolua_CocoStudio_CCEaseQuadraticActionIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionIn* self = (CCEaseQuadraticActionIn*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuadraticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionIn_reverse00
static int tolua_CocoStudio_CCEaseQuadraticActionIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionIn* self = (CCEaseQuadraticActionIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_getColor00
static int tolua_CocoStudio_ActionTintFrame_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionTintFrame* self = (ActionTintFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   ccColor3B tolua_ret = (ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_delete00
static int tolua_CocoStudio_ActionTintFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionTintFrame* self = (ActionTintFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_getAction00
static int tolua_CocoStudio_ActionTintFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionTintFrame* self = (ActionTintFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_setColor00
static int tolua_CocoStudio_ActionTintFrame_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionTintFrame* self = (ActionTintFrame*)  tolua_tousertype(tolua_S,1,0);
  ccColor3B ccolor = *((ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(ccolor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_new00
static int tolua_CocoStudio_ActionTintFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionTintFrame* tolua_ret = (ActionTintFrame*)  Mtolua_new((ActionTintFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionTintFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionTintFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTintFrame_new00_local
static int tolua_CocoStudio_ActionTintFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTintFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionTintFrame* tolua_ret = (ActionTintFrame*)  Mtolua_new((ActionTintFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionTintFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  NodeCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_NodeCreateCallFunc_delete00
static int tolua_CocoStudio_NodeCreateCallFunc_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"NodeCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  NodeCreateCallFunc* self = (NodeCreateCallFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  NodeCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_NodeCreateCallFunc_new00
static int tolua_CocoStudio_NodeCreateCallFunc_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"NodeCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   NodeCreateCallFunc* tolua_ret = (NodeCreateCallFunc*)  Mtolua_new((NodeCreateCallFunc)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"NodeCreateCallFunc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  NodeCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_NodeCreateCallFunc_new00_local
static int tolua_CocoStudio_NodeCreateCallFunc_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"NodeCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   NodeCreateCallFunc* tolua_ret = (NodeCreateCallFunc*)  Mtolua_new((NodeCreateCallFunc)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"NodeCreateCallFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_create00
static int tolua_CocoStudio_CCArmature_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCArmature* tolua_ret = (CCArmature*)  CCArmature::create(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_create01
static int tolua_CocoStudio_CCArmature_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCArmature* tolua_ret = (CCArmature*)  CCArmature::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCArmature_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_create02
static int tolua_CocoStudio_CCArmature_create02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCBone* parentBone = ((CCBone*)  tolua_tousertype(tolua_S,3,0));
  {
   CCArmature* tolua_ret = (CCArmature*)  CCArmature::create(name,parentBone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCArmature_create01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBone of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getBone00
static int tolua_CocoStudio_CCArmature_getBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBone'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getBone(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeBoneParent of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_changeBoneParent00
static int tolua_CocoStudio_CCArmature_changeBoneParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  const char* parentName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeBoneParent'", NULL);
#endif
  {
   self->changeBoneParent(bone,parentName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeBoneParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_onEnter00
static int tolua_CocoStudio_CCArmature_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexureAtlasWithTexture of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getTexureAtlasWithTexture00
static int tolua_CocoStudio_CCArmature_getTexureAtlasWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCTexture2D* texture = ((CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexureAtlasWithTexture'", NULL);
#endif
  {
   CCTextureAtlas* tolua_ret = (CCTextureAtlas*)  self->getTexureAtlasWithTexture(texture);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexureAtlasWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPreDrawFunction of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setPreDrawFunction00
static int tolua_CocoStudio_CCArmature_setPreDrawFunction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCCallFuncO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCCallFuncO* var = ((CCCallFuncO*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPreDrawFunction'", NULL);
#endif
  {
   self->setPreDrawFunction(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPreDrawFunction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimation of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setAnimation00
static int tolua_CocoStudio_CCArmature_setAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCArmatureAnimation* animation = ((CCArmatureAnimation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimation'", NULL);
#endif
  {
   self->setAnimation(animation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoneAtPoint of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getBoneAtPoint00
static int tolua_CocoStudio_CCArmature_getBoneAtPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoneAtPoint'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getBoneAtPoint(x,y);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoneAtPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBatchNode of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getBatchNode00
static int tolua_CocoStudio_CCArmature_getBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBatchNode'", NULL);
#endif
  {
   CCBatchNode* tolua_ret = (CCBatchNode*)  self->getBatchNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVersion of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setVersion00
static int tolua_CocoStudio_CCArmature_setVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVersion'", NULL);
#endif
  {
   self->setVersion(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateOffsetPoint of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_updateOffsetPoint00
static int tolua_CocoStudio_CCArmature_updateOffsetPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateOffsetPoint'", NULL);
#endif
  {
   self->updateOffsetPoint();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateOffsetPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParentBone of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getParentBone00
static int tolua_CocoStudio_CCArmature_getParentBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParentBone'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getParentBone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParentBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setName00
static int tolua_CocoStudio_CCArmature_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  string var = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeBone of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_removeBone00
static int tolua_CocoStudio_CCArmature_removeBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  bool recursion = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeBone'", NULL);
#endif
  {
   self->removeBone(bone,recursion);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmatureTransformDirty of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getArmatureTransformDirty00
static int tolua_CocoStudio_CCArmature_getArmatureTransformDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmatureTransformDirty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getArmatureTransformDirty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmatureTransformDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getName00
static int tolua_CocoStudio_CCArmature_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_visit00
static int tolua_CocoStudio_CCArmature_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_delete00
static int tolua_CocoStudio_CCArmature_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_init00
static int tolua_CocoStudio_CCArmature_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_init01
static int tolua_CocoStudio_CCArmature_init01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCArmature_init00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_init02
static int tolua_CocoStudio_CCArmature_init02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCBone* parentBone = ((CCBone*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(name,parentBone);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCArmature_init01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParentBone of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setParentBone00
static int tolua_CocoStudio_CCArmature_setParentBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCBone* var = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParentBone'", NULL);
#endif
  {
   self->setParentBone(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParentBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBatchNode of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setBatchNode00
static int tolua_CocoStudio_CCArmature_setBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCBatchNode* var = ((CCBatchNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBatchNode'", NULL);
#endif
  {
   self->setBatchNode(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_draw00
static int tolua_CocoStudio_CCArmature_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getBlendFunc00
static int tolua_CocoStudio_CCArmature_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   ccBlendFunc tolua_ret = (ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToParentTransform of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_nodeToParentTransform00
static int tolua_CocoStudio_CCArmature_nodeToParentTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToParentTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToParentTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToParentTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArmatureData of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setArmatureData00
static int tolua_CocoStudio_CCArmature_setArmatureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCArmatureData* var = ((CCArmatureData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArmatureData'", NULL);
#endif
  {
   self->setArmatureData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmatureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureAtlas of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setTextureAtlas00
static int tolua_CocoStudio_CCArmature_setTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCTextureAtlas* var = ((CCTextureAtlas*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureAtlas'", NULL);
#endif
  {
   self->setTextureAtlas(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addBone of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_addBone00
static int tolua_CocoStudio_CCArmature_addBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  const char* parentName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addBone'", NULL);
#endif
  {
   self->addBone(bone,parentName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_update00
static int tolua_CocoStudio_CCArmature_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmatureData of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getArmatureData00
static int tolua_CocoStudio_CCArmature_getArmatureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmatureData'", NULL);
#endif
  {
   CCArmatureData* tolua_ret = (CCArmatureData*)  self->getArmatureData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmatureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPreDrawFunction of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getPreDrawFunction00
static int tolua_CocoStudio_CCArmature_getPreDrawFunction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPreDrawFunction'", NULL);
#endif
  {
   CCCallFuncO* tolua_ret = (CCCallFuncO*)  self->getPreDrawFunction();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCCallFuncO");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPreDrawFunction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: boundingBox of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_boundingBox00
static int tolua_CocoStudio_CCArmature_boundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'boundingBox'", NULL);
#endif
  {
   CCRect tolua_ret = (CCRect)  self->boundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'boundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVersion of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getVersion00
static int tolua_CocoStudio_CCArmature_getVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVersion'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getVersion();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimation of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getAnimation00
static int tolua_CocoStudio_CCArmature_getAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimation'", NULL);
#endif
  {
   CCArmatureAnimation* tolua_ret = (CCArmatureAnimation*)  self->getAnimation();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_onExit00
static int tolua_CocoStudio_CCArmature_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_setBlendFunc00
static int tolua_CocoStudio_CCArmature_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
  ccBlendFunc blendFunc = *((ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(blendFunc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoneDic of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getBoneDic00
static int tolua_CocoStudio_CCArmature_getBoneDic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoneDic'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getBoneDic();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoneDic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureAtlas of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_getTextureAtlas00
static int tolua_CocoStudio_CCArmature_getTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureAtlas'", NULL);
#endif
  {
   CCTextureAtlas* tolua_ret = (CCTextureAtlas*)  self->getTextureAtlas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_new00
static int tolua_CocoStudio_CCArmature_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmature* tolua_ret = (CCArmature*)  Mtolua_new((CCArmature)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmature_new00_local
static int tolua_CocoStudio_CCArmature_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmature* tolua_ret = (CCArmature*)  Mtolua_new((CCArmature)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCBlendProtocol__ of class  CCArmature */
#ifndef TOLUA_DISABLE_tolua_get_CCArmature___CCBlendProtocol__
static int tolua_get_CCArmature___CCBlendProtocol__(lua_State* tolua_S)
{
  CCArmature* self = (CCArmature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCBlendProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCBlendProtocol*>(self), "CCBlendProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((CCBlendProtocol*)self), "CCBlendProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuarticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionIn_create00
static int tolua_CocoStudio_CCEaseQuarticActionIn_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuarticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuarticActionIn* tolua_ret = (CCEaseQuarticActionIn*)  CCEaseQuarticActionIn::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuarticActionIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuarticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionIn_copyWithZone00
static int tolua_CocoStudio_CCEaseQuarticActionIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionIn* self = (CCEaseQuarticActionIn*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuarticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionIn_update00
static int tolua_CocoStudio_CCEaseQuarticActionIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionIn* self = (CCEaseQuarticActionIn*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuarticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionIn_reverse00
static int tolua_CocoStudio_CCEaseQuarticActionIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionIn* self = (CCEaseQuarticActionIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_create00
static int tolua_CocoStudio_AnchorPointFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnchorPointFrame* tolua_ret = (AnchorPointFrame*)  AnchorPointFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"AnchorPointFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_setAnchorPoint00
static int tolua_CocoStudio_AnchorPointFrame_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnchorPointFrame* self = (AnchorPointFrame*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* point = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_clone00
static int tolua_CocoStudio_AnchorPointFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnchorPointFrame* self = (AnchorPointFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_onEnter00
static int tolua_CocoStudio_AnchorPointFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnchorPointFrame* self = (AnchorPointFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnchorPoint of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_getAnchorPoint00
static int tolua_CocoStudio_AnchorPointFrame_getAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnchorPointFrame* self = (AnchorPointFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnchorPoint'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getAnchorPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_new00
static int tolua_CocoStudio_AnchorPointFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnchorPointFrame* tolua_ret = (AnchorPointFrame*)  Mtolua_new((AnchorPointFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"AnchorPointFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AnchorPointFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_AnchorPointFrame_new00_local
static int tolua_CocoStudio_AnchorPointFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnchorPointFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnchorPointFrame* tolua_ret = (AnchorPointFrame*)  Mtolua_new((AnchorPointFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"AnchorPointFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureData_name
static int tolua_get_CCArmatureData_name(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureData_name
static int tolua_set_CCArmatureData_name(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: boneDataDic of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureData_boneDataDic
static int tolua_get_CCArmatureData_boneDataDic(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boneDataDic'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->boneDataDic,"CCDictionary");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: boneDataDic of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureData_boneDataDic
static int tolua_set_CCArmatureData_boneDataDic(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boneDataDic'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->boneDataDic = *((CCDictionary*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dataVersion of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureData_dataVersion
static int tolua_get_CCArmatureData_dataVersion(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dataVersion'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dataVersion);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dataVersion of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureData_dataVersion
static int tolua_set_CCArmatureData_dataVersion(lua_State* tolua_S)
{
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dataVersion'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dataVersion = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_create00
static int tolua_CocoStudio_CCArmatureData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureData* tolua_ret = (CCArmatureData*)  CCArmatureData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addBoneData of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_addBoneData00
static int tolua_CocoStudio_CCArmatureData_addBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
  CCBoneData* boneData = ((CCBoneData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addBoneData'", NULL);
#endif
  {
   self->addBoneData(boneData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_init00
static int tolua_CocoStudio_CCArmatureData_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_delete00
static int tolua_CocoStudio_CCArmatureData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoneData of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_getBoneData00
static int tolua_CocoStudio_CCArmatureData_getBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureData* self = (CCArmatureData*)  tolua_tousertype(tolua_S,1,0);
  const char* boneName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoneData'", NULL);
#endif
  {
   CCBoneData* tolua_ret = (CCBoneData*)  self->getBoneData(boneName);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_new00
static int tolua_CocoStudio_CCArmatureData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureData* tolua_ret = (CCArmatureData*)  Mtolua_new((CCArmatureData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCArmatureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureData_new00_local
static int tolua_CocoStudio_CCArmatureData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureData* tolua_ret = (CCArmatureData*)  Mtolua_new((CCArmatureData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bBoneTransformDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_get_CCBone_m_bBoneTransformDirty
static int tolua_get_CCBone_m_bBoneTransformDirty(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBoneTransformDirty'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bBoneTransformDirty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bBoneTransformDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_set_CCBone_m_bBoneTransformDirty
static int tolua_set_CCBone_m_bBoneTransformDirty(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBoneTransformDirty'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bBoneTransformDirty = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_tWorldTransform of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_get_CCBone_m_tWorldTransform
static int tolua_get_CCBone_m_tWorldTransform(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_tWorldTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_tWorldTransform,"CCAffineTransform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_tWorldTransform of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_set_CCBone_m_tWorldTransform
static int tolua_set_CCBone_m_tWorldTransform(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_tWorldTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCAffineTransform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_tWorldTransform = *((CCAffineTransform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fDataVersion of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_get_CCBone_m_fDataVersion
static int tolua_get_CCBone_m_fDataVersion(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fDataVersion'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fDataVersion);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fDataVersion of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_set_CCBone_m_fDataVersion
static int tolua_set_CCBone_m_fDataVersion(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fDataVersion'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fDataVersion = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_sBlendFunc of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_get_CCBone_m_sBlendFunc
static int tolua_get_CCBone_m_sBlendFunc(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_sBlendFunc'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_sBlendFunc,"ccBlendFunc");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_sBlendFunc of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_set_CCBone_m_sBlendFunc
static int tolua_set_CCBone_m_sBlendFunc(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_sBlendFunc'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccBlendFunc",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_sBlendFunc = *((ccBlendFunc*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bBlendDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_get_CCBone_m_bBlendDirty
static int tolua_get_CCBone_m_bBlendDirty(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBlendDirty'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bBlendDirty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bBlendDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_set_CCBone_m_bBlendDirty
static int tolua_set_CCBone_m_bBlendDirty(lua_State* tolua_S)
{
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bBlendDirty'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bBlendDirty = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_create00
static int tolua_CocoStudio_CCBone_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCBone* tolua_ret = (CCBone*)  CCBone::create(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_create01
static int tolua_CocoStudio_CCBone_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCBone* tolua_ret = (CCBone*)  CCBone::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCBone_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToWorldTransform of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_nodeToWorldTransform00
static int tolua_CocoStudio_CCBone_nodeToWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToWorldTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToWorldTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTransformDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_isTransformDirty00
static int tolua_CocoStudio_CCBone_isTransformDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTransformDirty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTransformDirty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTransformDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateZOrder of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_updateZOrder00
static int tolua_CocoStudio_CCBone_updateZOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateZOrder'", NULL);
#endif
  {
   self->updateZOrder();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateZOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTransformDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setTransformDirty00
static int tolua_CocoStudio_CCBone_setTransformDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  bool dirty = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTransformDirty'", NULL);
#endif
  {
   self->setTransformDirty(dirty);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTransformDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayRenderNode of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getDisplayRenderNode00
static int tolua_CocoStudio_CCBone_getDisplayRenderNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayRenderNode'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getDisplayRenderNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayRenderNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChildBone of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_addChildBone00
static int tolua_CocoStudio_CCBone_addChildBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCBone* child = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChildBone'", NULL);
#endif
  {
   self->addChildBone(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChildBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBlendDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_isBlendDirty00
static int tolua_CocoStudio_CCBone_isBlendDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBlendDirty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBlendDirty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBlendDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_delete00
static int tolua_CocoStudio_CCBone_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorldInfo of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getWorldInfo00
static int tolua_CocoStudio_CCBone_getWorldInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorldInfo'", NULL);
#endif
  {
   CCBaseData* tolua_ret = (CCBaseData*)  self->getWorldInfo();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBaseData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorldInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTween of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getTween00
static int tolua_CocoStudio_CCBone_getTween00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTween'", NULL);
#endif
  {
   CCTween* tolua_ret = (CCTween*)  self->getTween();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTween");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTween'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParentBone of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getParentBone00
static int tolua_CocoStudio_CCBone_getParentBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParentBone'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getParentBone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParentBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateColor of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_updateColor00
static int tolua_CocoStudio_CCBone_updateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateColor'", NULL);
#endif
  {
   self->updateColor();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setChildArmature of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setChildArmature00
static int tolua_CocoStudio_CCBone_setChildArmature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCArmature* var = ((CCArmature*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setChildArmature'", NULL);
#endif
  {
   self->setChildArmature(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setChildArmature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getName00
static int tolua_CocoStudio_CCBone_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setOpacity00
static int tolua_CocoStudio_CCBone_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeDisplay of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_removeDisplay00
static int tolua_CocoStudio_CCBone_removeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeDisplay'", NULL);
#endif
  {
   self->removeDisplay(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplayedOpacity of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_updateDisplayedOpacity00
static int tolua_CocoStudio_CCBone_updateDisplayedOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  unsigned char parentOpacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDisplayedOpacity'", NULL);
#endif
  {
   self->updateDisplayedOpacity(parentOpacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplayedOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_init00
static int tolua_CocoStudio_CCBone_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_init01
static int tolua_CocoStudio_CCBone_init01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCBone_init00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParentBone of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setParentBone00
static int tolua_CocoStudio_CCBone_setParentBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCBone* parent = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParentBone'", NULL);
#endif
  {
   self->setParentBone(parent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParentBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZOrder of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setZOrder00
static int tolua_CocoStudio_CCBone_setZOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  int zOrder = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZOrder'", NULL);
#endif
  {
   self->setZOrder(zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIgnoreMovementBoneData of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getIgnoreMovementBoneData00
static int tolua_CocoStudio_CCBone_getIgnoreMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIgnoreMovementBoneData'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIgnoreMovementBoneData();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIgnoreMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIgnoreMovementBoneData of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setIgnoreMovementBoneData00
static int tolua_CocoStudio_CCBone_setIgnoreMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIgnoreMovementBoneData'", NULL);
#endif
  {
   self->setIgnoreMovementBoneData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIgnoreMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getBlendFunc00
static int tolua_CocoStudio_CCBone_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   ccBlendFunc tolua_ret = (ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setName00
static int tolua_CocoStudio_CCBone_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  string var = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFromParent of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_removeFromParent00
static int tolua_CocoStudio_CCBone_removeFromParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  bool recursion = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFromParent'", NULL);
#endif
  {
   self->removeFromParent(recursion);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFromParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildArmature of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getChildArmature00
static int tolua_CocoStudio_CCBone_getChildArmature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildArmature'", NULL);
#endif
  {
   CCArmature* tolua_ret = (CCArmature*)  self->getChildArmature();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildArmature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_update00
static int tolua_CocoStudio_CCBone_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  float delta = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplayManager of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setDisplayManager00
static int tolua_CocoStudio_CCBone_setDisplayManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayManager* var = ((CCDisplayManager*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplayManager'", NULL);
#endif
  {
   self->setDisplayManager(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTweenData of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getTweenData00
static int tolua_CocoStudio_CCBone_getTweenData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTweenData'", NULL);
#endif
  {
   CCFrameData* tolua_ret = (CCFrameData*)  self->getTweenData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCFrameData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTweenData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeDisplayWithIndex of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_changeDisplayWithIndex00
static int tolua_CocoStudio_CCBone_changeDisplayWithIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  bool force = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeDisplayWithIndex'", NULL);
#endif
  {
   self->changeDisplayWithIndex(index,force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeDisplayWithIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeDisplayWithName of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_changeDisplayWithName00
static int tolua_CocoStudio_CCBone_changeDisplayWithName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool force = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeDisplayWithName'", NULL);
#endif
  {
   self->changeDisplayWithName(name,force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeDisplayWithName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColliderBodyList of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getColliderBodyList00
static int tolua_CocoStudio_CCBone_getColliderBodyList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColliderBodyList'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getColliderBodyList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColliderBodyList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBoneData of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setBoneData00
static int tolua_CocoStudio_CCBone_setBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCBoneData* var = ((CCBoneData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBoneData'", NULL);
#endif
  {
   self->setBoneData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArmature of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setArmature00
static int tolua_CocoStudio_CCBone_setArmature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCArmature* var = ((CCArmature*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArmature'", NULL);
#endif
  {
   self->setArmature(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendDirty of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setBlendDirty00
static int tolua_CocoStudio_CCBone_setBlendDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  bool dirty = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendDirty'", NULL);
#endif
  {
   self->setBlendDirty(dirty);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplay of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_addDisplay00
static int tolua_CocoStudio_CCBone_addDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCNode* display = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDisplay'", NULL);
#endif
  {
   self->addDisplay(display,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplay of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_addDisplay01
static int tolua_CocoStudio_CCBone_addDisplay01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDisplay'", NULL);
#endif
  {
   self->addDisplay(displayData,index);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCBone_addDisplay00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setColor00
static int tolua_CocoStudio_CCBone_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChildBone of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_removeChildBone00
static int tolua_CocoStudio_CCBone_removeChildBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  bool recursion = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChildBone'", NULL);
#endif
  {
   self->removeChildBone(bone,recursion);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChildBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_setBlendFunc00
static int tolua_CocoStudio_CCBone_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  const ccBlendFunc* blendFunc = ((const ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(*blendFunc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayManager of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getDisplayManager00
static int tolua_CocoStudio_CCBone_getDisplayManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayManager'", NULL);
#endif
  {
   CCDisplayManager* tolua_ret = (CCDisplayManager*)  self->getDisplayManager();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmature of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getArmature00
static int tolua_CocoStudio_CCBone_getArmature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmature'", NULL);
#endif
  {
   CCArmature* tolua_ret = (CCArmature*)  self->getArmature();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArmature");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToArmatureTransform of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_nodeToArmatureTransform00
static int tolua_CocoStudio_CCBone_nodeToArmatureTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToArmatureTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToArmatureTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToArmatureTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_new00
static int tolua_CocoStudio_CCBone_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBone* tolua_ret = (CCBone*)  Mtolua_new((CCBone)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_new00_local
static int tolua_CocoStudio_CCBone_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBone* tolua_ret = (CCBone*)  Mtolua_new((CCBone)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplayedColor of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_updateDisplayedColor00
static int tolua_CocoStudio_CCBone_updateDisplayedColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* parentColor = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDisplayedColor'", NULL);
#endif
  {
   self->updateDisplayedColor(*parentColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplayedColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoneData of class  CCBone */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBone_getBoneData00
static int tolua_CocoStudio_CCBone_getBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* self = (CCBone*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoneData'", NULL);
#endif
  {
   CCBoneData* tolua_ret = (CCBoneData*)  self->getBoneData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quartEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quartEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_quartEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quartEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quartEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: backEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_backEaseIn00
static int tolua_CocoStudio_CCTweenFunction_backEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::backEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'backEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quintEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quintEaseIn00
static int tolua_CocoStudio_CCTweenFunction_quintEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quintEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quintEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cubicEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_cubicEaseOut00
static int tolua_CocoStudio_CCTweenFunction_cubicEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::cubicEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cubicEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounceEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_bounceEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_bounceEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::bounceEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounceEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounceEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_bounceEaseOut00
static int tolua_CocoStudio_CCTweenFunction_bounceEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::bounceEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounceEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quartEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quartEaseOut00
static int tolua_CocoStudio_CCTweenFunction_quartEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quartEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quartEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: expoEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_expoEaseOut00
static int tolua_CocoStudio_CCTweenFunction_expoEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::expoEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'expoEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: circEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_circEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_circEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::circEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'circEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sineEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_sineEaseOut00
static int tolua_CocoStudio_CCTweenFunction_sineEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::sineEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sineEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: backEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_backEaseOut00
static int tolua_CocoStudio_CCTweenFunction_backEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::backEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'backEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quintEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quintEaseOut00
static int tolua_CocoStudio_CCTweenFunction_quintEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quintEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quintEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quintEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quintEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_quintEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quintEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quintEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: backEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_backEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_backEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::backEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'backEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: elasticEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_elasticEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_elasticEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  float easingParam = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   float tolua_ret = (float)  CCTweenFunction::elasticEaseInOut(time,&easingParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)easingParam);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'elasticEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounceEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_bounceEaseIn00
static int tolua_CocoStudio_CCTweenFunction_bounceEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::bounceEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounceEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: linear of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_linear00
static int tolua_CocoStudio_CCTweenFunction_linear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::linear(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'linear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: customEase of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_customEase00
static int tolua_CocoStudio_CCTweenFunction_customEase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  float easingParam = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   float tolua_ret = (float)  CCTweenFunction::customEase(time,&easingParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)easingParam);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'customEase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: elasticEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_elasticEaseIn00
static int tolua_CocoStudio_CCTweenFunction_elasticEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  float easingParam = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   float tolua_ret = (float)  CCTweenFunction::elasticEaseIn(time,&easingParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)easingParam);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'elasticEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quadEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quadEaseOut00
static int tolua_CocoStudio_CCTweenFunction_quadEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quadEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quadEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: elasticEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_elasticEaseOut00
static int tolua_CocoStudio_CCTweenFunction_elasticEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  float easingParam = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   float tolua_ret = (float)  CCTweenFunction::elasticEaseOut(time,&easingParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)easingParam);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'elasticEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: circEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_circEaseIn00
static int tolua_CocoStudio_CCTweenFunction_circEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::circEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'circEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: expoEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_expoEaseIn00
static int tolua_CocoStudio_CCTweenFunction_expoEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::expoEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'expoEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sineEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_sineEaseIn00
static int tolua_CocoStudio_CCTweenFunction_sineEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::sineEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sineEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cubicEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_cubicEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_cubicEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::cubicEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cubicEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cubicEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_cubicEaseIn00
static int tolua_CocoStudio_CCTweenFunction_cubicEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::cubicEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cubicEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quadEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quadEaseIn00
static int tolua_CocoStudio_CCTweenFunction_quadEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quadEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quadEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: circEaseOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_circEaseOut00
static int tolua_CocoStudio_CCTweenFunction_circEaseOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::circEaseOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'circEaseOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: expoEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_expoEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_expoEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::expoEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'expoEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quartEaseIn of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quartEaseIn00
static int tolua_CocoStudio_CCTweenFunction_quartEaseIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quartEaseIn(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quartEaseIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: quadEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_quadEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_quadEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::quadEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'quadEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sineEaseInOut of class  CCTweenFunction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTweenFunction_sineEaseInOut00
static int tolua_CocoStudio_CCTweenFunction_sineEaseInOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTweenFunction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   float tolua_ret = (float)  CCTweenFunction::sineEaseInOut(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sineEaseInOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_setPosition00
static int tolua_CocoStudio_ActionMoveFrame_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionMoveFrame* self = (ActionMoveFrame*)  tolua_tousertype(tolua_S,1,0);
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_delete00
static int tolua_CocoStudio_ActionMoveFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionMoveFrame* self = (ActionMoveFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_getAction00
static int tolua_CocoStudio_ActionMoveFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionMoveFrame* self = (ActionMoveFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_getPosition00
static int tolua_CocoStudio_ActionMoveFrame_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionMoveFrame* self = (ActionMoveFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_new00
static int tolua_CocoStudio_ActionMoveFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionMoveFrame* tolua_ret = (ActionMoveFrame*)  Mtolua_new((ActionMoveFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionMoveFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionMoveFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionMoveFrame_new00_local
static int tolua_CocoStudio_ActionMoveFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionMoveFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionMoveFrame* tolua_ret = (ActionMoveFrame*)  Mtolua_new((ActionMoveFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionMoveFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: invoke of class  CCInvocation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInvocation_invoke00
static int tolua_CocoStudio_CCInvocation_invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInvocation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInvocation* self = (CCInvocation*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'invoke'", NULL);
#endif
  {
   self->invoke(sender);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getControlEvent of class  CCInvocation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInvocation_getControlEvent00
static int tolua_CocoStudio_CCInvocation_getControlEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInvocation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInvocation* self = (CCInvocation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getControlEvent'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getControlEvent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getControlEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  CCInvocation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInvocation_getTarget00
static int tolua_CocoStudio_CCInvocation_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInvocation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInvocation* self = (CCInvocation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->getTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInstance of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_getInstance00
static int tolua_CocoStudio_ObjectFactory_getInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ObjectFactory* tolua_ret = (ObjectFactory*)  ObjectFactory::getInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerType of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_registerType00
static int tolua_CocoStudio_ObjectFactory_registerType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ObjectFactory::TInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
  const ObjectFactory::TInfo* t = ((const ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerType'", NULL);
#endif
  {
   self->registerType(*t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroyInstance of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_destroyInstance00
static int tolua_CocoStudio_ObjectFactory_destroyInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroyInstance'", NULL);
#endif
  {
   self->destroyInstance();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroyInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createObject of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_createObject00
static int tolua_CocoStudio_ObjectFactory_createObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
  string name = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createObject'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->createObject(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createComponent of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_createComponent00
static int tolua_CocoStudio_ObjectFactory_createComponent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
  string name = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createComponent'", NULL);
#endif
  {
   CCComponent* tolua_ret = (CCComponent*)  self->createComponent(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComponent");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createComponent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_delete00
static int tolua_CocoStudio_ObjectFactory_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_removeAll00
static int tolua_CocoStudio_ObjectFactory_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createGUI of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_createGUI00
static int tolua_CocoStudio_ObjectFactory_createGUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
  string name = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createGUI'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->createGUI(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createGUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_new00
static int tolua_CocoStudio_ObjectFactory_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ObjectFactory* tolua_ret = (ObjectFactory*)  Mtolua_new((ObjectFactory)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_new00_local
static int tolua_CocoStudio_ObjectFactory_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ObjectFactory* tolua_ret = (ObjectFactory*)  Mtolua_new((ObjectFactory)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWidgetReaderProtocol of class  ObjectFactory */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_createWidgetReaderProtocol00
static int tolua_CocoStudio_ObjectFactory_createWidgetReaderProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory* self = (ObjectFactory*)  tolua_tousertype(tolua_S,1,0);
  string name = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createWidgetReaderProtocol'", NULL);
#endif
  {
   WidgetReaderProtocol* tolua_ret = (WidgetReaderProtocol*)  self->createWidgetReaderProtocol(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WidgetReaderProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createWidgetReaderProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: _class of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_get_ObjectFactory__TInfo__class
static int tolua_get_ObjectFactory__TInfo__class(lua_State* tolua_S)
{
  ObjectFactory::TInfo* self = (ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '_class'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->_class);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: _class of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_set_ObjectFactory__TInfo__class
static int tolua_set_ObjectFactory__TInfo__class(lua_State* tolua_S)
{
  ObjectFactory::TInfo* self = (ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '_class'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->_class = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_TInfo_delete00
static int tolua_CocoStudio_ObjectFactory_TInfo_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ObjectFactory::TInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ObjectFactory::TInfo* self = (ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_TInfo_new00
static int tolua_CocoStudio_ObjectFactory_TInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory::TInfo",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ObjectFactory::TInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ObjectFactory::TInfo* t = ((const ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,2,0));
  {
   ObjectFactory::TInfo* tolua_ret = (ObjectFactory::TInfo*)  Mtolua_new((ObjectFactory::TInfo)(*t));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory::TInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_TInfo_new00_local
static int tolua_CocoStudio_ObjectFactory_TInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory::TInfo",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ObjectFactory::TInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ObjectFactory::TInfo* t = ((const ObjectFactory::TInfo*)  tolua_tousertype(tolua_S,2,0));
  {
   ObjectFactory::TInfo* tolua_ret = (ObjectFactory::TInfo*)  Mtolua_new((ObjectFactory::TInfo)(*t));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory::TInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_TInfo_new01
static int tolua_CocoStudio_ObjectFactory_TInfo_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory::TInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   ObjectFactory::TInfo* tolua_ret = (ObjectFactory::TInfo*)  Mtolua_new((ObjectFactory::TInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory::TInfo");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_ObjectFactory_TInfo_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TInfo */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ObjectFactory_TInfo_new01_local
static int tolua_CocoStudio_ObjectFactory_TInfo_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ObjectFactory::TInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   ObjectFactory::TInfo* tolua_ret = (ObjectFactory::TInfo*)  Mtolua_new((ObjectFactory::TInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ObjectFactory::TInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_ObjectFactory_TInfo_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_create00
static int tolua_CocoStudio_Label_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Label* tolua_ret = (Label*)  Label::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Label");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_createInstance00
static int tolua_CocoStudio_Label_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  Label::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringLength of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getStringLength00
static int tolua_CocoStudio_Label_getStringLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getStringLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontName of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setFontName00
static int tolua_CocoStudio_Label_setFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  const string name = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontName'", NULL);
#endif
  {
   self->setFontName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchScaleChangeEnabled of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setTouchScaleChangeEnabled00
static int tolua_CocoStudio_Label_setTouchScaleChangeEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchScaleChangeEnabled'", NULL);
#endif
  {
   self->setTouchScaleChangeEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchScaleChangeEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFontSize of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getFontSize00
static int tolua_CocoStudio_Label_getFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFontSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getFontSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextVerticalAlignment of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getTextVerticalAlignment00
static int tolua_CocoStudio_Label_getTextVerticalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextVerticalAlignment'", NULL);
#endif
  {
   CCVerticalTextAlignment tolua_ret = (CCVerticalTextAlignment)  self->getTextVerticalAlignment();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextVerticalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setAnchorPoint00
static int tolua_CocoStudio_Label_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringValue of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getStringValue00
static int tolua_CocoStudio_Label_getStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStringValue();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setText00
static int tolua_CocoStudio_Label_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  const string text = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'", NULL);
#endif
  {
   self->setText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_new00
static int tolua_CocoStudio_Label_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Label* tolua_ret = (Label*)  Mtolua_new((Label)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Label");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_new00_local
static int tolua_CocoStudio_Label_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Label* tolua_ret = (Label*)  Mtolua_new((Label)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Label");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getDescription00
static int tolua_CocoStudio_Label_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getVirtualRenderer00
static int tolua_CocoStudio_Label_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextHorizontalAlignment of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getTextHorizontalAlignment00
static int tolua_CocoStudio_Label_getTextHorizontalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextHorizontalAlignment'", NULL);
#endif
  {
   CCTextAlignment tolua_ret = (CCTextAlignment)  self->getTextHorizontalAlignment();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextHorizontalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_delete00
static int tolua_CocoStudio_Label_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextAreaSize of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getTextAreaSize00
static int tolua_CocoStudio_Label_getTextAreaSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextAreaSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getTextAreaSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextAreaSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextVerticalAlignment of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setTextVerticalAlignment00
static int tolua_CocoStudio_Label_setTextVerticalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  CCVerticalTextAlignment alignment = ((CCVerticalTextAlignment) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextVerticalAlignment'", NULL);
#endif
  {
   self->setTextVerticalAlignment(alignment);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextVerticalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getContentSize00
static int tolua_CocoStudio_Label_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontSize of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setFontSize00
static int tolua_CocoStudio_Label_setFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  int size = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontSize'", NULL);
#endif
  {
   self->setFontSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchScaleChangeEnabled of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_isTouchScaleChangeEnabled00
static int tolua_CocoStudio_Label_isTouchScaleChangeEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchScaleChangeEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchScaleChangeEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchScaleChangeEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextHorizontalAlignment of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setTextHorizontalAlignment00
static int tolua_CocoStudio_Label_setTextHorizontalAlignment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  CCTextAlignment alignment = ((CCTextAlignment) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextHorizontalAlignment'", NULL);
#endif
  {
   self->setTextHorizontalAlignment(alignment);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextHorizontalAlignment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFontName of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_getFontName00
static int tolua_CocoStudio_Label_getFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFontName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getFontName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextAreaSize of class  Label */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Label_setTextAreaSize00
static int tolua_CocoStudio_Label_setTextAreaSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Label",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Label* self = (Label*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextAreaSize'", NULL);
#endif
  {
   self->setTextAreaSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextAreaSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_create00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   CCControlSaturationBrightnessPicker* tolua_ret = (CCControlSaturationBrightnessPicker*)  CCControlSaturationBrightnessPicker::create(target,pos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSaturationBrightnessPicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShadow of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getShadow00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getShadow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShadow'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getShadow();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShadow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTargetAndPos of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_initWithTargetAndPos00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_initWithTargetAndPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTargetAndPos'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTargetAndPos(target,pos);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTargetAndPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartPos of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getStartPos00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getStartPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartPos'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getStartPos();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOverlay of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getOverlay00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getOverlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOverlay'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getOverlay();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOverlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_setEnabled00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSlider of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSlider00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSlider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSlider'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getSlider();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSlider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateWithHSV of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateWithHSV00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateWithHSV00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"HSV",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
  HSV hsv = *((HSV*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateWithHSV'", NULL);
#endif
  {
   self->updateWithHSV(hsv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateWithHSV'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_delete00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackground of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBackground00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackground'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getBackground();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlSaturationBrightnessPicker* tolua_ret = (CCControlSaturationBrightnessPicker*)  Mtolua_new((CCControlSaturationBrightnessPicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSaturationBrightnessPicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00_local
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlSaturationBrightnessPicker* tolua_ret = (CCControlSaturationBrightnessPicker*)  Mtolua_new((CCControlSaturationBrightnessPicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSaturationBrightnessPicker");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDraggerWithHSV of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateDraggerWithHSV00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateDraggerWithHSV00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"HSV",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
  HSV hsv = *((HSV*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDraggerWithHSV'", NULL);
#endif
  {
   self->updateDraggerWithHSV(hsv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDraggerWithHSV'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSaturation of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSaturation00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSaturation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSaturation'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSaturation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSaturation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBrightness of class  CCControlSaturationBrightnessPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBrightness00
static int tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSaturationBrightnessPicker* self = (CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBrightness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBrightness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_create00
static int tolua_CocoStudio_LabelAtlas_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelAtlas* tolua_ret = (LabelAtlas*)  LabelAtlas::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_createInstance00
static int tolua_CocoStudio_LabelAtlas_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  LabelAtlas::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_setAnchorPoint00
static int tolua_CocoStudio_LabelAtlas_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_getVirtualRenderer00
static int tolua_CocoStudio_LabelAtlas_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringValue of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_getStringValue00
static int tolua_CocoStudio_LabelAtlas_getStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStringValue();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_getDescription00
static int tolua_CocoStudio_LabelAtlas_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_delete00
static int tolua_CocoStudio_LabelAtlas_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_getContentSize00
static int tolua_CocoStudio_LabelAtlas_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_new00
static int tolua_CocoStudio_LabelAtlas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelAtlas* tolua_ret = (LabelAtlas*)  Mtolua_new((LabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_new00_local
static int tolua_CocoStudio_LabelAtlas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelAtlas* tolua_ret = (LabelAtlas*)  Mtolua_new((LabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelAtlas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperty of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_setProperty00
static int tolua_CocoStudio_LabelAtlas_setProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const string stringValue = ((const string)  tolua_tocppstring(tolua_S,2,0));
  const string charMapFile = ((const string)  tolua_tocppstring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  const string startCharMap = ((const string)  tolua_tocppstring(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperty'", NULL);
#endif
  {
   self->setProperty(stringValue,charMapFile,itemWidth,itemHeight,startCharMap);
   tolua_pushcppstring(tolua_S,(const char*)stringValue);
   tolua_pushcppstring(tolua_S,(const char*)charMapFile);
   tolua_pushcppstring(tolua_S,(const char*)startCharMap);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStringValue of class  LabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelAtlas_setStringValue00
static int tolua_CocoStudio_LabelAtlas_setStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelAtlas",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelAtlas* self = (LabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const string value = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStringValue'", NULL);
#endif
  {
   self->setStringValue(value);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_create00
static int tolua_CocoStudio_LabelBMFont_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelBMFont* tolua_ret = (LabelBMFont*)  LabelBMFont::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelBMFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_createInstance00
static int tolua_CocoStudio_LabelBMFont_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  LabelBMFont::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_setAnchorPoint00
static int tolua_CocoStudio_LabelBMFont_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_getVirtualRenderer00
static int tolua_CocoStudio_LabelBMFont_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringValue of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_getStringValue00
static int tolua_CocoStudio_LabelBMFont_getStringValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringValue'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getStringValue();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_setText00
static int tolua_CocoStudio_LabelBMFont_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'", NULL);
#endif
  {
   self->setText(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_getDescription00
static int tolua_CocoStudio_LabelBMFont_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_delete00
static int tolua_CocoStudio_LabelBMFont_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_getContentSize00
static int tolua_CocoStudio_LabelBMFont_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_new00
static int tolua_CocoStudio_LabelBMFont_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelBMFont* tolua_ret = (LabelBMFont*)  Mtolua_new((LabelBMFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelBMFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_new00_local
static int tolua_CocoStudio_LabelBMFont_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LabelBMFont* tolua_ret = (LabelBMFont*)  Mtolua_new((LabelBMFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LabelBMFont");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFntFile of class  LabelBMFont */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LabelBMFont_setFntFile00
static int tolua_CocoStudio_LabelBMFont_setFntFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LabelBMFont* self = (LabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFntFile'", NULL);
#endif
  {
   self->setFntFile(fileName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFntFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmatureDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDisplayData_create00
static int tolua_CocoStudio_CCArmatureDisplayData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureDisplayData* tolua_ret = (CCArmatureDisplayData*)  CCArmatureDisplayData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCArmatureDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDisplayData_delete00
static int tolua_CocoStudio_CCArmatureDisplayData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDisplayData* self = (CCArmatureDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCArmatureDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDisplayData_new00
static int tolua_CocoStudio_CCArmatureDisplayData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureDisplayData* tolua_ret = (CCArmatureDisplayData*)  Mtolua_new((CCArmatureDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCArmatureDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDisplayData_new00_local
static int tolua_CocoStudio_CCArmatureDisplayData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureDisplayData* tolua_ret = (CCArmatureDisplayData*)  Mtolua_new((CCArmatureDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureDisplayData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seekActionWidgetByActionTag of class  UIHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UIHelper_seekActionWidgetByActionTag00
static int tolua_CocoStudio_UIHelper_seekActionWidgetByActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* root = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  int tag = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Widget* tolua_ret = (Widget*)  UIHelper::seekActionWidgetByActionTag(root,tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seekActionWidgetByActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seekWidgetByTag of class  UIHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UIHelper_seekWidgetByTag00
static int tolua_CocoStudio_UIHelper_seekWidgetByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* root = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  int tag = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Widget* tolua_ret = (Widget*)  UIHelper::seekWidgetByTag(root,tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seekWidgetByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seekWidgetByRelativeName of class  UIHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UIHelper_seekWidgetByRelativeName00
static int tolua_CocoStudio_UIHelper_seekWidgetByRelativeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* root = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   Widget* tolua_ret = (Widget*)  UIHelper::seekWidgetByRelativeName(root,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seekWidgetByRelativeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seekWidgetByName of class  UIHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UIHelper_seekWidgetByName00
static int tolua_CocoStudio_UIHelper_seekWidgetByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIHelper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Widget* root = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   Widget* tolua_ret = (Widget*)  UIHelper::seekWidgetByName(root,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seekWidgetByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purge of class  CCSpriteFrameCacheHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteFrameCacheHelper_purge00
static int tolua_CocoStudio_CCSpriteFrameCacheHelper_purge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSpriteFrameCacheHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSpriteFrameCacheHelper::purge();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedSpriteFrameCacheHelper of class  CCSpriteFrameCacheHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteFrameCacheHelper_sharedSpriteFrameCacheHelper00
static int tolua_CocoStudio_CCSpriteFrameCacheHelper_sharedSpriteFrameCacheHelper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSpriteFrameCacheHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSpriteFrameCacheHelper* tolua_ret = (CCSpriteFrameCacheHelper*)  CCSpriteFrameCacheHelper::sharedSpriteFrameCacheHelper();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSpriteFrameCacheHelper");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedSpriteFrameCacheHelper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFrameFromFile of class  CCSpriteFrameCacheHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteFrameCacheHelper_addSpriteFrameFromFile00
static int tolua_CocoStudio_CCSpriteFrameCacheHelper_addSpriteFrameFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSpriteFrameCacheHelper",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSpriteFrameCacheHelper* self = (CCSpriteFrameCacheHelper*)  tolua_tousertype(tolua_S,1,0);
  const char* plistPath = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* imagePath = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFrameFromFile'", NULL);
#endif
  {
   self->addSpriteFrameFromFile(plistPath,imagePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteFrameFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCSpriteFrameCacheHelper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteFrameCacheHelper_delete00
static int tolua_CocoStudio_CCSpriteFrameCacheHelper_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSpriteFrameCacheHelper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSpriteFrameCacheHelper* self = (CCSpriteFrameCacheHelper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCColliderFilter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderFilter_delete00
static int tolua_CocoStudio_CCColliderFilter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderFilter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderFilter* self = (CCColliderFilter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  TimelineActionData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TimelineActionData_create00
static int tolua_CocoStudio_TimelineActionData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TimelineActionData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int actionTag = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   TimelineActionData* tolua_ret = (TimelineActionData*)  TimelineActionData::create(actionTag);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TimelineActionData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActionTag of class  TimelineActionData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TimelineActionData_setActionTag00
static int tolua_CocoStudio_TimelineActionData_setActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TimelineActionData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TimelineActionData* self = (TimelineActionData*)  tolua_tousertype(tolua_S,1,0);
  int actionTag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActionTag'", NULL);
#endif
  {
   self->setActionTag(actionTag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionTag of class  TimelineActionData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TimelineActionData_getActionTag00
static int tolua_CocoStudio_TimelineActionData_getActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TimelineActionData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TimelineActionData* self = (TimelineActionData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getActionTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_create00
static int tolua_CocoStudio_VisibleFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   VisibleFrame* tolua_ret = (VisibleFrame*)  VisibleFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"VisibleFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_setVisible00
static int tolua_CocoStudio_VisibleFrame_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VisibleFrame* self = (VisibleFrame*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_clone00
static int tolua_CocoStudio_VisibleFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VisibleFrame* self = (VisibleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_isVisible00
static int tolua_CocoStudio_VisibleFrame_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VisibleFrame* self = (VisibleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_onEnter00
static int tolua_CocoStudio_VisibleFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VisibleFrame* self = (VisibleFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_new00
static int tolua_CocoStudio_VisibleFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   VisibleFrame* tolua_ret = (VisibleFrame*)  Mtolua_new((VisibleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"VisibleFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  VisibleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_VisibleFrame_new00_local
static int tolua_CocoStudio_VisibleFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"VisibleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   VisibleFrame* tolua_ret = (VisibleFrame*)  Mtolua_new((VisibleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"VisibleFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_create00
static int tolua_CocoStudio_CCComController_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComController* tolua_ret = (CCComController*)  CCComController::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_createInstance00
static int tolua_CocoStudio_CCComController_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  CCComController::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_setEnabled00
static int tolua_CocoStudio_CCComController_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_onEnter00
static int tolua_CocoStudio_CCComController_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_onExit00
static int tolua_CocoStudio_CCComController_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_isEnabled00
static int tolua_CocoStudio_CCComController_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_update00
static int tolua_CocoStudio_CCComController_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
  float delta = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_delete00
static int tolua_CocoStudio_CCComController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_init00
static int tolua_CocoStudio_CCComController_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_new00
static int tolua_CocoStudio_CCComController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComController* tolua_ret = (CCComController*)  Mtolua_new((CCComController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComController_new00_local
static int tolua_CocoStudio_CCComController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComController* tolua_ret = (CCComController*)  Mtolua_new((CCComController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCInputDelegate__ of class  CCComController */
#ifndef TOLUA_DISABLE_tolua_get_CCComController___CCInputDelegate__
static int tolua_get_CCComController___CCInputDelegate__(lua_State* tolua_S)
{
  CCComController* self = (CCComController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCInputDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCInputDelegate*>(self), "CCInputDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCInputDelegate*)self), "CCInputDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuadraticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionInOut_create00
static int tolua_CocoStudio_CCEaseQuadraticActionInOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuadraticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuadraticActionInOut* tolua_ret = (CCEaseQuadraticActionInOut*)  CCEaseQuadraticActionInOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuadraticActionInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuadraticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionInOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuadraticActionInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionInOut* self = (CCEaseQuadraticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuadraticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionInOut_update00
static int tolua_CocoStudio_CCEaseQuadraticActionInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionInOut* self = (CCEaseQuadraticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuadraticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionInOut_reverse00
static int tolua_CocoStudio_CCEaseQuadraticActionInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionInOut* self = (CCEaseQuadraticActionInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purge of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_purge00
static int tolua_CocoStudio_CCArmatureDataManager_purge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureDataManager::purge();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedArmatureDataManager of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_sharedArmatureDataManager00
static int tolua_CocoStudio_CCArmatureDataManager_sharedArmatureDataManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureDataManager* tolua_ret = (CCArmatureDataManager*)  CCArmatureDataManager::sharedArmatureDataManager();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureDataManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedArmatureDataManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationDatas of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getAnimationDatas00
static int tolua_CocoStudio_CCArmatureDataManager_getAnimationDatas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationDatas'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getAnimationDatas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationDatas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimationData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_removeAnimationData00
static int tolua_CocoStudio_CCArmatureDataManager_removeAnimationData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimationData'", NULL);
#endif
  {
   self->removeAnimationData(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimationData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addArmatureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addArmatureData00
static int tolua_CocoStudio_CCArmatureDataManager_addArmatureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCArmatureData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCArmatureData* armatureData = ((CCArmatureData*)  tolua_tousertype(tolua_S,3,0));
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addArmatureData'", NULL);
#endif
  {
   self->addArmatureData(id,armatureData,configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addArmatureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addArmatureFileInfo of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo00
static int tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* imagePath = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* plistPath = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addArmatureFileInfo'", NULL);
#endif
  {
   self->addArmatureFileInfo(imagePath,plistPath,configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addArmatureFileInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addArmatureFileInfo of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo01
static int tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addArmatureFileInfo'", NULL);
#endif
  {
   self->addArmatureFileInfo(configFilePath);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeArmatureFileInfo of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_removeArmatureFileInfo00
static int tolua_CocoStudio_CCArmatureDataManager_removeArmatureFileInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeArmatureFileInfo'", NULL);
#endif
  {
   self->removeArmatureFileInfo(configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeArmatureFileInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureDatas of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getTextureDatas00
static int tolua_CocoStudio_CCArmatureDataManager_getTextureDatas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureDatas'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getTextureDatas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureDatas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getTextureData00
static int tolua_CocoStudio_CCArmatureDataManager_getTextureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureData'", NULL);
#endif
  {
   CCTextureData* tolua_ret = (CCTextureData*)  self->getTextureData(id);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTextureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmatureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getArmatureData00
static int tolua_CocoStudio_CCArmatureDataManager_getArmatureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmatureData'", NULL);
#endif
  {
   CCArmatureData* tolua_ret = (CCArmatureData*)  self->getArmatureData(id);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmatureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getAnimationData00
static int tolua_CocoStudio_CCArmatureDataManager_getAnimationData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationData'", NULL);
#endif
  {
   CCAnimationData* tolua_ret = (CCAnimationData*)  self->getAnimationData(id);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCAnimationData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_delete00
static int tolua_CocoStudio_CCArmatureDataManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimationData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addAnimationData00
static int tolua_CocoStudio_CCArmatureDataManager_addAnimationData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCAnimationData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCAnimationData* animationData = ((CCAnimationData*)  tolua_tousertype(tolua_S,3,0));
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimationData'", NULL);
#endif
  {
   self->addAnimationData(id,animationData,configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimationData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_init00
static int tolua_CocoStudio_CCArmatureDataManager_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeArmatureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_removeArmatureData00
static int tolua_CocoStudio_CCArmatureDataManager_removeArmatureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeArmatureData'", NULL);
#endif
  {
   self->removeArmatureData(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeArmatureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmatureDatas of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_getArmatureDatas00
static int tolua_CocoStudio_CCArmatureDataManager_getArmatureDatas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmatureDatas'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getArmatureDatas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmatureDatas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTextureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_removeTextureData00
static int tolua_CocoStudio_CCArmatureDataManager_removeTextureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTextureData'", NULL);
#endif
  {
   self->removeTextureData(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTextureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTextureData of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addTextureData00
static int tolua_CocoStudio_CCArmatureDataManager_addTextureData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTextureData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* id = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCTextureData* textureData = ((CCTextureData*)  tolua_tousertype(tolua_S,3,0));
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTextureData'", NULL);
#endif
  {
   self->addTextureData(id,textureData,configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTextureData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAutoLoadSpriteFile of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_isAutoLoadSpriteFile00
static int tolua_CocoStudio_CCArmatureDataManager_isAutoLoadSpriteFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAutoLoadSpriteFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAutoLoadSpriteFile();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAutoLoadSpriteFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFrameFromFile of class  CCArmatureDataManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureDataManager_addSpriteFrameFromFile00
static int tolua_CocoStudio_CCArmatureDataManager_addSpriteFrameFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureDataManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureDataManager* self = (CCArmatureDataManager*)  tolua_tousertype(tolua_S,1,0);
  const char* plistPath = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* imagePath = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* configFilePath = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFrameFromFile'", NULL);
#endif
  {
   self->addSpriteFrameFromFile(plistPath,imagePath,configFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteFrameFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_create00
static int tolua_CocoStudio_ScrollView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollView* tolua_ret = (ScrollView*)  ScrollView::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_createInstance00
static int tolua_CocoStudio_ScrollView_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  ScrollView::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addChild00
static int tolua_CocoStudio_ScrollView_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addChild01
static int tolua_CocoStudio_ScrollView_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ScrollView_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addChild02
static int tolua_CocoStudio_ScrollView_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ScrollView_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToTop of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToTop00
static int tolua_CocoStudio_ScrollView_scrollToTop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToTop'", NULL);
#endif
  {
   self->scrollToTop(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToTop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchEnded of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_onTouchEnded00
static int tolua_CocoStudio_ScrollView_onTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchEnded'", NULL);
#endif
  {
   self->onTouchEnded(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToPercentHorizontal of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToPercentHorizontal00
static int tolua_CocoStudio_ScrollView_scrollToPercentHorizontal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
  float time = ((float)  tolua_tonumber(tolua_S,3,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToPercentHorizontal'", NULL);
#endif
  {
   self->scrollToPercentHorizontal(percent,time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToPercentHorizontal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getDescription00
static int tolua_CocoStudio_ScrollView_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildren of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeAllChildren00
static int tolua_CocoStudio_ScrollView_removeAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildren'", NULL);
#endif
  {
   self->removeAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToBottom of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToBottom00
static int tolua_CocoStudio_ScrollView_scrollToBottom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToBottom'", NULL);
#endif
  {
   self->scrollToBottom(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToBottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildren of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getChildren00
static int tolua_CocoStudio_ScrollView_getChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildren'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getChildren();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildByTag of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getChildByTag00
static int tolua_CocoStudio_ScrollView_getChildByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildByTag'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getChildByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_onEnter00
static int tolua_CocoStudio_ScrollView_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInnerContainerSize of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_setInnerContainerSize00
static int tolua_CocoStudio_ScrollView_setInnerContainerSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInnerContainerSize'", NULL);
#endif
  {
   self->setInnerContainerSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInnerContainerSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToBottomLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToBottomLeft00
static int tolua_CocoStudio_ScrollView_scrollToBottomLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToBottomLeft'", NULL);
#endif
  {
   self->scrollToBottomLeft(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToBottomLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerContainer of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getInnerContainer00
static int tolua_CocoStudio_ScrollView_getInnerContainer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerContainer'", NULL);
#endif
  {
   Layout* tolua_ret = (Layout*)  self->getInnerContainer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Layout");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerContainer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToBottom of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToBottom00
static int tolua_CocoStudio_ScrollView_jumpToBottom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToBottom'", NULL);
#endif
  {
   self->jumpToBottom();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToBottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildByName of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getChildByName00
static int tolua_CocoStudio_ScrollView_getChildByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildByName'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getChildByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToTopLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToTopLeft00
static int tolua_CocoStudio_ScrollView_scrollToTopLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToTopLeft'", NULL);
#endif
  {
   self->scrollToTopLeft(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToTopLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToTopRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToTopRight00
static int tolua_CocoStudio_ScrollView_jumpToTopRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToTopRight'", NULL);
#endif
  {
   self->jumpToTopRight();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToTopRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToPercentBothDirection of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToPercentBothDirection00
static int tolua_CocoStudio_ScrollView_scrollToPercentBothDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* percent = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float time = ((float)  tolua_tonumber(tolua_S,3,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToPercentBothDirection'", NULL);
#endif
  {
   self->scrollToPercentBothDirection(*percent,time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToPercentBothDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_delete00
static int tolua_CocoStudio_ScrollView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeNodeByTag of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeNodeByTag00
static int tolua_CocoStudio_ScrollView_removeNodeByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeNodeByTag'", NULL);
#endif
  {
   self->removeNodeByTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeNodeByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerContainerSize of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getInnerContainerSize00
static int tolua_CocoStudio_ScrollView_getInnerContainerSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerContainerSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getInnerContainerSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerContainerSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBounceEnabled of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_isBounceEnabled00
static int tolua_CocoStudio_ScrollView_isBounceEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBounceEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBounceEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBounceEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToPercentVertical of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToPercentVertical00
static int tolua_CocoStudio_ScrollView_jumpToPercentVertical00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToPercentVertical'", NULL);
#endif
  {
   self->jumpToPercentVertical(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToPercentVertical'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInertiaScrollEnabled of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_setInertiaScrollEnabled00
static int tolua_CocoStudio_ScrollView_setInertiaScrollEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInertiaScrollEnabled'", NULL);
#endif
  {
   self->setInertiaScrollEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInertiaScrollEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchMoved of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_onTouchMoved00
static int tolua_CocoStudio_ScrollView_onTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchMoved'", NULL);
#endif
  {
   self->onTouchMoved(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToTopLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToTopLeft00
static int tolua_CocoStudio_ScrollView_jumpToTopLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToTopLeft'", NULL);
#endif
  {
   self->jumpToTopLeft();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToTopLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToPercentHorizontal of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToPercentHorizontal00
static int tolua_CocoStudio_ScrollView_jumpToPercentHorizontal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToPercentHorizontal'", NULL);
#endif
  {
   self->jumpToPercentHorizontal(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToPercentHorizontal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addNode00
static int tolua_CocoStudio_ScrollView_addNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addNode01
static int tolua_CocoStudio_ScrollView_addNode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ScrollView_addNode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addNode of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_addNode02
static int tolua_CocoStudio_ScrollView_addNode02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addNode'", NULL);
#endif
  {
   self->addNode(node,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ScrollView_addNode01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToBottomRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToBottomRight00
static int tolua_CocoStudio_ScrollView_jumpToBottomRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToBottomRight'", NULL);
#endif
  {
   self->jumpToBottomRight();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToBottomRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_update00
static int tolua_CocoStudio_ScrollView_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutType of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getLayoutType00
static int tolua_CocoStudio_ScrollView_getLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutType'", NULL);
#endif
  {
   LayoutType tolua_ret = (LayoutType)  self->getLayoutType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeAllChildrenWithCleanup00
static int tolua_CocoStudio_ScrollView_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchCancelled of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_onTouchCancelled00
static int tolua_CocoStudio_ScrollView_onTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchCancelled'", NULL);
#endif
  {
   self->onTouchCancelled(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodeByTag of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getNodeByTag00
static int tolua_CocoStudio_ScrollView_getNodeByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodeByTag'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getNodeByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodeByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInertiaScrollEnabled of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_isInertiaScrollEnabled00
static int tolua_CocoStudio_ScrollView_isInertiaScrollEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInertiaScrollEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInertiaScrollEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInertiaScrollEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBounceEnabled of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_setBounceEnabled00
static int tolua_CocoStudio_ScrollView_setBounceEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBounceEnabled'", NULL);
#endif
  {
   self->setBounceEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBounceEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToTop of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToTop00
static int tolua_CocoStudio_ScrollView_jumpToTop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToTop'", NULL);
#endif
  {
   self->jumpToTop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToTop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToLeft00
static int tolua_CocoStudio_ScrollView_scrollToLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToLeft'", NULL);
#endif
  {
   self->scrollToLeft(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToPercentBothDirection of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToPercentBothDirection00
static int tolua_CocoStudio_ScrollView_jumpToPercentBothDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* percent = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToPercentBothDirection'", NULL);
#endif
  {
   self->jumpToPercentBothDirection(*percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToPercentBothDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToPercentVertical of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToPercentVertical00
static int tolua_CocoStudio_ScrollView_scrollToPercentVertical00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
  float time = ((float)  tolua_tonumber(tolua_S,3,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToPercentVertical'", NULL);
#endif
  {
   self->scrollToPercentVertical(percent,time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToPercentVertical'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchBegan of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_onTouchBegan00
static int tolua_CocoStudio_ScrollView_onTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTouchBegan(touch,unusedEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToBottomRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToBottomRight00
static int tolua_CocoStudio_ScrollView_scrollToBottomRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToBottomRight'", NULL);
#endif
  {
   self->scrollToBottomRight(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToBottomRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeNode of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeNode00
static int tolua_CocoStudio_ScrollView_removeNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeNode'", NULL);
#endif
  {
   self->removeNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllNodes of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeAllNodes00
static int tolua_CocoStudio_ScrollView_removeAllNodes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllNodes'", NULL);
#endif
  {
   self->removeAllNodes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllNodes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToLeft00
static int tolua_CocoStudio_ScrollView_jumpToLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToLeft'", NULL);
#endif
  {
   self->jumpToLeft();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToRight00
static int tolua_CocoStudio_ScrollView_scrollToRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToRight'", NULL);
#endif
  {
   self->scrollToRight(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeChild00
static int tolua_CocoStudio_ScrollView_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleaup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleaup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_removeChild01
static int tolua_CocoStudio_ScrollView_removeChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ScrollView_removeChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodes of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getNodes00
static int tolua_CocoStudio_ScrollView_getNodes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodes'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getNodes();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToBottomLeft of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToBottomLeft00
static int tolua_CocoStudio_ScrollView_jumpToBottomLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToBottomLeft'", NULL);
#endif
  {
   self->jumpToBottomLeft();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToBottomLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchEndPoint of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getTouchEndPoint00
static int tolua_CocoStudio_ScrollView_getTouchEndPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchEndPoint'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getTouchEndPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchEndPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_new00
static int tolua_CocoStudio_ScrollView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollView* tolua_ret = (ScrollView*)  Mtolua_new((ScrollView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_new00_local
static int tolua_CocoStudio_ScrollView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollView* tolua_ret = (ScrollView*)  Mtolua_new((ScrollView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayoutType of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_setLayoutType00
static int tolua_CocoStudio_ScrollView_setLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  LayoutType type = ((LayoutType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayoutType'", NULL);
#endif
  {
   self->setLayoutType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: jumpToRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_jumpToRight00
static int tolua_CocoStudio_ScrollView_jumpToRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'jumpToRight'", NULL);
#endif
  {
   self->jumpToRight();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'jumpToRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildrenCount of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_getChildrenCount00
static int tolua_CocoStudio_ScrollView_getChildrenCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildrenCount'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getChildrenCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildrenCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToTopRight of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollView_scrollToTopRight00
static int tolua_CocoStudio_ScrollView_scrollToTopRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
  bool attenuated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToTopRight'", NULL);
#endif
  {
   self->scrollToTopRight(time,attenuated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToTopRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __UIScrollInterface__ of class  ScrollView */
#ifndef TOLUA_DISABLE_tolua_get_ScrollView___UIScrollInterface__
static int tolua_get_ScrollView___UIScrollInterface__(lua_State* tolua_S)
{
  ScrollView* self = (ScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__UIScrollInterface__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<UIScrollInterface*>(self), "UIScrollInterface");
#else
   tolua_pushusertype(tolua_S,(void*)((UIScrollInterface*)self), "UIScrollInterface");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_create00
static int tolua_CocoStudio_Button_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Button* tolua_ret = (Button*)  Button::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Button");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_createInstance00
static int tolua_CocoStudio_Button_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  Button::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setAnchorPoint00
static int tolua_CocoStudio_Button_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getVirtualRenderer00
static int tolua_CocoStudio_Button_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleText of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getTitleText00
static int tolua_CocoStudio_Button_getTitleText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleText'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTitleText();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleFontSize of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setTitleFontSize00
static int tolua_CocoStudio_Button_setTitleFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleFontSize'", NULL);
#endif
  {
   self->setTitleFontSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getDescription00
static int tolua_CocoStudio_Button_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale9Enabled of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setScale9Enabled00
static int tolua_CocoStudio_Button_setScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  bool able = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale9Enabled'", NULL);
#endif
  {
   self->setScale9Enabled(able);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleColor of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setTitleColor00
static int tolua_CocoStudio_Button_setTitleColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleColor'", NULL);
#endif
  {
   self->setTitleColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_Button_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsetsDisabledRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setCapInsetsDisabledRenderer00
static int tolua_CocoStudio_Button_setCapInsetsDisabledRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsetsDisabledRenderer'", NULL);
#endif
  {
   self->setCapInsetsDisabledRenderer(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsetsDisabledRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsetPressedRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getCapInsetPressedRenderer00
static int tolua_CocoStudio_Button_getCapInsetPressedRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsetPressedRenderer'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsetPressedRenderer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsetPressedRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleColor of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getTitleColor00
static int tolua_CocoStudio_Button_getTitleColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getTitleColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureDisabled of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_loadTextureDisabled00
static int tolua_CocoStudio_Button_loadTextureDisabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const char* disabled = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureDisabled'", NULL);
#endif
  {
   self->loadTextureDisabled(disabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureDisabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_delete00
static int tolua_CocoStudio_Button_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getContentSize00
static int tolua_CocoStudio_Button_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleText of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setTitleText00
static int tolua_CocoStudio_Button_setTitleText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const string text = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleText'", NULL);
#endif
  {
   self->setTitleText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsetNormalRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getCapInsetNormalRenderer00
static int tolua_CocoStudio_Button_getCapInsetNormalRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsetNormalRenderer'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsetNormalRenderer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsetNormalRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsetsNormalRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setCapInsetsNormalRenderer00
static int tolua_CocoStudio_Button_setCapInsetsNormalRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsetsNormalRenderer'", NULL);
#endif
  {
   self->setCapInsetsNormalRenderer(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsetsNormalRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTexturePressed of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_loadTexturePressed00
static int tolua_CocoStudio_Button_loadTexturePressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const char* selected = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTexturePressed'", NULL);
#endif
  {
   self->loadTexturePressed(selected,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTexturePressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleFontName of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setTitleFontName00
static int tolua_CocoStudio_Button_setTitleFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleFontName'", NULL);
#endif
  {
   self->setTitleFontName(fontName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextures of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_loadTextures00
static int tolua_CocoStudio_Button_loadTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const char* normal = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selected = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* disabled = ((const char*)  tolua_tostring(tolua_S,4,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextures'", NULL);
#endif
  {
   self->loadTextures(normal,selected,disabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isScale9Enabled of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_isScale9Enabled00
static int tolua_CocoStudio_Button_isScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isScale9Enabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isScale9Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsetDisabledRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getCapInsetDisabledRenderer00
static int tolua_CocoStudio_Button_getCapInsetDisabledRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsetDisabledRenderer'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsetDisabledRenderer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsetDisabledRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureNormal of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_loadTextureNormal00
static int tolua_CocoStudio_Button_loadTextureNormal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const char* normal = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureNormal'", NULL);
#endif
  {
   self->loadTextureNormal(normal,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureNormal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsetsPressedRenderer of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setCapInsetsPressedRenderer00
static int tolua_CocoStudio_Button_setCapInsetsPressedRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsetsPressedRenderer'", NULL);
#endif
  {
   self->setCapInsetsPressedRenderer(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsetsPressedRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleFontSize of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getTitleFontSize00
static int tolua_CocoStudio_Button_getTitleFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleFontSize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTitleFontSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleFontName of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_getTitleFontName00
static int tolua_CocoStudio_Button_getTitleFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleFontName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTitleFontName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsets of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setCapInsets00
static int tolua_CocoStudio_Button_setCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsets'", NULL);
#endif
  {
   self->setCapInsets(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_new00
static int tolua_CocoStudio_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Button* tolua_ret = (Button*)  Mtolua_new((Button)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Button");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_new00_local
static int tolua_CocoStudio_Button_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Button* tolua_ret = (Button*)  Mtolua_new((Button)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Button");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPressedActionEnabled of class  Button */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Button_setPressedActionEnabled00
static int tolua_CocoStudio_Button_setPressedActionEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Button",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Button* self = (Button*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPressedActionEnabled'", NULL);
#endif
  {
   self->setPressedActionEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPressedActionEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FrameCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_FrameCreateCallFunc_delete00
static int tolua_CocoStudio_FrameCreateCallFunc_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FrameCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FrameCreateCallFunc* self = (FrameCreateCallFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FrameCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_FrameCreateCallFunc_new00
static int tolua_CocoStudio_FrameCreateCallFunc_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FrameCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FrameCreateCallFunc* tolua_ret = (FrameCreateCallFunc*)  Mtolua_new((FrameCreateCallFunc)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"FrameCreateCallFunc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FrameCreateCallFunc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_FrameCreateCallFunc_new00_local
static int tolua_CocoStudio_FrameCreateCallFunc_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FrameCreateCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FrameCreateCallFunc* tolua_ret = (FrameCreateCallFunc*)  Mtolua_new((FrameCreateCallFunc)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"FrameCreateCallFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuarticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionOut_create00
static int tolua_CocoStudio_CCEaseQuarticActionOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuarticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuarticActionOut* tolua_ret = (CCEaseQuarticActionOut*)  CCEaseQuarticActionOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuarticActionOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuarticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuarticActionOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionOut* self = (CCEaseQuarticActionOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuarticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionOut_update00
static int tolua_CocoStudio_CCEaseQuarticActionOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionOut* self = (CCEaseQuarticActionOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuarticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionOut_reverse00
static int tolua_CocoStudio_CCEaseQuarticActionOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionOut* self = (CCEaseQuarticActionOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: value of class  CCColor3bObject */
#ifndef TOLUA_DISABLE_tolua_get_CCColor3bObject_value
static int tolua_get_CCColor3bObject_value(lua_State* tolua_S)
{
  CCColor3bObject* self = (CCColor3bObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'value'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->value,"ccColor3B");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: value of class  CCColor3bObject */
#ifndef TOLUA_DISABLE_tolua_set_CCColor3bObject_value
static int tolua_set_CCColor3bObject_value(lua_State* tolua_S)
{
  CCColor3bObject* self = (CCColor3bObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'value'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccColor3B",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->value = *((ccColor3B*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCColor3bObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColor3bObject_new00
static int tolua_CocoStudio_CCColor3bObject_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColor3bObject",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ccColor3B s_value = *((ccColor3B*)  tolua_tousertype(tolua_S,2,0));
  {
   CCColor3bObject* tolua_ret = (CCColor3bObject*)  Mtolua_new((CCColor3bObject)(s_value));
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColor3bObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCColor3bObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColor3bObject_new00_local
static int tolua_CocoStudio_CCColor3bObject_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColor3bObject",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ccColor3B s_value = *((ccColor3B*)  tolua_tousertype(tolua_S,2,0));
  {
   CCColor3bObject* tolua_ret = (CCColor3bObject*)  Mtolua_new((CCColor3bObject)(s_value));
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColor3bObject");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_create00
static int tolua_CocoStudio_ImageView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ImageView* tolua_ret = (ImageView*)  ImageView::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ImageView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_createInstance00
static int tolua_CocoStudio_ImageView_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  ImageView::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_setAnchorPoint00
static int tolua_CocoStudio_ImageView_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_getVirtualRenderer00
static int tolua_CocoStudio_ImageView_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_ImageView_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTexture of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_loadTexture00
static int tolua_CocoStudio_ImageView_loadTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTexture'", NULL);
#endif
  {
   self->loadTexture(fileName,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_getDescription00
static int tolua_CocoStudio_ImageView_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale9Enabled of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_setScale9Enabled00
static int tolua_CocoStudio_ImageView_setScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  bool able = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale9Enabled'", NULL);
#endif
  {
   self->setScale9Enabled(able);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_delete00
static int tolua_CocoStudio_ImageView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureRect of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_setTextureRect00
static int tolua_CocoStudio_ImageView_setTextureRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* rect = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureRect'", NULL);
#endif
  {
   self->setTextureRect(*rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsets of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_setCapInsets00
static int tolua_CocoStudio_ImageView_setCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsets'", NULL);
#endif
  {
   self->setCapInsets(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsets of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_getCapInsets00
static int tolua_CocoStudio_ImageView_getCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsets'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsets();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_getContentSize00
static int tolua_CocoStudio_ImageView_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_new00
static int tolua_CocoStudio_ImageView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ImageView* tolua_ret = (ImageView*)  Mtolua_new((ImageView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ImageView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_new00_local
static int tolua_CocoStudio_ImageView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ImageView* tolua_ret = (ImageView*)  Mtolua_new((ImageView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ImageView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isScale9Enabled of class  ImageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ImageView_isScale9Enabled00
static int tolua_CocoStudio_ImageView_isScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ImageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ImageView* self = (ImageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isScale9Enabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isScale9Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ArmatureMovementDispatcher */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ArmatureMovementDispatcher_delete00
static int tolua_CocoStudio_ArmatureMovementDispatcher_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmatureMovementDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmatureMovementDispatcher* self = (ArmatureMovementDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ArmatureMovementDispatcher */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ArmatureMovementDispatcher_new00
static int tolua_CocoStudio_ArmatureMovementDispatcher_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ArmatureMovementDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ArmatureMovementDispatcher* tolua_ret = (ArmatureMovementDispatcher*)  Mtolua_new((ArmatureMovementDispatcher)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ArmatureMovementDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ArmatureMovementDispatcher */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ArmatureMovementDispatcher_new00_local
static int tolua_CocoStudio_ArmatureMovementDispatcher_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ArmatureMovementDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ArmatureMovementDispatcher* tolua_ret = (ArmatureMovementDispatcher*)  Mtolua_new((ArmatureMovementDispatcher)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ArmatureMovementDispatcher");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: left of class  Margin */
#ifndef TOLUA_DISABLE_tolua_get_Margin_left
static int tolua_get_Margin_left(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'left'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->left);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: left of class  Margin */
#ifndef TOLUA_DISABLE_tolua_set_Margin_left
static int tolua_set_Margin_left(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'left'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->left = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: top of class  Margin */
#ifndef TOLUA_DISABLE_tolua_get_Margin_top
static int tolua_get_Margin_top(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'top'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->top);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: top of class  Margin */
#ifndef TOLUA_DISABLE_tolua_set_Margin_top
static int tolua_set_Margin_top(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'top'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->top = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: right of class  Margin */
#ifndef TOLUA_DISABLE_tolua_get_Margin_right
static int tolua_get_Margin_right(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'right'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->right);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: right of class  Margin */
#ifndef TOLUA_DISABLE_tolua_set_Margin_right
static int tolua_set_Margin_right(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'right'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->right = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bottom of class  Margin */
#ifndef TOLUA_DISABLE_tolua_get_Margin_bottom
static int tolua_get_Margin_bottom(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bottom'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->bottom);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bottom of class  Margin */
#ifndef TOLUA_DISABLE_tolua_set_Margin_bottom
static int tolua_set_Margin_bottom(lua_State* tolua_S)
{
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bottom'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bottom = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMargin of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_setMargin00
static int tolua_CocoStudio_Margin_setMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Margin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
  float l = ((float)  tolua_tonumber(tolua_S,2,0));
  float t = ((float)  tolua_tonumber(tolua_S,3,0));
  float r = ((float)  tolua_tonumber(tolua_S,4,0));
  float b = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMargin'", NULL);
#endif
  {
   self->setMargin(l,t,r,b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: equals of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_equals00
static int tolua_CocoStudio_Margin_equals00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Margin",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Margin",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Margin* self = (Margin*)  tolua_tousertype(tolua_S,1,0);
  const Margin* target = ((const Margin*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'equals'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->equals(*target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'equals'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new00
static int tolua_CocoStudio_Margin_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float l = ((float)  tolua_tonumber(tolua_S,2,0));
  float t = ((float)  tolua_tonumber(tolua_S,3,0));
  float r = ((float)  tolua_tonumber(tolua_S,4,0));
  float b = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)(l,t,r,b));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new00_local
static int tolua_CocoStudio_Margin_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float l = ((float)  tolua_tonumber(tolua_S,2,0));
  float t = ((float)  tolua_tonumber(tolua_S,3,0));
  float r = ((float)  tolua_tonumber(tolua_S,4,0));
  float b = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)(l,t,r,b));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new01
static int tolua_CocoStudio_Margin_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_Margin_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new01_local
static int tolua_CocoStudio_Margin_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_Margin_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new02
static int tolua_CocoStudio_Margin_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Margin",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Margin* other = ((const Margin*)  tolua_tousertype(tolua_S,2,0));
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)(*other));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_Margin_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Margin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Margin_new02_local
static int tolua_CocoStudio_Margin_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Margin",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Margin",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Margin* other = ((const Margin*)  tolua_tousertype(tolua_S,2,0));
  {
   Margin* tolua_ret = (Margin*)  Mtolua_new((Margin)(*other));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Margin");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_Margin_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjectID_ofSortedObject of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_setObjectID_ofSortedObject00
static int tolua_CocoStudio_CCArrayForObjectSorting_setObjectID_ofSortedObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  unsigned int tag = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  CCSortableObject* object = ((CCSortableObject*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjectID_ofSortedObject'", NULL);
#endif
  {
   self->setObjectID_ofSortedObject(tag,object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectID_ofSortedObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_new00
static int tolua_CocoStudio_CCArrayForObjectSorting_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArrayForObjectSorting* tolua_ret = (CCArrayForObjectSorting*)  Mtolua_new((CCArrayForObjectSorting)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArrayForObjectSorting");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_new00_local
static int tolua_CocoStudio_CCArrayForObjectSorting_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArrayForObjectSorting* tolua_ret = (CCArrayForObjectSorting*)  Mtolua_new((CCArrayForObjectSorting)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArrayForObjectSorting");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: indexOfSortedObject of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_indexOfSortedObject00
static int tolua_CocoStudio_CCArrayForObjectSorting_indexOfSortedObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  CCSortableObject* obj = ((CCSortableObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'indexOfSortedObject'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->indexOfSortedObject(obj);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'indexOfSortedObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectWithObjectID of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_getObjectWithObjectID00
static int tolua_CocoStudio_CCArrayForObjectSorting_getObjectWithObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  unsigned int tag = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectWithObjectID'", NULL);
#endif
  {
   CCSortableObject* tolua_ret = (CCSortableObject*)  self->getObjectWithObjectID(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSortableObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectWithObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertSortedObject of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_insertSortedObject00
static int tolua_CocoStudio_CCArrayForObjectSorting_insertSortedObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  CCSortableObject* object = ((CCSortableObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertSortedObject'", NULL);
#endif
  {
   self->insertSortedObject(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertSortedObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectWithObjectID of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_objectWithObjectID00
static int tolua_CocoStudio_CCArrayForObjectSorting_objectWithObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  unsigned int tag = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectWithObjectID'", NULL);
#endif
  {
   CCSortableObject* tolua_ret = (CCSortableObject*)  self->objectWithObjectID(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSortableObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectWithObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSortedObject of class  CCArrayForObjectSorting */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArrayForObjectSorting_removeSortedObject00
static int tolua_CocoStudio_CCArrayForObjectSorting_removeSortedObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArrayForObjectSorting",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArrayForObjectSorting* self = (CCArrayForObjectSorting*)  tolua_tousertype(tolua_S,1,0);
  CCSortableObject* object = ((CCSortableObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSortedObject'", NULL);
#endif
  {
   self->removeSortedObject(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSortedObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseCubicActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionOut_create00
static int tolua_CocoStudio_CCEaseCubicActionOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCubicActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCubicActionOut* tolua_ret = (CCEaseCubicActionOut*)  CCEaseCubicActionOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCubicActionOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCubicActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionOut_copyWithZone00
static int tolua_CocoStudio_CCEaseCubicActionOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionOut* self = (CCEaseCubicActionOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCubicActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionOut_update00
static int tolua_CocoStudio_CCEaseCubicActionOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionOut* self = (CCEaseCubicActionOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCubicActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCubicActionOut_reverse00
static int tolua_CocoStudio_CCEaseCubicActionOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCubicActionOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCubicActionOut* self = (CCEaseCubicActionOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_create00
static int tolua_CocoStudio_CCComAudio_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComAudio* tolua_ret = (CCComAudio*)  CCComAudio::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComAudio");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_createInstance00
static int tolua_CocoStudio_CCComAudio_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  CCComAudio::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopAllEffects of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_stopAllEffects00
static int tolua_CocoStudio_CCComAudio_stopAllEffects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopAllEffects'", NULL);
#endif
  {
   self->stopAllEffects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopAllEffects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_onEnter00
static int tolua_CocoStudio_CCComAudio_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_serialize00
static int tolua_CocoStudio_CCComAudio_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  void* r = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->serialize(r);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEffectsVolume of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_getEffectsVolume00
static int tolua_CocoStudio_CCComAudio_getEffectsVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEffectsVolume'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEffectsVolume();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEffectsVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_stopEffect00
static int tolua_CocoStudio_CCComAudio_stopEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  unsigned int nSoundId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopEffect'", NULL);
#endif
  {
   self->stopEffect(nSoundId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackgroundMusicVolume of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_getBackgroundMusicVolume00
static int tolua_CocoStudio_CCComAudio_getBackgroundMusicVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackgroundMusicVolume'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBackgroundMusicVolume();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackgroundMusicVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: willPlayBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_willPlayBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_willPlayBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'willPlayBackgroundMusic'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->willPlayBackgroundMusic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'willPlayBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_pauseBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_pauseBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseBackgroundMusic'", NULL);
#endif
  {
   self->pauseBackgroundMusic();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundMusicVolume of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_setBackgroundMusicVolume00
static int tolua_CocoStudio_CCComAudio_setBackgroundMusicVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  float volume = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundMusicVolume'", NULL);
#endif
  {
   self->setBackgroundMusicVolume(volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundMusicVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_end00
static int tolua_CocoStudio_CCComAudio_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end'", NULL);
#endif
  {
   self->end();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_isEnabled00
static int tolua_CocoStudio_CCComAudio_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_stopBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_stopBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopBackgroundMusic'", NULL);
#endif
  {
   self->stopBackgroundMusic();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_stopBackgroundMusic01
static int tolua_CocoStudio_CCComAudio_stopBackgroundMusic01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  bool bReleaseData = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopBackgroundMusic'", NULL);
#endif
  {
   self->stopBackgroundMusic(bReleaseData);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCComAudio_stopBackgroundMusic00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_delete00
static int tolua_CocoStudio_CCComAudio_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBackgroundMusicPlaying of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_isBackgroundMusicPlaying00
static int tolua_CocoStudio_CCComAudio_isBackgroundMusicPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBackgroundMusicPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBackgroundMusicPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBackgroundMusicPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_init00
static int tolua_CocoStudio_CCComAudio_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isLoop of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_isLoop00
static int tolua_CocoStudio_CCComAudio_isLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isLoop'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isLoop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseAllEffects of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_pauseAllEffects00
static int tolua_CocoStudio_CCComAudio_pauseAllEffects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseAllEffects'", NULL);
#endif
  {
   self->pauseAllEffects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseAllEffects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_setEnabled00
static int tolua_CocoStudio_CCComAudio_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: preloadBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_preloadBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_preloadBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'preloadBackgroundMusic'", NULL);
#endif
  {
   self->preloadBackgroundMusic(pszFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'preloadBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_playBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playBackgroundMusic'", NULL);
#endif
  {
   self->playBackgroundMusic(pszFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playBackgroundMusic01
static int tolua_CocoStudio_CCComAudio_playBackgroundMusic01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool bLoop = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playBackgroundMusic'", NULL);
#endif
  {
   self->playBackgroundMusic(pszFilePath,bLoop);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCComAudio_playBackgroundMusic00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: playBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playBackgroundMusic02
static int tolua_CocoStudio_CCComAudio_playBackgroundMusic02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playBackgroundMusic'", NULL);
#endif
  {
   self->playBackgroundMusic();
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCComAudio_playBackgroundMusic01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: playEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playEffect00
static int tolua_CocoStudio_CCComAudio_playEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playEffect'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->playEffect(pszFilePath);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playEffect01
static int tolua_CocoStudio_CCComAudio_playEffect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool bLoop = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playEffect'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->playEffect(pszFilePath,bLoop);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCComAudio_playEffect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: playEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_playEffect02
static int tolua_CocoStudio_CCComAudio_playEffect02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playEffect'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->playEffect();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCComAudio_playEffect01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeAllEffects of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_resumeAllEffects00
static int tolua_CocoStudio_CCComAudio_resumeAllEffects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeAllEffects'", NULL);
#endif
  {
   self->resumeAllEffects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeAllEffects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLoop of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_setLoop00
static int tolua_CocoStudio_CCComAudio_setLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  bool bLoop = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLoop'", NULL);
#endif
  {
   self->setLoop(bLoop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unloadEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_unloadEffect00
static int tolua_CocoStudio_CCComAudio_unloadEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unloadEffect'", NULL);
#endif
  {
   self->unloadEffect(pszFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unloadEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rewindBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_rewindBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_rewindBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rewindBackgroundMusic'", NULL);
#endif
  {
   self->rewindBackgroundMusic();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rewindBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_onExit00
static int tolua_CocoStudio_CCComAudio_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: preloadEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_preloadEffect00
static int tolua_CocoStudio_CCComAudio_preloadEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'preloadEffect'", NULL);
#endif
  {
   self->preloadEffect(pszFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'preloadEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_pauseEffect00
static int tolua_CocoStudio_CCComAudio_pauseEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  unsigned int nSoundId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseEffect'", NULL);
#endif
  {
   self->pauseEffect(nSoundId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeBackgroundMusic of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_resumeBackgroundMusic00
static int tolua_CocoStudio_CCComAudio_resumeBackgroundMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeBackgroundMusic'", NULL);
#endif
  {
   self->resumeBackgroundMusic();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeBackgroundMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFile of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_setFile00
static int tolua_CocoStudio_CCComAudio_setFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilePath = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFile'", NULL);
#endif
  {
   self->setFile(pszFilePath);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEffectsVolume of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_setEffectsVolume00
static int tolua_CocoStudio_CCComAudio_setEffectsVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  float volume = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEffectsVolume'", NULL);
#endif
  {
   self->setEffectsVolume(volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEffectsVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFile of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_getFile00
static int tolua_CocoStudio_CCComAudio_getFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFile'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getFile();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeEffect of class  CCComAudio */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAudio_resumeEffect00
static int tolua_CocoStudio_CCComAudio_resumeEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAudio",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAudio* self = (CCComAudio*)  tolua_tousertype(tolua_S,1,0);
  unsigned int nSoundId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeEffect'", NULL);
#endif
  {
   self->resumeEffect(nSoundId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_create00
static int tolua_CocoStudio_CCColliderDetector_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  {
   CCColliderDetector* tolua_ret = (CCColliderDetector*)  CCColliderDetector::create(bone);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColliderDetector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_create01
static int tolua_CocoStudio_CCColliderDetector_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCColliderDetector* tolua_ret = (CCColliderDetector*)  CCColliderDetector::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColliderDetector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCColliderDetector_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBone of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_getBone00
static int tolua_CocoStudio_CCColliderDetector_getBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBone'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getBone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addContourData of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_addContourData00
static int tolua_CocoStudio_CCColliderDetector_addContourData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCContourData* contourData = ((CCContourData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addContourData'", NULL);
#endif
  {
   self->addContourData(contourData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addContourData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addContourDataList of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_addContourDataList00
static int tolua_CocoStudio_CCColliderDetector_addContourDataList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCArray* contourDataList = ((CCArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addContourDataList'", NULL);
#endif
  {
   self->addContourDataList(contourDataList);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addContourDataList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActive of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_getActive00
static int tolua_CocoStudio_CCColliderDetector_getActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActive of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_setActive00
static int tolua_CocoStudio_CCColliderDetector_setActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  bool active = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActive'", NULL);
#endif
  {
   self->setActive(active);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateTransform of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_updateTransform00
static int tolua_CocoStudio_CCColliderDetector_updateTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCAffineTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCAffineTransform* t = ((CCAffineTransform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateTransform'", NULL);
#endif
  {
   self->updateTransform(*t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_delete00
static int tolua_CocoStudio_CCColliderDetector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_removeAll00
static int tolua_CocoStudio_CCColliderDetector_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_init00
static int tolua_CocoStudio_CCColliderDetector_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(bone);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_init01
static int tolua_CocoStudio_CCColliderDetector_init01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCColliderDetector_init00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeContourData of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_removeContourData00
static int tolua_CocoStudio_CCColliderDetector_removeContourData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCContourData* contourData = ((CCContourData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeContourData'", NULL);
#endif
  {
   self->removeContourData(contourData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeContourData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_new00
static int tolua_CocoStudio_CCColliderDetector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCColliderDetector* tolua_ret = (CCColliderDetector*)  Mtolua_new((CCColliderDetector)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColliderDetector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_new00_local
static int tolua_CocoStudio_CCColliderDetector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCColliderDetector* tolua_ret = (CCColliderDetector*)  Mtolua_new((CCColliderDetector)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCColliderDetector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBone of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_setBone00
static int tolua_CocoStudio_CCColliderDetector_setBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
  CCBone* var = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBone'", NULL);
#endif
  {
   self->setBone(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColliderBodyList of class  CCColliderDetector */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCColliderDetector_getColliderBodyList00
static int tolua_CocoStudio_CCColliderDetector_getColliderBodyList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCColliderDetector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCColliderDetector* self = (CCColliderDetector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColliderBodyList'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getColliderBodyList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColliderBodyList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIScrollInterface */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UIScrollInterface_delete00
static int tolua_CocoStudio_UIScrollInterface_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIScrollInterface",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIScrollInterface* self = (UIScrollInterface*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_create00
static int tolua_CocoStudio_UICCLabelAtlas_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICCLabelAtlas* tolua_ret = (UICCLabelAtlas*)  UICCLabelAtlas::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCLabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperty of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_setProperty00
static int tolua_CocoStudio_UICCLabelAtlas_setProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCLabelAtlas* self = (UICCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const string s = ((const string)  tolua_tocppstring(tolua_S,2,0));
  CCTexture2D* texture = ((CCTexture2D*)  tolua_tousertype(tolua_S,3,0));
  unsigned int itemWidth = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int itemHeight = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  unsigned int startCharMap = ((unsigned int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperty'", NULL);
#endif
  {
   self->setProperty(s,texture,itemWidth,itemHeight,startCharMap);
   tolua_pushcppstring(tolua_S,(const char*)s);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperty of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_setProperty01
static int tolua_CocoStudio_UICCLabelAtlas_setProperty01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UICCLabelAtlas* self = (UICCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const string s = ((const string)  tolua_tocppstring(tolua_S,2,0));
  const string charMapFile = ((const string)  tolua_tocppstring(tolua_S,3,0));
  unsigned int itemWidth = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int itemHeight = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  unsigned int startCharMap = ((unsigned int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperty'", NULL);
#endif
  {
   self->setProperty(s,charMapFile,itemWidth,itemHeight,startCharMap);
   tolua_pushcppstring(tolua_S,(const char*)s);
   tolua_pushcppstring(tolua_S,(const char*)charMapFile);
  }
 }
 return 2;
tolua_lerror:
 return tolua_CocoStudio_UICCLabelAtlas_setProperty00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplayedOpacity of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_updateDisplayedOpacity00
static int tolua_CocoStudio_UICCLabelAtlas_updateDisplayedOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCLabelAtlas* self = (UICCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDisplayedOpacity'", NULL);
#endif
  {
   self->updateDisplayedOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplayedOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_draw00
static int tolua_CocoStudio_UICCLabelAtlas_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCLabelAtlas* self = (UICCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_delete00
static int tolua_CocoStudio_UICCLabelAtlas_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCLabelAtlas* self = (UICCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_new00
static int tolua_CocoStudio_UICCLabelAtlas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICCLabelAtlas* tolua_ret = (UICCLabelAtlas*)  Mtolua_new((UICCLabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCLabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UICCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCLabelAtlas_new00_local
static int tolua_CocoStudio_UICCLabelAtlas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICCLabelAtlas* tolua_ret = (UICCLabelAtlas*)  Mtolua_new((UICCLabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCLabelAtlas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_get_CCAnimationData_name
static int tolua_get_CCAnimationData_name(lua_State* tolua_S)
{
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_set_CCAnimationData_name
static int tolua_set_CCAnimationData_name(lua_State* tolua_S)
{
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: movementDataDic of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_get_CCAnimationData_movementDataDic
static int tolua_get_CCAnimationData_movementDataDic(lua_State* tolua_S)
{
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'movementDataDic'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->movementDataDic,"CCDictionary");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: movementDataDic of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_set_CCAnimationData_movementDataDic
static int tolua_set_CCAnimationData_movementDataDic(lua_State* tolua_S)
{
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'movementDataDic'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->movementDataDic = *((CCDictionary*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_create00
static int tolua_CocoStudio_CCAnimationData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCAnimationData* tolua_ret = (CCAnimationData*)  CCAnimationData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCAnimationData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovement of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_getMovement00
static int tolua_CocoStudio_CCAnimationData_getMovement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
  const char* movementName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovement'", NULL);
#endif
  {
   CCMovementData* tolua_ret = (CCMovementData*)  self->getMovement(movementName);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementCount of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_getMovementCount00
static int tolua_CocoStudio_CCAnimationData_getMovementCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementCount'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMovementCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_delete00
static int tolua_CocoStudio_CCAnimationData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMovement of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_addMovement00
static int tolua_CocoStudio_CCAnimationData_addMovement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMovementData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCAnimationData* self = (CCAnimationData*)  tolua_tousertype(tolua_S,1,0);
  CCMovementData* movData = ((CCMovementData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMovement'", NULL);
#endif
  {
   self->addMovement(movData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMovement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_new00
static int tolua_CocoStudio_CCAnimationData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCAnimationData* tolua_ret = (CCAnimationData*)  Mtolua_new((CCAnimationData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCAnimationData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCAnimationData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCAnimationData_new00_local
static int tolua_CocoStudio_CCAnimationData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCAnimationData* tolua_ret = (CCAnimationData*)  Mtolua_new((CCAnimationData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCAnimationData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_create00
static int tolua_CocoStudio_CCControlColourPicker_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlColourPicker* tolua_ret = (CCControlColourPicker*)  CCControlColourPicker::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlColourPicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_setEnabled00
static int tolua_CocoStudio_CCControlColourPicker_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  bool bEnabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(bEnabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHuePicker of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_getHuePicker00
static int tolua_CocoStudio_CCControlColourPicker_getHuePicker00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHuePicker'", NULL);
#endif
  {
   CCControlHuePicker* tolua_ret = (CCControlHuePicker*)  self->getHuePicker();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlHuePicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHuePicker'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_setColor00
static int tolua_CocoStudio_CCControlColourPicker_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* colorValue = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*colorValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hueSliderValueChanged of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_hueSliderValueChanged00
static int tolua_CocoStudio_CCControlColourPicker_hueSliderValueChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
  unsigned int controlEvent = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hueSliderValueChanged'", NULL);
#endif
  {
   self->hueSliderValueChanged(sender,controlEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hueSliderValueChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getcolourPicker of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_getcolourPicker00
static int tolua_CocoStudio_CCControlColourPicker_getcolourPicker00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getcolourPicker'", NULL);
#endif
  {
   CCControlSaturationBrightnessPicker* tolua_ret = (CCControlSaturationBrightnessPicker*)  self->getcolourPicker();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSaturationBrightnessPicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getcolourPicker'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_delete00
static int tolua_CocoStudio_CCControlColourPicker_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackground of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_setBackground00
static int tolua_CocoStudio_CCControlColourPicker_setBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackground'", NULL);
#endif
  {
   self->setBackground(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_init00
static int tolua_CocoStudio_CCControlColourPicker_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setcolourPicker of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_setcolourPicker00
static int tolua_CocoStudio_CCControlColourPicker_setcolourPicker00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCControlSaturationBrightnessPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  CCControlSaturationBrightnessPicker* var = ((CCControlSaturationBrightnessPicker*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setcolourPicker'", NULL);
#endif
  {
   self->setcolourPicker(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setcolourPicker'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: colourSliderValueChanged of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_colourSliderValueChanged00
static int tolua_CocoStudio_CCControlColourPicker_colourSliderValueChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
  unsigned int controlEvent = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'colourSliderValueChanged'", NULL);
#endif
  {
   self->colourSliderValueChanged(sender,controlEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'colourSliderValueChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_new00
static int tolua_CocoStudio_CCControlColourPicker_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlColourPicker* tolua_ret = (CCControlColourPicker*)  Mtolua_new((CCControlColourPicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlColourPicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_new00_local
static int tolua_CocoStudio_CCControlColourPicker_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlColourPicker* tolua_ret = (CCControlColourPicker*)  Mtolua_new((CCControlColourPicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlColourPicker");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHuePicker of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_setHuePicker00
static int tolua_CocoStudio_CCControlColourPicker_setHuePicker00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
  CCControlHuePicker* var = ((CCControlHuePicker*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHuePicker'", NULL);
#endif
  {
   self->setHuePicker(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHuePicker'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackground of class  CCControlColourPicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlColourPicker_getBackground00
static int tolua_CocoStudio_CCControlColourPicker_getBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlColourPicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlColourPicker* self = (CCControlColourPicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackground'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getBackground();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_create00
static int tolua_CocoStudio_TextureFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextureFrame* tolua_ret = (TextureFrame*)  TextureFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TextureFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureName of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_getTextureName00
static int tolua_CocoStudio_TextureFrame_getTextureName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextureFrame* self = (TextureFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureName'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getTextureName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNode of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_setNode00
static int tolua_CocoStudio_TextureFrame_setNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextureFrame* self = (TextureFrame*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNode'", NULL);
#endif
  {
   self->setNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_onEnter00
static int tolua_CocoStudio_TextureFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextureFrame* self = (TextureFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_clone00
static int tolua_CocoStudio_TextureFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextureFrame* self = (TextureFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureName of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_setTextureName00
static int tolua_CocoStudio_TextureFrame_setTextureName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TextureFrame* self = (TextureFrame*)  tolua_tousertype(tolua_S,1,0);
  string textureName = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureName'", NULL);
#endif
  {
   self->setTextureName(textureName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_new00
static int tolua_CocoStudio_TextureFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextureFrame* tolua_ret = (TextureFrame*)  Mtolua_new((TextureFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TextureFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TextureFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TextureFrame_new00_local
static int tolua_CocoStudio_TextureFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TextureFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TextureFrame* tolua_ret = (TextureFrame*)  Mtolua_new((TextureFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TextureFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_create00
static int tolua_CocoStudio_UICCTextField_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* placeholder = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   UICCTextField* tolua_ret = (UICCTextField*)  UICCTextField::create(placeholder,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCTextField");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldAttachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_onTextFieldAttachWithIME00
static int tolua_CocoStudio_UICCTextField_onTextFieldAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  CCTextFieldTTF* pSender = ((CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldAttachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldAttachWithIME(pSender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPasswordText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setPasswordText00
static int tolua_CocoStudio_UICCTextField_setPasswordText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPasswordText'", NULL);
#endif
  {
   self->setPasswordText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPasswordText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setAttachWithIME00
static int tolua_CocoStudio_UICCTextField_setAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool attach = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttachWithIME'", NULL);
#endif
  {
   self->setAttachWithIME(attach);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_onEnter00
static int tolua_CocoStudio_UICCTextField_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDeleteBackward of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getDeleteBackward00
static int tolua_CocoStudio_UICCTextField_getDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDeleteBackward'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getDeleteBackward();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getAttachWithIME00
static int tolua_CocoStudio_UICCTextField_getAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAttachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldDeleteBackward of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_onTextFieldDeleteBackward00
static int tolua_CocoStudio_UICCTextField_onTextFieldDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  CCTextFieldTTF* pSender = ((CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
  const char* delText = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldDeleteBackward'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldDeleteBackward(pSender,delText,nLen);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsertText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getInsertText00
static int tolua_CocoStudio_UICCTextField_getInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsertText'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getInsertText();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteBackward of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_deleteBackward00
static int tolua_CocoStudio_UICCTextField_deleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteBackward'", NULL);
#endif
  {
   self->deleteBackward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsertText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setInsertText00
static int tolua_CocoStudio_UICCTextField_setInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool insert = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsertText'", NULL);
#endif
  {
   self->setInsertText(insert);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDetachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getDetachWithIME00
static int tolua_CocoStudio_UICCTextField_getDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDetachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getDetachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_delete00
static int tolua_CocoStudio_UICCTextField_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCharCount of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getCharCount00
static int tolua_CocoStudio_UICCTextField_getCharCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCharCount'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCharCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCharCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_closeIME00
static int tolua_CocoStudio_UICCTextField_closeIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeIME'", NULL);
#endif
  {
   self->closeIME();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPasswordEnabled of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setPasswordEnabled00
static int tolua_CocoStudio_UICCTextField_setPasswordEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPasswordEnabled'", NULL);
#endif
  {
   self->setPasswordEnabled(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPasswordEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxLengthEnabled of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setMaxLengthEnabled00
static int tolua_CocoStudio_UICCTextField_setMaxLengthEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxLengthEnabled'", NULL);
#endif
  {
   self->setMaxLengthEnabled(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxLengthEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPasswordStyleText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setPasswordStyleText00
static int tolua_CocoStudio_UICCTextField_setPasswordStyleText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  const char* styleText = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPasswordStyleText'", NULL);
#endif
  {
   self->setPasswordStyleText(styleText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPasswordStyleText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_insertText00
static int tolua_CocoStudio_UICCTextField_insertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
  int len = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertText'", NULL);
#endif
  {
   self->insertText(text,len);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPasswordEnabled of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_isPasswordEnabled00
static int tolua_CocoStudio_UICCTextField_isPasswordEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPasswordEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPasswordEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPasswordEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldInsertText of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_onTextFieldInsertText00
static int tolua_CocoStudio_UICCTextField_onTextFieldInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  CCTextFieldTTF* pSender = ((CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldInsertText'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldInsertText(pSender,text,nLen);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldDetachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_onTextFieldDetachWithIME00
static int tolua_CocoStudio_UICCTextField_onTextFieldDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  CCTextFieldTTF* pSender = ((CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldDetachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldDetachWithIME(pSender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxLength of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_getMaxLength00
static int tolua_CocoStudio_UICCTextField_getMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMaxLengthEnabled of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_isMaxLengthEnabled00
static int tolua_CocoStudio_UICCTextField_isMaxLengthEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMaxLengthEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMaxLengthEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMaxLengthEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: openIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_openIME00
static int tolua_CocoStudio_UICCTextField_openIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'openIME'", NULL);
#endif
  {
   self->openIME();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDetachWithIME of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setDetachWithIME00
static int tolua_CocoStudio_UICCTextField_setDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool detach = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDetachWithIME'", NULL);
#endif
  {
   self->setDetachWithIME(detach);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxLength of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setMaxLength00
static int tolua_CocoStudio_UICCTextField_setMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  int length = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxLength'", NULL);
#endif
  {
   self->setMaxLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_new00
static int tolua_CocoStudio_UICCTextField_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICCTextField* tolua_ret = (UICCTextField*)  Mtolua_new((UICCTextField)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCTextField");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_new00_local
static int tolua_CocoStudio_UICCTextField_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICCTextField* tolua_ret = (UICCTextField*)  Mtolua_new((UICCTextField)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICCTextField");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDeleteBackward of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_UICCTextField_setDeleteBackward00
static int tolua_CocoStudio_UICCTextField_setDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICCTextField",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
  bool deleteBackward = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDeleteBackward'", NULL);
#endif
  {
   self->setDeleteBackward(deleteBackward);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextFieldDelegate__ of class  UICCTextField */
#ifndef TOLUA_DISABLE_tolua_get_UICCTextField___CCTextFieldDelegate__
static int tolua_get_UICCTextField___CCTextFieldDelegate__(lua_State* tolua_S)
{
  UICCTextField* self = (UICCTextField*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextFieldDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTextFieldDelegate*>(self), "CCTextFieldDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTextFieldDelegate*)self), "CCTextFieldDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMemoryAddr_AttribDesc of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetMemoryAddr_AttribDesc00
static int tolua_CocoStudio_CocoLoader_GetMemoryAddr_AttribDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMemoryAddr_AttribDesc'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetMemoryAddr_AttribDesc();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMemoryAddr_AttribDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCocoObjectDescArray of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetCocoObjectDescArray00
static int tolua_CocoStudio_CocoLoader_GetCocoObjectDescArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCocoObjectDescArray'", NULL);
#endif
  {
   stExpCocoObjectDesc* tolua_ret = (stExpCocoObjectDesc*)  self->GetCocoObjectDescArray();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoObjectDesc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCocoObjectDescArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRootCocoNode of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetRootCocoNode00
static int tolua_CocoStudio_CocoLoader_GetRootCocoNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRootCocoNode'", NULL);
#endif
  {
   stExpCocoNode* tolua_ret = (stExpCocoNode*)  self->GetRootCocoNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRootCocoNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMemoryAddr_String of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetMemoryAddr_String00
static int tolua_CocoStudio_CocoLoader_GetMemoryAddr_String00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMemoryAddr_String'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetMemoryAddr_String();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMemoryAddr_String'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMemoryAddr_CocoNode of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetMemoryAddr_CocoNode00
static int tolua_CocoStudio_CocoLoader_GetMemoryAddr_CocoNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMemoryAddr_CocoNode'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetMemoryAddr_CocoNode();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMemoryAddr_CocoNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_delete00
static int tolua_CocoStudio_CocoLoader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCocoObjectDesc of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetCocoObjectDesc00
static int tolua_CocoStudio_CocoLoader_GetCocoObjectDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
  int vIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCocoObjectDesc'", NULL);
#endif
  {
   stExpCocoObjectDesc* tolua_ret = (stExpCocoObjectDesc*)  self->GetCocoObjectDesc(vIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoObjectDesc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCocoObjectDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCocoObjectDesc of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetCocoObjectDesc01
static int tolua_CocoStudio_CocoLoader_GetCocoObjectDesc01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
  const char* szObjDesc = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCocoObjectDesc'", NULL);
#endif
  {
   stExpCocoObjectDesc* tolua_ret = (stExpCocoObjectDesc*)  self->GetCocoObjectDesc(szObjDesc);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoObjectDesc");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CocoLoader_GetCocoObjectDesc00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_new00
static int tolua_CocoStudio_CocoLoader_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CocoLoader* tolua_ret = (CocoLoader*)  Mtolua_new((CocoLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CocoLoader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_new00_local
static int tolua_CocoStudio_CocoLoader_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CocoLoader* tolua_ret = (CocoLoader*)  Mtolua_new((CocoLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CocoLoader");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReadCocoBinBuff of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_ReadCocoBinBuff00
static int tolua_CocoStudio_CocoLoader_ReadCocoBinBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
  char* pBinBuff = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReadCocoBinBuff'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ReadCocoBinBuff(pBinBuff);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReadCocoBinBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFileHeader of class  CocoLoader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CocoLoader_GetFileHeader00
static int tolua_CocoStudio_CocoLoader_GetFileHeader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CocoLoader* self = (CocoLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFileHeader'", NULL);
#endif
  {
   stCocoFileHeader* tolua_ret = (stCocoFileHeader*)  self->GetFileHeader();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stCocoFileHeader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFileHeader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_create00
static int tolua_CocoStudio_CCScrollView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCScrollView* tolua_ret = (CCScrollView*)  CCScrollView::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScrollView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_create01
static int tolua_CocoStudio_CCScrollView_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
  CCNode* container = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
  {
   CCScrollView* tolua_ret = (CCScrollView*)  CCScrollView::create(size,container);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScrollView");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScrollView_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isClippingToBounds of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_isClippingToBounds00
static int tolua_CocoStudio_CCScrollView_isClippingToBounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isClippingToBounds'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isClippingToBounds();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isClippingToBounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContainer of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setContainer00
static int tolua_CocoStudio_CCScrollView_setContainer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* pContainer = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContainer'", NULL);
#endif
  {
   self->setContainer(pContainer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContainer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentOffsetInDuration of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setContentOffsetInDuration00
static int tolua_CocoStudio_CCScrollView_setContentOffsetInDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCPoint offset = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float dt = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentOffsetInDuration'", NULL);
#endif
  {
   self->setContentOffsetInDuration(offset,dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentOffsetInDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZoomScaleInDuration of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setZoomScaleInDuration00
static int tolua_CocoStudio_CCScrollView_setZoomScaleInDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  float s = ((float)  tolua_tonumber(tolua_S,2,0));
  float dt = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZoomScaleInDuration'", NULL);
#endif
  {
   self->setZoomScaleInDuration(s,dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZoomScaleInDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_addChild00
static int tolua_CocoStudio_CCScrollView_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_addChild01
static int tolua_CocoStudio_CCScrollView_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCScrollView_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_addChild02
static int tolua_CocoStudio_CCScrollView_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCScrollView_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_ccTouchBegan00
static int tolua_CocoStudio_CCScrollView_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContainer of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getContainer00
static int tolua_CocoStudio_CCScrollView_getContainer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContainer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getContainer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContainer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_ccTouchEnded00
static int tolua_CocoStudio_CCScrollView_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDirection of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getDirection00
static int tolua_CocoStudio_CCScrollView_getDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDirection'", NULL);
#endif
  {
   CCScrollViewDirection tolua_ret = (CCScrollViewDirection)  self->getDirection();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinScale of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setMinScale00
static int tolua_CocoStudio_CCScrollView_setMinScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  float s = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinScale'", NULL);
#endif
  {
   self->setMinScale(s);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZoomScale of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getZoomScale00
static int tolua_CocoStudio_CCScrollView_getZoomScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZoomScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getZoomScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZoomScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScriptHandler of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getScriptHandler00
static int tolua_CocoStudio_CCScrollView_getScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  int nScriptEventType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScriptHandler'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getScriptHandler(nScriptEventType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateInset of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_updateInset00
static int tolua_CocoStudio_CCScrollView_updateInset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateInset'", NULL);
#endif
  {
   self->updateInset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateInset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithViewSize of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_initWithViewSize00
static int tolua_CocoStudio_CCScrollView_initWithViewSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
  CCNode* container = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithViewSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithViewSize(size,container);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithViewSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_pause00
static int tolua_CocoStudio_CCScrollView_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause(sender);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirection of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setDirection00
static int tolua_CocoStudio_CCScrollView_setDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCScrollViewDirection eDirection = ((CCScrollViewDirection) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirection'", NULL);
#endif
  {
   self->setDirection(eDirection);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerScriptHandler of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_registerScriptHandler00
static int tolua_CocoStudio_CCScrollView_registerScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  int nFunID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nScriptEventType = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerScriptHandler'", NULL);
#endif
  {
   self->registerScriptHandler(nFunID,nScriptEventType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_visit00
static int tolua_CocoStudio_CCScrollView_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBounceable of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setBounceable00
static int tolua_CocoStudio_CCScrollView_setBounceable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool bBounceable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBounceable'", NULL);
#endif
  {
   self->setBounceable(bBounceable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBounceable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentOffset of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setContentOffset00
static int tolua_CocoStudio_CCScrollView_setContentOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCPoint offset = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
  bool animated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentOffset'", NULL);
#endif
  {
   self->setContentOffset(offset,animated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_delete00
static int tolua_CocoStudio_CCScrollView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDragging of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_isDragging00
static int tolua_CocoStudio_CCScrollView_isDragging00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDragging'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDragging();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDragging'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_init00
static int tolua_CocoStudio_CCScrollView_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBounceable of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_isBounceable00
static int tolua_CocoStudio_CCScrollView_isBounceable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBounceable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBounceable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBounceable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getContentSize00
static int tolua_CocoStudio_CCScrollView_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_ccTouchMoved00
static int tolua_CocoStudio_CCScrollView_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchEnabled of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setTouchEnabled00
static int tolua_CocoStudio_CCScrollView_setTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool e = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchEnabled'", NULL);
#endif
  {
   self->setTouchEnabled(e);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentOffset of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getContentOffset00
static int tolua_CocoStudio_CCScrollView_getContentOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentOffset'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getContentOffset();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_resume00
static int tolua_CocoStudio_CCScrollView_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume(sender);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClippingToBounds of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setClippingToBounds00
static int tolua_CocoStudio_CCScrollView_setClippingToBounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  bool bClippingToBounds = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClippingToBounds'", NULL);
#endif
  {
   self->setClippingToBounds(bClippingToBounds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClippingToBounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setViewSize of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setViewSize00
static int tolua_CocoStudio_CCScrollView_setViewSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCSize size = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setViewSize'", NULL);
#endif
  {
   self->setViewSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setViewSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getViewSize of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getViewSize00
static int tolua_CocoStudio_CCScrollView_getViewSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getViewSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getViewSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getViewSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: maxContainerOffset of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_maxContainerOffset00
static int tolua_CocoStudio_CCScrollView_maxContainerOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maxContainerOffset'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->maxContainerOffset();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maxContainerOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelegate of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setDelegate00
static int tolua_CocoStudio_CCScrollView_setDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScrollViewDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCScrollViewDelegate* pDelegate = ((CCScrollViewDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelegate'", NULL);
#endif
  {
   self->setDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSize of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setContentSize00
static int tolua_CocoStudio_CCScrollView_setContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSize'", NULL);
#endif
  {
   self->setContentSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxScale of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setMaxScale00
static int tolua_CocoStudio_CCScrollView_setMaxScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  float s = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxScale'", NULL);
#endif
  {
   self->setMaxScale(s);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchMoved of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_isTouchMoved00
static int tolua_CocoStudio_CCScrollView_isTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchMoved'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchMoved();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelegate of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getDelegate00
static int tolua_CocoStudio_CCScrollView_getDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelegate'", NULL);
#endif
  {
   CCScrollViewDelegate* tolua_ret = (CCScrollViewDelegate*)  self->getDelegate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScrollViewDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unregisterScriptHandler of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_unregisterScriptHandler00
static int tolua_CocoStudio_CCScrollView_unregisterScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  int nScriptEventType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unregisterScriptHandler'", NULL);
#endif
  {
   self->unregisterScriptHandler(nScriptEventType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregisterScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNodeVisible of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_isNodeVisible00
static int tolua_CocoStudio_CCScrollView_isNodeVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNodeVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNodeVisible(node);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNodeVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_ccTouchCancelled00
static int tolua_CocoStudio_CCScrollView_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: minContainerOffset of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_minContainerOffset00
static int tolua_CocoStudio_CCScrollView_minContainerOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'minContainerOffset'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->minContainerOffset();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'minContainerOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchPoint of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_getTouchPoint00
static int tolua_CocoStudio_CCScrollView_getTouchPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchPoint'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getTouchPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_new00
static int tolua_CocoStudio_CCScrollView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCScrollView* tolua_ret = (CCScrollView*)  Mtolua_new((CCScrollView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScrollView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_new00_local
static int tolua_CocoStudio_CCScrollView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCScrollView* tolua_ret = (CCScrollView*)  Mtolua_new((CCScrollView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScrollView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerWithTouchDispatcher of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_registerWithTouchDispatcher00
static int tolua_CocoStudio_CCScrollView_registerWithTouchDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerWithTouchDispatcher'", NULL);
#endif
  {
   self->registerWithTouchDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerWithTouchDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZoomScale of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setZoomScale00
static int tolua_CocoStudio_CCScrollView_setZoomScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  float s = ((float)  tolua_tonumber(tolua_S,2,0));
  bool animated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZoomScale'", NULL);
#endif
  {
   self->setZoomScale(s,animated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZoomScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZoomScale of class  CCScrollView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScrollView_setZoomScale01
static int tolua_CocoStudio_CCScrollView_setZoomScale01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScrollView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScrollView* self = (CCScrollView*)  tolua_tousertype(tolua_S,1,0);
  float s = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZoomScale'", NULL);
#endif
  {
   self->setZoomScale(s);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCScrollView_setZoomScale00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_rotation of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_get_ActionRotationFrame_m_rotation
static int tolua_get_ActionRotationFrame_m_rotation(lua_State* tolua_S)
{
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_rotation'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_rotation);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_rotation of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_set_ActionRotationFrame_m_rotation
static int tolua_set_ActionRotationFrame_m_rotation(lua_State* tolua_S)
{
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_rotation'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_rotation = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_setRotation00
static int tolua_CocoStudio_ActionRotationFrame_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
  float rotation = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'", NULL);
#endif
  {
   self->setRotation(rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_delete00
static int tolua_CocoStudio_ActionRotationFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_getAction00
static int tolua_CocoStudio_ActionRotationFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
  ActionFrame* srcFrame = ((ActionFrame*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration,srcFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_getAction01
static int tolua_CocoStudio_ActionRotationFrame_getAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_ActionRotationFrame_getAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_getRotation00
static int tolua_CocoStudio_ActionRotationFrame_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionRotationFrame* self = (ActionRotationFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRotation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_new00
static int tolua_CocoStudio_ActionRotationFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionRotationFrame* tolua_ret = (ActionRotationFrame*)  Mtolua_new((ActionRotationFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionRotationFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionRotationFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionRotationFrame_new00_local
static int tolua_CocoStudio_ActionRotationFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionRotationFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionRotationFrame* tolua_ret = (ActionRotationFrame*)  Mtolua_new((ActionRotationFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionRotationFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContourData of class  ColliderBody */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColliderBody_getContourData00
static int tolua_CocoStudio_ColliderBody_getContourData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColliderBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColliderBody* self = (ColliderBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContourData'", NULL);
#endif
  {
   CCContourData* tolua_ret = (CCContourData*)  self->getContourData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCContourData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContourData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ColliderBody */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColliderBody_delete00
static int tolua_CocoStudio_ColliderBody_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColliderBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColliderBody* self = (ColliderBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ColliderBody */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColliderBody_new00
static int tolua_CocoStudio_ColliderBody_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ColliderBody",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCContourData* contourData = ((CCContourData*)  tolua_tousertype(tolua_S,2,0));
  {
   ColliderBody* tolua_ret = (ColliderBody*)  Mtolua_new((ColliderBody)(contourData));
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ColliderBody");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ColliderBody */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColliderBody_new00_local
static int tolua_CocoStudio_ColliderBody_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ColliderBody",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCContourData* contourData = ((CCContourData*)  tolua_tousertype(tolua_S,2,0));
  {
   ColliderBody* tolua_ret = (ColliderBody*)  Mtolua_new((ColliderBody)(contourData));
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ColliderBody");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_create00
static int tolua_CocoStudio_ScaleFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScaleFrame* tolua_ret = (ScaleFrame*)  ScaleFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ScaleFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleY of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_setScaleY00
static int tolua_CocoStudio_ScaleFrame_setScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float scaleY = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleY'", NULL);
#endif
  {
   self->setScaleY(scaleY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleX of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_setScaleX00
static int tolua_CocoStudio_ScaleFrame_setScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float scaleX = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleX'", NULL);
#endif
  {
   self->setScaleX(scaleX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_onEnter00
static int tolua_CocoStudio_ScaleFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleY of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_getScaleY00
static int tolua_CocoStudio_ScaleFrame_getScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleX of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_getScaleX00
static int tolua_CocoStudio_ScaleFrame_getScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_clone00
static int tolua_CocoStudio_ScaleFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_setScale00
static int tolua_CocoStudio_ScaleFrame_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'", NULL);
#endif
  {
   self->setScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_new00
static int tolua_CocoStudio_ScaleFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScaleFrame* tolua_ret = (ScaleFrame*)  Mtolua_new((ScaleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ScaleFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_new00_local
static int tolua_CocoStudio_ScaleFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScaleFrame* tolua_ret = (ScaleFrame*)  Mtolua_new((ScaleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ScaleFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  ScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScaleFrame_apply00
static int tolua_CocoStudio_ScaleFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScaleFrame* self = (ScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_create00
static int tolua_CocoStudio_CheckBox_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CheckBox* tolua_ret = (CheckBox*)  CheckBox::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CheckBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_createInstance00
static int tolua_CocoStudio_CheckBox_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  CheckBox::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_setAnchorPoint00
static int tolua_CocoStudio_CheckBox_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelectedState of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_getSelectedState00
static int tolua_CocoStudio_CheckBox_getSelectedState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelectedState'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getSelectedState();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelectedState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureBackGroundSelected of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextureBackGroundSelected00
static int tolua_CocoStudio_CheckBox_loadTextureBackGroundSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* backGroundSelected = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureBackGroundSelected'", NULL);
#endif
  {
   self->loadTextureBackGroundSelected(backGroundSelected,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureBackGroundSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureBackGroundDisabled of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextureBackGroundDisabled00
static int tolua_CocoStudio_CheckBox_loadTextureBackGroundDisabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* backGroundDisabled = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureBackGroundDisabled'", NULL);
#endif
  {
   self->loadTextureBackGroundDisabled(backGroundDisabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureBackGroundDisabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_getDescription00
static int tolua_CocoStudio_CheckBox_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_getVirtualRenderer00
static int tolua_CocoStudio_CheckBox_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureFrontCross of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextureFrontCross00
static int tolua_CocoStudio_CheckBox_loadTextureFrontCross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* cross = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureFrontCross'", NULL);
#endif
  {
   self->loadTextureFrontCross(cross,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureFrontCross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_getContentSize00
static int tolua_CocoStudio_CheckBox_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_new00
static int tolua_CocoStudio_CheckBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CheckBox* tolua_ret = (CheckBox*)  Mtolua_new((CheckBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CheckBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_new00_local
static int tolua_CocoStudio_CheckBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CheckBox* tolua_ret = (CheckBox*)  Mtolua_new((CheckBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CheckBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextures of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextures00
static int tolua_CocoStudio_CheckBox_loadTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* backGround = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* backGroundSelected = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* cross = ((const char*)  tolua_tostring(tolua_S,4,0));
  const char* backGroundDisabled = ((const char*)  tolua_tostring(tolua_S,5,0));
  const char* frontCrossDisabled = ((const char*)  tolua_tostring(tolua_S,6,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextures'", NULL);
#endif
  {
   self->loadTextures(backGround,backGroundSelected,cross,backGroundDisabled,frontCrossDisabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchEnded of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_onTouchEnded00
static int tolua_CocoStudio_CheckBox_onTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unused_event = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchEnded'", NULL);
#endif
  {
   self->onTouchEnded(touch,unused_event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_delete00
static int tolua_CocoStudio_CheckBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureBackGround of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextureBackGround00
static int tolua_CocoStudio_CheckBox_loadTextureBackGround00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* backGround = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType type = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureBackGround'", NULL);
#endif
  {
   self->loadTextureBackGround(backGround,type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureBackGround'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelectedState of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_setSelectedState00
static int tolua_CocoStudio_CheckBox_setSelectedState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  bool selected = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelectedState'", NULL);
#endif
  {
   self->setSelectedState(selected);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelectedState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTextureFrontCrossDisabled of class  CheckBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CheckBox_loadTextureFrontCrossDisabled00
static int tolua_CocoStudio_CheckBox_loadTextureFrontCrossDisabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CheckBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CheckBox* self = (CheckBox*)  tolua_tousertype(tolua_S,1,0);
  const char* frontCrossDisabled = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTextureFrontCrossDisabled'", NULL);
#endif
  {
   self->loadTextureFrontCrossDisabled(frontCrossDisabled,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTextureFrontCrossDisabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iBetweenDuration of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_get_CCTween_m_iBetweenDuration
static int tolua_get_CCTween_m_iBetweenDuration(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iBetweenDuration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iBetweenDuration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iBetweenDuration of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_set_CCTween_m_iBetweenDuration
static int tolua_set_CCTween_m_iBetweenDuration(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iBetweenDuration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iBetweenDuration = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iTotalDuration of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_get_CCTween_m_iTotalDuration
static int tolua_get_CCTween_m_iTotalDuration(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iTotalDuration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iTotalDuration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iTotalDuration of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_set_CCTween_m_iTotalDuration
static int tolua_set_CCTween_m_iTotalDuration(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iTotalDuration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iTotalDuration = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iFromIndex of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_get_CCTween_m_iFromIndex
static int tolua_get_CCTween_m_iFromIndex(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iFromIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iFromIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iFromIndex of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_set_CCTween_m_iFromIndex
static int tolua_set_CCTween_m_iFromIndex(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iFromIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iFromIndex = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iToIndex of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_get_CCTween_m_iToIndex
static int tolua_get_CCTween_m_iToIndex(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iToIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iToIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iToIndex of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_set_CCTween_m_iToIndex
static int tolua_set_CCTween_m_iToIndex(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iToIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iToIndex = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bPassLastFrame of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_get_CCTween_m_bPassLastFrame
static int tolua_get_CCTween_m_bPassLastFrame(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bPassLastFrame'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bPassLastFrame);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bPassLastFrame of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_set_CCTween_m_bPassLastFrame
static int tolua_set_CCTween_m_bPassLastFrame(lua_State* tolua_S)
{
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bPassLastFrame'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bPassLastFrame = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_create00
static int tolua_CocoStudio_CCTween_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  {
   CCTween* tolua_ret = (CCTween*)  CCTween::create(bone);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTween");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: play of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_play00
static int tolua_CocoStudio_CCTween_play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  CCMovementBoneData* movementBoneData = ((CCMovementBoneData*)  tolua_tousertype(tolua_S,2,0));
  int durationTo = ((int)  tolua_tonumber(tolua_S,3,0));
  int durationTween = ((int)  tolua_tonumber(tolua_S,4,0));
  int loop = ((int)  tolua_tonumber(tolua_S,5,0));
  int tweenEasing = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'play'", NULL);
#endif
  {
   self->play(movementBoneData,durationTo,durationTween,loop,tweenEasing);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoAndPause of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_gotoAndPause00
static int tolua_CocoStudio_CCTween_gotoAndPause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoAndPause'", NULL);
#endif
  {
   self->gotoAndPause(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoAndPause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementBoneData of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_getMovementBoneData00
static int tolua_CocoStudio_CCTween_getMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementBoneData'", NULL);
#endif
  {
   CCMovementBoneData* tolua_ret = (CCMovementBoneData*)  self->getMovementBoneData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimation of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_getAnimation00
static int tolua_CocoStudio_CCTween_getAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimation'", NULL);
#endif
  {
   CCArmatureAnimation* tolua_ret = (CCArmatureAnimation*)  self->getAnimation();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMovementBoneData of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_setMovementBoneData00
static int tolua_CocoStudio_CCTween_setMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  CCMovementBoneData* var = ((CCMovementBoneData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMovementBoneData'", NULL);
#endif
  {
   self->setMovementBoneData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_delete00
static int tolua_CocoStudio_CCTween_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoAndPlay of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_gotoAndPlay00
static int tolua_CocoStudio_CCTween_gotoAndPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoAndPlay'", NULL);
#endif
  {
   self->gotoAndPlay(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoAndPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_init00
static int tolua_CocoStudio_CCTween_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(bone);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimation of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_setAnimation00
static int tolua_CocoStudio_CCTween_setAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTween* self = (CCTween*)  tolua_tousertype(tolua_S,1,0);
  CCArmatureAnimation* animation = ((CCArmatureAnimation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimation'", NULL);
#endif
  {
   self->setAnimation(animation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_new00
static int tolua_CocoStudio_CCTween_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTween* tolua_ret = (CCTween*)  Mtolua_new((CCTween)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTween");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCTween */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTween_new00_local
static int tolua_CocoStudio_CCTween_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTween",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTween* tolua_ret = (CCTween*)  Mtolua_new((CCTween)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTween");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeValue of class  ActionFrameEasing */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrameEasing_easeValue00
static int tolua_CocoStudio_ActionFrameEasing_easeValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrameEasing",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrameEasing* self = (ActionFrameEasing*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->easeValue(t);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounceTime of class  ActionFrameEasing */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrameEasing_bounceTime00
static int tolua_CocoStudio_ActionFrameEasing_bounceTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrameEasing",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrameEasing* self = (ActionFrameEasing*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounceTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->bounceTime(t);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounceTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionFrameEasing */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrameEasing_delete00
static int tolua_CocoStudio_ActionFrameEasing_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFrameEasing",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFrameEasing* self = (ActionFrameEasing*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionFrameEasing */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrameEasing_new00
static int tolua_CocoStudio_ActionFrameEasing_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFrameEasing",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFrameEasing* tolua_ret = (ActionFrameEasing*)  Mtolua_new((ActionFrameEasing)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFrameEasing");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionFrameEasing */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFrameEasing_new00_local
static int tolua_CocoStudio_ActionFrameEasing_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFrameEasing",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFrameEasing* tolua_ret = (ActionFrameEasing*)  Mtolua_new((ActionFrameEasing)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFrameEasing");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_create00
static int tolua_CocoStudio_CCDecorativeDisplay_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDecorativeDisplay* tolua_ret = (CCDecorativeDisplay*)  CCDecorativeDisplay::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDecorativeDisplay");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplay of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_getDisplay00
static int tolua_CocoStudio_CCDecorativeDisplay_getDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplay'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getDisplay();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_delete00
static int tolua_CocoStudio_CCDecorativeDisplay_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplay of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_setDisplay00
static int tolua_CocoStudio_CCDecorativeDisplay_setDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
  CCNode* var = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplay'", NULL);
#endif
  {
   self->setDisplay(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_init00
static int tolua_CocoStudio_CCDecorativeDisplay_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplayData of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_setDisplayData00
static int tolua_CocoStudio_CCDecorativeDisplay_setDisplayData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* var = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplayData'", NULL);
#endif
  {
   self->setDisplayData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_new00
static int tolua_CocoStudio_CCDecorativeDisplay_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDecorativeDisplay* tolua_ret = (CCDecorativeDisplay*)  Mtolua_new((CCDecorativeDisplay)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDecorativeDisplay");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_new00_local
static int tolua_CocoStudio_CCDecorativeDisplay_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDecorativeDisplay* tolua_ret = (CCDecorativeDisplay*)  Mtolua_new((CCDecorativeDisplay)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDecorativeDisplay");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayData of class  CCDecorativeDisplay */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDecorativeDisplay_getDisplayData00
static int tolua_CocoStudio_CCDecorativeDisplay_getDisplayData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDecorativeDisplay* self = (CCDecorativeDisplay*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayData'", NULL);
#endif
  {
   CCDisplayData* tolua_ret = (CCDisplayData*)  self->getDisplayData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_create00
static int tolua_CocoStudio_ColorFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ColorFrame* tolua_ret = (ColorFrame*)  ColorFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ColorFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_onEnter00
static int tolua_CocoStudio_ColorFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_setColor00
static int tolua_CocoStudio_ColorFrame_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_getColor00
static int tolua_CocoStudio_ColorFrame_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   ccColor3B tolua_ret = (ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_clone00
static int tolua_CocoStudio_ColorFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAlpha of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_setAlpha00
static int tolua_CocoStudio_ColorFrame_setAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
  unsigned char alpha = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAlpha'", NULL);
#endif
  {
   self->setAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_new00
static int tolua_CocoStudio_ColorFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ColorFrame* tolua_ret = (ColorFrame*)  Mtolua_new((ColorFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ColorFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_new00_local
static int tolua_CocoStudio_ColorFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ColorFrame* tolua_ret = (ColorFrame*)  Mtolua_new((ColorFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ColorFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAlpha of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_getAlpha00
static int tolua_CocoStudio_ColorFrame_getAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAlpha'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  ColorFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ColorFrame_apply00
static int tolua_CocoStudio_ColorFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ColorFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ColorFrame* self = (ColorFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: vertexList of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_get_CCContourData_vertexList
static int tolua_get_CCContourData_vertexList(lua_State* tolua_S)
{
  CCContourData* self = (CCContourData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertexList'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->vertexList,"CCArray");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: vertexList of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_set_CCContourData_vertexList
static int tolua_set_CCContourData_vertexList(lua_State* tolua_S)
{
  CCContourData* self = (CCContourData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertexList'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->vertexList = *((CCArray*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_create00
static int tolua_CocoStudio_CCContourData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCContourData* tolua_ret = (CCContourData*)  CCContourData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCContourData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_init00
static int tolua_CocoStudio_CCContourData_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCContourData* self = (CCContourData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_delete00
static int tolua_CocoStudio_CCContourData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCContourData* self = (CCContourData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addVertex of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_addVertex00
static int tolua_CocoStudio_CCContourData_addVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCContourData* self = (CCContourData*)  tolua_tousertype(tolua_S,1,0);
  CCPoint* vertex = ((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addVertex'", NULL);
#endif
  {
   self->addVertex(vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_new00
static int tolua_CocoStudio_CCContourData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCContourData* tolua_ret = (CCContourData*)  Mtolua_new((CCContourData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCContourData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCContourData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCContourData_new00_local
static int tolua_CocoStudio_CCContourData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCContourData* tolua_ret = (CCContourData*)  Mtolua_new((CCContourData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCContourData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_name
static int tolua_get_CCMovementData_name(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_name
static int tolua_set_CCMovementData_name(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: duration of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_duration
static int tolua_get_CCMovementData_duration(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->duration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: duration of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_duration
static int tolua_set_CCMovementData_duration(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->duration = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: scale of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_scale
static int tolua_get_CCMovementData_scale(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->scale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: scale of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_scale
static int tolua_set_CCMovementData_scale(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->scale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: durationTo of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_durationTo
static int tolua_get_CCMovementData_durationTo(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'durationTo'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->durationTo);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: durationTo of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_durationTo
static int tolua_set_CCMovementData_durationTo(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'durationTo'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->durationTo = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: durationTween of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_durationTween
static int tolua_get_CCMovementData_durationTween(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'durationTween'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->durationTween);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: durationTween of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_durationTween
static int tolua_set_CCMovementData_durationTween(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'durationTween'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->durationTween = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: loop of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_loop
static int tolua_get_CCMovementData_loop(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'loop'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->loop);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: loop of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_loop
static int tolua_set_CCMovementData_loop(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'loop'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->loop = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: movBoneDataDic of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_get_CCMovementData_movBoneDataDic
static int tolua_get_CCMovementData_movBoneDataDic(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'movBoneDataDic'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->movBoneDataDic,"CCDictionary");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: movBoneDataDic of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_set_CCMovementData_movBoneDataDic
static int tolua_set_CCMovementData_movBoneDataDic(lua_State* tolua_S)
{
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'movBoneDataDic'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->movBoneDataDic = *((CCDictionary*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_create00
static int tolua_CocoStudio_CCMovementData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementData* tolua_ret = (CCMovementData*)  CCMovementData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMovementBoneData of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_addMovementBoneData00
static int tolua_CocoStudio_CCMovementData_addMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMovementBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
  CCMovementBoneData* movBoneData = ((CCMovementBoneData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMovementBoneData'", NULL);
#endif
  {
   self->addMovementBoneData(movBoneData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementBoneData of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_getMovementBoneData00
static int tolua_CocoStudio_CCMovementData_getMovementBoneData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
  const char* boneName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementBoneData'", NULL);
#endif
  {
   CCMovementBoneData* tolua_ret = (CCMovementBoneData*)  self->getMovementBoneData(boneName);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementBoneData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_delete00
static int tolua_CocoStudio_CCMovementData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMovementData* self = (CCMovementData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_new00
static int tolua_CocoStudio_CCMovementData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementData* tolua_ret = (CCMovementData*)  Mtolua_new((CCMovementData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCMovementData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCMovementData_new00_local
static int tolua_CocoStudio_CCMovementData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCMovementData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCMovementData* tolua_ret = (CCMovementData*)  Mtolua_new((CCMovementData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCMovementData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fSpeedScale of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_fSpeedScale
static int tolua_get_CCArmatureAnimation_m_fSpeedScale(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fSpeedScale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fSpeedScale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fSpeedScale of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_fSpeedScale
static int tolua_set_CCArmatureAnimation_m_fSpeedScale(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fSpeedScale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fSpeedScale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_strMovementID of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_strMovementID
static int tolua_get_CCArmatureAnimation_m_strMovementID(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strMovementID'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_strMovementID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_strMovementID of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_strMovementID
static int tolua_set_CCArmatureAnimation_m_strMovementID(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_strMovementID'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_strMovementID = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iToIndex of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_iToIndex
static int tolua_get_CCArmatureAnimation_m_iToIndex(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iToIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iToIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iToIndex of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_iToIndex
static int tolua_set_CCArmatureAnimation_m_iToIndex(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iToIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iToIndex = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bIgnoreFrameEvent of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_bIgnoreFrameEvent
static int tolua_get_CCArmatureAnimation_m_bIgnoreFrameEvent(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bIgnoreFrameEvent'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bIgnoreFrameEvent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bIgnoreFrameEvent of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_bIgnoreFrameEvent
static int tolua_set_CCArmatureAnimation_m_bIgnoreFrameEvent(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bIgnoreFrameEvent'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bIgnoreFrameEvent = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bOnMovementList of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_bOnMovementList
static int tolua_get_CCArmatureAnimation_m_bOnMovementList(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bOnMovementList'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bOnMovementList);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bOnMovementList of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_bOnMovementList
static int tolua_set_CCArmatureAnimation_m_bOnMovementList(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bOnMovementList'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bOnMovementList = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bMovementListLoop of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_bMovementListLoop
static int tolua_get_CCArmatureAnimation_m_bMovementListLoop(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bMovementListLoop'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bMovementListLoop);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bMovementListLoop of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_bMovementListLoop
static int tolua_set_CCArmatureAnimation_m_bMovementListLoop(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bMovementListLoop'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bMovementListLoop = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_uMovementIndex of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_unsigned_m_uMovementIndex
static int tolua_get_CCArmatureAnimation_unsigned_m_uMovementIndex(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_uMovementIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_uMovementIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_uMovementIndex of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_unsigned_m_uMovementIndex
static int tolua_set_CCArmatureAnimation_unsigned_m_uMovementIndex(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_uMovementIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_uMovementIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_iMovementListDurationTo of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_get_CCArmatureAnimation_m_iMovementListDurationTo
static int tolua_get_CCArmatureAnimation_m_iMovementListDurationTo(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iMovementListDurationTo'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_iMovementListDurationTo);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_iMovementListDurationTo of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_set_CCArmatureAnimation_m_iMovementListDurationTo
static int tolua_set_CCArmatureAnimation_m_iMovementListDurationTo(lua_State* tolua_S)
{
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_iMovementListDurationTo'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_iMovementListDurationTo = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_create00
static int tolua_CocoStudio_CCArmatureAnimation_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmature* armature = ((CCArmature*)  tolua_tousertype(tolua_S,2,0));
  {
   CCArmatureAnimation* tolua_ret = (CCArmatureAnimation*)  CCArmatureAnimation::create(armature);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUserObject of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getUserObject00
static int tolua_CocoStudio_CCArmatureAnimation_getUserObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUserObject'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->getUserObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUserObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScriptObjectDict of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_setScriptObjectDict00
static int tolua_CocoStudio_CCArmatureAnimation_setScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* pScriptObjectDict = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScriptObjectDict'", NULL);
#endif
  {
   self->setScriptObjectDict(pScriptObjectDict);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeedScale of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getSpeedScale00
static int tolua_CocoStudio_CCArmatureAnimation_getSpeedScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeedScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSpeedScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeedScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_pause00
static int tolua_CocoStudio_CCArmatureAnimation_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpeedScale of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_setSpeedScale00
static int tolua_CocoStudio_CCArmatureAnimation_setSpeedScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  float speedScale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpeedScale'", NULL);
#endif
  {
   self->setSpeedScale(speedScale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpeedScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_delete00
static int tolua_CocoStudio_CCArmatureAnimation_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_init00
static int tolua_CocoStudio_CCArmatureAnimation_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArmature",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCArmature* armature = ((CCArmature*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(armature);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: play of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_play00
static int tolua_CocoStudio_CCArmatureAnimation_play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  const char* animationName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int durationTo = ((int)  tolua_tonumber(tolua_S,3,0));
  int durationTween = ((int)  tolua_tonumber(tolua_S,4,0));
  int loop = ((int)  tolua_tonumber(tolua_S,5,0));
  int tweenEasing = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'play'", NULL);
#endif
  {
   self->play(animationName,durationTo,durationTween,loop,tweenEasing);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUserObject of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_setUserObject00
static int tolua_CocoStudio_CCArmatureAnimation_setUserObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCObject* pUserObject = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUserObject'", NULL);
#endif
  {
   self->setUserObject(pUserObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUserObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoAndPause of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_gotoAndPause00
static int tolua_CocoStudio_CCArmatureAnimation_gotoAndPause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoAndPause'", NULL);
#endif
  {
   self->gotoAndPause(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoAndPause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_resume00
static int tolua_CocoStudio_CCArmatureAnimation_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_stop00
static int tolua_CocoStudio_CCArmatureAnimation_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_update00
static int tolua_CocoStudio_CCArmatureAnimation_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationData of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getAnimationData00
static int tolua_CocoStudio_CCArmatureAnimation_getAnimationData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationData'", NULL);
#endif
  {
   CCAnimationData* tolua_ret = (CCAnimationData*)  self->getAnimationData();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCAnimationData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScriptObjectDict of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getScriptObjectDict00
static int tolua_CocoStudio_CCArmatureAnimation_getScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScriptObjectDict'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getScriptObjectDict();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playWithArray of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_playWithArray00
static int tolua_CocoStudio_CCArmatureAnimation_playWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCArray* movementNames = ((CCArray*)  tolua_tousertype(tolua_S,2,0));
  int durationTo = ((int)  tolua_tonumber(tolua_S,3,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playWithArray'", NULL);
#endif
  {
   self->playWithArray(movementNames,durationTo,loop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playWithIndexArray of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_playWithIndexArray00
static int tolua_CocoStudio_CCArmatureAnimation_playWithIndexArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCArray* movementIndexes = ((CCArray*)  tolua_tousertype(tolua_S,2,0));
  int durationTo = ((int)  tolua_tonumber(tolua_S,3,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playWithIndexArray'", NULL);
#endif
  {
   self->playWithIndexArray(movementIndexes,durationTo,loop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playWithIndexArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playWithIndex of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_playWithIndex00
static int tolua_CocoStudio_CCArmatureAnimation_playWithIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  int animationIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int durationTo = ((int)  tolua_tonumber(tolua_S,3,0));
  int durationTween = ((int)  tolua_tonumber(tolua_S,4,0));
  int loop = ((int)  tolua_tonumber(tolua_S,5,0));
  int tweenEasing = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playWithIndex'", NULL);
#endif
  {
   self->playWithIndex(animationIndex,durationTo,durationTween,loop,tweenEasing);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playWithIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentMovementID of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getCurrentMovementID00
static int tolua_CocoStudio_CCArmatureAnimation_getCurrentMovementID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentMovementID'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getCurrentMovementID();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentMovementID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationData of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_setAnimationData00
static int tolua_CocoStudio_CCArmatureAnimation_setAnimationData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCAnimationData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  CCAnimationData* var = ((CCAnimationData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationData'", NULL);
#endif
  {
   self->setAnimationData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoAndPlay of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_gotoAndPlay00
static int tolua_CocoStudio_CCArmatureAnimation_gotoAndPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoAndPlay'", NULL);
#endif
  {
   self->gotoAndPlay(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoAndPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_new00
static int tolua_CocoStudio_CCArmatureAnimation_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureAnimation* tolua_ret = (CCArmatureAnimation*)  Mtolua_new((CCArmatureAnimation)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_new00_local
static int tolua_CocoStudio_CCArmatureAnimation_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCArmatureAnimation* tolua_ret = (CCArmatureAnimation*)  Mtolua_new((CCArmatureAnimation)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCArmatureAnimation");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementCount of class  CCArmatureAnimation */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCArmatureAnimation_getMovementCount00
static int tolua_CocoStudio_CCArmatureAnimation_getMovementCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCArmatureAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCArmatureAnimation* self = (CCArmatureAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementCount'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMovementCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_create00
static int tolua_CocoStudio_Timeline_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocostudio::timeline::Timeline* tolua_ret = (cocostudio::timeline::Timeline*)  cocostudio::timeline::Timeline::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Timeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_clone00
static int tolua_CocoStudio_Timeline_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   cocostudio::timeline::Timeline* tolua_ret = (cocostudio::timeline::Timeline*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Timeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrame of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_gotoFrame00
static int tolua_CocoStudio_Timeline_gotoFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrame'", NULL);
#endif
  {
   self->gotoFrame(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNode of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_setNode00
static int tolua_CocoStudio_Timeline_setNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNode'", NULL);
#endif
  {
   self->setNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionTimeline of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_getActionTimeline00
static int tolua_CocoStudio_Timeline_getActionTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionTimeline'", NULL);
#endif
  {
   cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->getActionTimeline();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertFrame of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_insertFrame00
static int tolua_CocoStudio_Timeline_insertFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Frame* frame = ((cocostudio::timeline::Frame*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertFrame'", NULL);
#endif
  {
   self->insertFrame(frame,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActionTag of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_setActionTag00
static int tolua_CocoStudio_Timeline_setActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActionTag'", NULL);
#endif
  {
   self->setActionTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_delete00
static int tolua_CocoStudio_Timeline_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrame of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_addFrame00
static int tolua_CocoStudio_Timeline_addFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Frame* frame = ((cocostudio::timeline::Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrame'", NULL);
#endif
  {
   self->addFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_init00
static int tolua_CocoStudio_Timeline_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrames of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_getFrames00
static int tolua_CocoStudio_Timeline_getFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrames'", NULL);
#endif
  {
   const CCArray* tolua_ret = (const CCArray*)  self->getFrames();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionTag of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_getActionTag00
static int tolua_CocoStudio_Timeline_getActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getActionTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_new00
static int tolua_CocoStudio_Timeline_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::Timeline* tolua_ret = ( cocostudio::timeline::Timeline*)  Mtolua_new(( cocostudio::timeline::Timeline)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Timeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_new00_local
static int tolua_CocoStudio_Timeline_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::Timeline* tolua_ret = ( cocostudio::timeline::Timeline*)  Mtolua_new(( cocostudio::timeline::Timeline)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Timeline");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNode of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_getNode00
static int tolua_CocoStudio_Timeline_getNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNode'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFrame of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_removeFrame00
static int tolua_CocoStudio_Timeline_removeFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Frame* frame = ((cocostudio::timeline::Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFrame'", NULL);
#endif
  {
   self->removeFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActionTimeline of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_setActionTimeline00
static int tolua_CocoStudio_Timeline_setActionTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::ActionTimeline* action = ((cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActionTimeline'", NULL);
#endif
  {
   self->setActionTimeline(action);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActionTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stepToFrame of class  Timeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Timeline_stepToFrame00
static int tolua_CocoStudio_Timeline_stepToFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Timeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::Timeline* self = (cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stepToFrame'", NULL);
#endif
  {
   self->stepToFrame(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stepToFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformFromParentWithoutScale of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_transformFromParentWithoutScale00
static int tolua_CocoStudio_CCTransformHelp_transformFromParentWithoutScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* node = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  const CCBaseData* parentNode = ((const CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::transformFromParentWithoutScale(*node,*parentNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformFromParentWithoutScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToMatrix of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_nodeToMatrix00
static int tolua_CocoStudio_CCTransformHelp_nodeToMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCAffineTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CCBaseData* _node = ((const CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  CCAffineTransform* _matrix = ((CCAffineTransform*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::nodeToMatrix(*_node,*_matrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformToParentWithoutScale of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_transformToParentWithoutScale00
static int tolua_CocoStudio_CCTransformHelp_transformToParentWithoutScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* node = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  const CCBaseData* parentNode = ((const CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::transformToParentWithoutScale(*node,*parentNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformToParentWithoutScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeConcat of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_nodeConcat00
static int tolua_CocoStudio_CCTransformHelp_nodeConcat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* target = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  CCBaseData* source = ((CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::nodeConcat(*target,*source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeConcat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: matrixToNode of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_matrixToNode00
static int tolua_CocoStudio_CCTransformHelp_matrixToNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCAffineTransform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CCAffineTransform* _matrix = ((const CCAffineTransform*)  tolua_tousertype(tolua_S,2,0));
  CCBaseData* _node = ((CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::matrixToNode(*_matrix,*_node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'matrixToNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformFromParent of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_transformFromParent00
static int tolua_CocoStudio_CCTransformHelp_transformFromParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* node = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  const CCBaseData* parentNode = ((const CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::transformFromParent(*node,*parentNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformFromParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeSub of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_nodeSub00
static int tolua_CocoStudio_CCTransformHelp_nodeSub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* target = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  CCBaseData* source = ((CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::nodeSub(*target,*source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeSub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformToParent of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_transformToParent00
static int tolua_CocoStudio_CCTransformHelp_transformToParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* node = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  const CCBaseData* parentNode = ((const CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  {
   CCTransformHelp::transformToParent(*node,*parentNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformToParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_new00
static int tolua_CocoStudio_CCTransformHelp_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTransformHelp* tolua_ret = (CCTransformHelp*)  Mtolua_new((CCTransformHelp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTransformHelp");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCTransformHelp */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTransformHelp_new00_local
static int tolua_CocoStudio_CCTransformHelp_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTransformHelp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTransformHelp* tolua_ret = (CCTransformHelp*)  Mtolua_new((CCTransformHelp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTransformHelp");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectID of class  CCSortableObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSortableObject_getObjectID00
static int tolua_CocoStudio_CCSortableObject_getObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSortableObject* self = (CCSortableObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectID'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getObjectID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjectID of class  CCSortableObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSortableObject_setObjectID00
static int tolua_CocoStudio_CCSortableObject_setObjectID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSortableObject* self = (CCSortableObject*)  tolua_tousertype(tolua_S,1,0);
  unsigned int objectID = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjectID'", NULL);
#endif
  {
   self->setObjectID(objectID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCSortableObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSortableObject_delete00
static int tolua_CocoStudio_CCSortableObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSortableObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSortableObject* self = (CCSortableObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_create00
static int tolua_CocoStudio_PositionFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PositionFrame* tolua_ret = (PositionFrame*)  PositionFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"PositionFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_onEnter00
static int tolua_CocoStudio_PositionFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_clone00
static int tolua_CocoStudio_PositionFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getX of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_getX00
static int tolua_CocoStudio_PositionFrame_getX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getY of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_getY00
static int tolua_CocoStudio_PositionFrame_getY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_new00
static int tolua_CocoStudio_PositionFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PositionFrame* tolua_ret = (PositionFrame*)  Mtolua_new((PositionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"PositionFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_new00_local
static int tolua_CocoStudio_PositionFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PositionFrame* tolua_ret = (PositionFrame*)  Mtolua_new((PositionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"PositionFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_apply00
static int tolua_CocoStudio_PositionFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_setPosition00
static int tolua_CocoStudio_PositionFrame_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* position = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(*position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setX of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_setX00
static int tolua_CocoStudio_PositionFrame_setX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setX'", NULL);
#endif
  {
   self->setX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setY of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_setY00
static int tolua_CocoStudio_PositionFrame_setY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setY'", NULL);
#endif
  {
   self->setY(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  PositionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PositionFrame_getPosition00
static int tolua_CocoStudio_PositionFrame_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PositionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PositionFrame* self = (PositionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_create00
static int tolua_CocoStudio_ListView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ListView* tolua_ret = (ListView*)  ListView::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ListView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_createInstance00
static int tolua_CocoStudio_ListView_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  ListView::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_setGravity00
static int tolua_CocoStudio_ListView_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  ListViewGravity gravity = ((ListViewGravity) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'", NULL);
#endif
  {
   self->setGravity(gravity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeLastItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_removeLastItem00
static int tolua_CocoStudio_ListView_removeLastItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeLastItem'", NULL);
#endif
  {
   self->removeLastItem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeLastItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getDescription00
static int tolua_CocoStudio_ListView_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemsMargin of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getItemsMargin00
static int tolua_CocoStudio_ListView_getItemsMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemsMargin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getItemsMargin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemsMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndex of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getIndex00
static int tolua_CocoStudio_ListView_getIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  Widget* item = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndex'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getIndex(item);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushBackCustomItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_pushBackCustomItem00
static int tolua_CocoStudio_ListView_pushBackCustomItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  Widget* item = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushBackCustomItem'", NULL);
#endif
  {
   self->pushBackCustomItem(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushBackCustomItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertDefaultItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_insertDefaultItem00
static int tolua_CocoStudio_ListView_insertDefaultItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertDefaultItem'", NULL);
#endif
  {
   self->insertDefaultItem(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertDefaultItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_delete00
static int tolua_CocoStudio_ListView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllItems of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_removeAllItems00
static int tolua_CocoStudio_ListView_removeAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllItems'", NULL);
#endif
  {
   self->removeAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItems of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getItems00
static int tolua_CocoStudio_ListView_getItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItems'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getItems();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurSelectedIndex of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getCurSelectedIndex00
static int tolua_CocoStudio_ListView_getCurSelectedIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurSelectedIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurSelectedIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurSelectedIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sortAllChildren of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_sortAllChildren00
static int tolua_CocoStudio_ListView_sortAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sortAllChildren'", NULL);
#endif
  {
   self->sortAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sortAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemsMargin of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_setItemsMargin00
static int tolua_CocoStudio_ListView_setItemsMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  float margin = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemsMargin'", NULL);
#endif
  {
   self->setItemsMargin(margin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemsMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_getItem00
static int tolua_CocoStudio_ListView_getItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getItem(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_removeItem00
static int tolua_CocoStudio_ListView_removeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeItem'", NULL);
#endif
  {
   self->removeItem(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushBackDefaultItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_pushBackDefaultItem00
static int tolua_CocoStudio_ListView_pushBackDefaultItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushBackDefaultItem'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->pushBackDefaultItem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushBackDefaultItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: refreshView of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_refreshView00
static int tolua_CocoStudio_ListView_refreshView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'refreshView'", NULL);
#endif
  {
   self->refreshView();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refreshView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_new00
static int tolua_CocoStudio_ListView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ListView* tolua_ret = (ListView*)  Mtolua_new((ListView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ListView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_new00_local
static int tolua_CocoStudio_ListView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ListView* tolua_ret = (ListView*)  Mtolua_new((ListView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ListView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemModel of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_setItemModel00
static int tolua_CocoStudio_ListView_setItemModel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  Widget* model = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemModel'", NULL);
#endif
  {
   self->setItemModel(model);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemModel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestRefreshView of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_requestRefreshView00
static int tolua_CocoStudio_ListView_requestRefreshView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestRefreshView'", NULL);
#endif
  {
   self->requestRefreshView();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestRefreshView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertCustomItem of class  ListView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ListView_insertCustomItem00
static int tolua_CocoStudio_ListView_insertCustomItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ListView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ListView* self = (ListView*)  tolua_tousertype(tolua_S,1,0);
  Widget* item = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertCustomItem'", NULL);
#endif
  {
   self->insertCustomItem(item,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertCustomItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_create00
static int tolua_CocoStudio_ActionTimeline_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  cocostudio::timeline::ActionTimeline::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScriptObjectDict of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_setScriptObjectDict00
static int tolua_CocoStudio_ActionTimeline_setScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* scriptObjectDict = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScriptObjectDict'", NULL);
#endif
  {
   self->setScriptObjectDict(scriptObjectDict);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTimeline of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_addTimeline00
static int tolua_CocoStudio_ActionTimeline_addTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Timeline* timeline = ((cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTimeline'", NULL);
#endif
  {
   self->addTimeline(timeline);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentFrame of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getCurrentFrame00
static int tolua_CocoStudio_ActionTimeline_getCurrentFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentFrame'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurrentFrame();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartFrame of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getStartFrame00
static int tolua_CocoStudio_ActionTimeline_getStartFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartFrame'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getStartFrame();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_pause00
static int tolua_CocoStudio_ActionTimeline_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_delete00
static int tolua_CocoStudio_ActionTimeline_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_init00
static int tolua_CocoStudio_ActionTimeline_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTimeline of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_removeTimeline00
static int tolua_CocoStudio_ActionTimeline_removeTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Timeline* timeline = ((cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTimeline'", NULL);
#endif
  {
   self->removeTimeline(timeline);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_isDone00
static int tolua_CocoStudio_ActionTimeline_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_resume00
static int tolua_CocoStudio_ActionTimeline_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_clone00
static int tolua_CocoStudio_ActionTimeline_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
     cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->clone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScriptObjectDict of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getScriptObjectDict00
static int tolua_CocoStudio_ActionTimeline_getScriptObjectDict00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScriptObjectDict'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getScriptObjectDict();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScriptObjectDict'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_step00
static int tolua_CocoStudio_ActionTimeline_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  float delta = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTimeSpeed of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getTimeSpeed00
static int tolua_CocoStudio_ActionTimeline_getTimeSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTimeSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTimeSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDuration of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getDuration00
static int tolua_CocoStudio_ActionTimeline_getDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDuration'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getDuration();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrameAndPause of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_gotoFrameAndPause00
static int tolua_CocoStudio_ActionTimeline_gotoFrameAndPause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int startIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrameAndPause'", NULL);
#endif
  {
   self->gotoFrameAndPause(startIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoFrameAndPause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPlaying of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_isPlaying00
static int tolua_CocoStudio_ActionTimeline_isPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrameAndPlay of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay00
static int tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int startIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrameAndPlay'", NULL);
#endif
  {
   self->gotoFrameAndPlay(startIndex,loop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotoFrameAndPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrameAndPlay of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay01
static int tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int startIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrameAndPlay'", NULL);
#endif
  {
   self->gotoFrameAndPlay(startIndex);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrameAndPlay of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay02
static int tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int startIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int endIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrameAndPlay'", NULL);
#endif
  {
   self->gotoFrameAndPlay(startIndex,endIndex,loop);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotoFrameAndPlay of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay03
static int tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int startIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int endIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  int currentFrameIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotoFrameAndPlay'", NULL);
#endif
  {
   self->gotoFrameAndPlay(startIndex,endIndex,currentFrameIndex,loop);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearFrameEventCallFunc of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_clearFrameEventCallFunc00
static int tolua_CocoStudio_ActionTimeline_clearFrameEventCallFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearFrameEventCallFunc'", NULL);
#endif
  {
   self->clearFrameEventCallFunc();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearFrameEventCallFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_startWithTarget00
static int tolua_CocoStudio_ActionTimeline_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_reverse00
static int tolua_CocoStudio_ActionTimeline_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndFrame of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_getEndFrame00
static int tolua_CocoStudio_ActionTimeline_getEndFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndFrame'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEndFrame();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTimeSpeed of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_setTimeSpeed00
static int tolua_CocoStudio_ActionTimeline_setTimeSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTimeSpeed'", NULL);
#endif
  {
   self->setTimeSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTimeSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_new00
static int tolua_CocoStudio_ActionTimeline_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  Mtolua_new((cocostudio::timeline::ActionTimeline)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_new00_local
static int tolua_CocoStudio_ActionTimeline_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  Mtolua_new((cocostudio::timeline::ActionTimeline)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDuration of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_setDuration00
static int tolua_CocoStudio_ActionTimeline_setDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int duration = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDuration'", NULL);
#endif
  {
   self->setDuration(duration);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentFrame of class  ActionTimeline */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimeline_setCurrentFrame00
static int tolua_CocoStudio_ActionTimeline_setCurrentFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimeline",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocostudio::timeline::ActionTimeline* self = (cocostudio::timeline::ActionTimeline*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentFrame'", NULL);
#endif
  {
   self->setCurrentFrame(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_dValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_dValue
static int tolua_get_CCControlStepper_m_dValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_dValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_dValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_dValue
static int tolua_set_CCControlStepper_m_dValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_dValue = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bContinuous of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_bContinuous
static int tolua_get_CCControlStepper_m_bContinuous(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bContinuous'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bContinuous);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bContinuous of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_bContinuous
static int tolua_set_CCControlStepper_m_bContinuous(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bContinuous'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bContinuous = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bAutorepeat of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_bAutorepeat
static int tolua_get_CCControlStepper_m_bAutorepeat(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bAutorepeat'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bAutorepeat);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bAutorepeat of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_bAutorepeat
static int tolua_set_CCControlStepper_m_bAutorepeat(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bAutorepeat'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bAutorepeat = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bWraps of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_bWraps
static int tolua_get_CCControlStepper_m_bWraps(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bWraps'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bWraps);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bWraps of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_bWraps
static int tolua_set_CCControlStepper_m_bWraps(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bWraps'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bWraps = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_dMinimumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_dMinimumValue
static int tolua_get_CCControlStepper_m_dMinimumValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dMinimumValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_dMinimumValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_dMinimumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_dMinimumValue
static int tolua_set_CCControlStepper_m_dMinimumValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dMinimumValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_dMinimumValue = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_dMaximumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_dMaximumValue
static int tolua_get_CCControlStepper_m_dMaximumValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dMaximumValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_dMaximumValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_dMaximumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_dMaximumValue
static int tolua_set_CCControlStepper_m_dMaximumValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dMaximumValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_dMaximumValue = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_dStepValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_dStepValue
static int tolua_get_CCControlStepper_m_dStepValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dStepValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_dStepValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_dStepValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_dStepValue
static int tolua_set_CCControlStepper_m_dStepValue(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_dStepValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_dStepValue = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bTouchInsideFlag of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_bTouchInsideFlag
static int tolua_get_CCControlStepper_m_bTouchInsideFlag(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bTouchInsideFlag'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bTouchInsideFlag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bTouchInsideFlag of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_bTouchInsideFlag
static int tolua_set_CCControlStepper_m_bTouchInsideFlag(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bTouchInsideFlag'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bTouchInsideFlag = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_eTouchedPart of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_eTouchedPart
static int tolua_get_CCControlStepper_m_eTouchedPart(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_eTouchedPart'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_eTouchedPart);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_eTouchedPart of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_eTouchedPart
static int tolua_set_CCControlStepper_m_eTouchedPart(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_eTouchedPart'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_eTouchedPart = ((CCControlStepperPart) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nAutorepeatCount of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_get_CCControlStepper_m_nAutorepeatCount
static int tolua_get_CCControlStepper_m_nAutorepeatCount(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nAutorepeatCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nAutorepeatCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nAutorepeatCount of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_set_CCControlStepper_m_nAutorepeatCount
static int tolua_set_CCControlStepper_m_nAutorepeatCount(lua_State* tolua_S)
{
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nAutorepeatCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nAutorepeatCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_create00
static int tolua_CocoStudio_CCControlStepper_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSprite* minusSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* plusSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  {
   CCControlStepper* tolua_ret = (CCControlStepper*)  CCControlStepper::create(minusSprite,plusSprite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlStepper");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinusSprite of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setMinusSprite00
static int tolua_CocoStudio_CCControlStepper_setMinusSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinusSprite'", NULL);
#endif
  {
   self->setMinusSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinusSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_ccTouchBegan00
static int tolua_CocoStudio_CCControlStepper_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinusLabel of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_getMinusLabel00
static int tolua_CocoStudio_CCControlStepper_getMinusLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinusLabel'", NULL);
#endif
  {
   CCLabelTTF* tolua_ret = (CCLabelTTF*)  self->getMinusLabel();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCLabelTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinusLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWraps of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setWraps00
static int tolua_CocoStudio_CCControlStepper_setWraps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  bool wraps = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWraps'", NULL);
#endif
  {
   self->setWraps(wraps);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWraps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_ccTouchEnded00
static int tolua_CocoStudio_CCControlStepper_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isContinuous of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_isContinuous00
static int tolua_CocoStudio_CCControlStepper_isContinuous00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isContinuous'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isContinuous();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isContinuous'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinusSprite of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_getMinusSprite00
static int tolua_CocoStudio_CCControlStepper_getMinusSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinusSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getMinusSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinusSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateLayoutUsingTouchLocation of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_updateLayoutUsingTouchLocation00
static int tolua_CocoStudio_CCControlStepper_updateLayoutUsingTouchLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCPoint location = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateLayoutUsingTouchLocation'", NULL);
#endif
  {
   self->updateLayoutUsingTouchLocation(location);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateLayoutUsingTouchLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setValueWithSendingEvent of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setValueWithSendingEvent00
static int tolua_CocoStudio_CCControlStepper_setValueWithSendingEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  double value = ((double)  tolua_tonumber(tolua_S,2,0));
  bool send = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setValueWithSendingEvent'", NULL);
#endif
  {
   self->setValueWithSendingEvent(value,send);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setValueWithSendingEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_delete00
static int tolua_CocoStudio_CCControlStepper_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlusLabel of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_getPlusLabel00
static int tolua_CocoStudio_CCControlStepper_getPlusLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlusLabel'", NULL);
#endif
  {
   CCLabelTTF* tolua_ret = (CCLabelTTF*)  self->getPlusLabel();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCLabelTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlusLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopAutorepeat of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_stopAutorepeat00
static int tolua_CocoStudio_CCControlStepper_stopAutorepeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopAutorepeat'", NULL);
#endif
  {
   self->stopAutorepeat();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopAutorepeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_ccTouchMoved00
static int tolua_CocoStudio_CCControlStepper_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaximumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setMaximumValue00
static int tolua_CocoStudio_CCControlStepper_setMaximumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  double maximumValue = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaximumValue'", NULL);
#endif
  {
   self->setMaximumValue(maximumValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaximumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlusSprite of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setPlusSprite00
static int tolua_CocoStudio_CCControlStepper_setPlusSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlusSprite'", NULL);
#endif
  {
   self->setPlusSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlusSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinusLabel of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setMinusLabel00
static int tolua_CocoStudio_CCControlStepper_setMinusLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCLabelTTF* var = ((CCLabelTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinusLabel'", NULL);
#endif
  {
   self->setMinusLabel(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinusLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setValue00
static int tolua_CocoStudio_CCControlStepper_setValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  double value = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setValue'", NULL);
#endif
  {
   self->setValue(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStepValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setStepValue00
static int tolua_CocoStudio_CCControlStepper_setStepValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  double stepValue = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStepValue'", NULL);
#endif
  {
   self->setStepValue(stepValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStepValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlusSprite of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_getPlusSprite00
static int tolua_CocoStudio_CCControlStepper_getPlusSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlusSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getPlusSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlusSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_update00
static int tolua_CocoStudio_CCControlStepper_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinimumValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setMinimumValue00
static int tolua_CocoStudio_CCControlStepper_setMinimumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  double minimumValue = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinimumValue'", NULL);
#endif
  {
   self->setMinimumValue(minimumValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinimumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startAutorepeat of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_startAutorepeat00
static int tolua_CocoStudio_CCControlStepper_startAutorepeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startAutorepeat'", NULL);
#endif
  {
   self->startAutorepeat();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startAutorepeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithMinusSpriteAndPlusSprite of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_initWithMinusSpriteAndPlusSprite00
static int tolua_CocoStudio_CCControlStepper_initWithMinusSpriteAndPlusSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* minusSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* plusSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithMinusSpriteAndPlusSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithMinusSpriteAndPlusSprite(minusSprite,plusSprite);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithMinusSpriteAndPlusSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getValue of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_getValue00
static int tolua_CocoStudio_CCControlStepper_getValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getValue'", NULL);
#endif
  {
   double tolua_ret = (double)  self->getValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlusLabel of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_setPlusLabel00
static int tolua_CocoStudio_CCControlStepper_setPlusLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlStepper* self = (CCControlStepper*)  tolua_tousertype(tolua_S,1,0);
  CCLabelTTF* var = ((CCLabelTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlusLabel'", NULL);
#endif
  {
   self->setPlusLabel(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlusLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_new00
static int tolua_CocoStudio_CCControlStepper_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlStepper* tolua_ret = (CCControlStepper*)  Mtolua_new((CCControlStepper)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlStepper");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlStepper */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlStepper_new00_local
static int tolua_CocoStudio_CCControlStepper_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlStepper",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlStepper* tolua_ret = (CCControlStepper*)  Mtolua_new((CCControlStepper)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlStepper");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purge of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_purge00
static int tolua_CocoStudio_ActionManager_purge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionManager::purge();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shareManager of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_shareManager00
static int tolua_CocoStudio_ActionManager_shareManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionManager* tolua_ret = (ActionManager*)  ActionManager::shareManager();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shareManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionByName of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_getActionByName00
static int tolua_CocoStudio_ActionManager_getActionByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
  const char* jsonName = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* actionName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionByName'", NULL);
#endif
  {
   ActionObject* tolua_ret = (ActionObject*)  self->getActionByName(jsonName,actionName);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_delete00
static int tolua_CocoStudio_ActionManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBinary of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_initWithBinary00
static int tolua_CocoStudio_ActionManager_initWithBinary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCObject* root = ((CCObject*)  tolua_tousertype(tolua_S,3,0));
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,4,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBinary'", NULL);
#endif
  {
   self->initWithBinary(file,root,pCocoLoader,pCocoNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBinary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_new00
static int tolua_CocoStudio_ActionManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionManager* tolua_ret = (ActionManager*)  Mtolua_new((ActionManager)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_new00_local
static int tolua_CocoStudio_ActionManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionManager* tolua_ret = (ActionManager*)  Mtolua_new((ActionManager)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playActionByName of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_playActionByName00
static int tolua_CocoStudio_ActionManager_playActionByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
  const char* jsonName = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* actionName = ((const char*)  tolua_tostring(tolua_S,3,0));
  CCCallFunc* func = ((CCCallFunc*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playActionByName'", NULL);
#endif
  {
   ActionObject* tolua_ret = (ActionObject*)  self->playActionByName(jsonName,actionName,func);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playActionByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playActionByName of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_playActionByName01
static int tolua_CocoStudio_ActionManager_playActionByName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
  const char* jsonName = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* actionName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playActionByName'", NULL);
#endif
  {
   ActionObject* tolua_ret = (ActionObject*)  self->playActionByName(jsonName,actionName);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionObject");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_ActionManager_playActionByName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseActions of class  ActionManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionManager_releaseActions00
static int tolua_CocoStudio_ActionManager_releaseActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionManager* self = (ActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseActions'", NULL);
#endif
  {
   self->releaseActions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellTouched of class  CCTableViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDelegate_tableCellTouched00
static int tolua_CocoStudio_CCTableViewDelegate_tableCellTouched00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDelegate* self = (CCTableViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  CCTableViewCell* cell = ((CCTableViewCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellTouched'", NULL);
#endif
  {
   self->tableCellTouched(table,cell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellTouched'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellWillRecycle of class  CCTableViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDelegate_tableCellWillRecycle00
static int tolua_CocoStudio_CCTableViewDelegate_tableCellWillRecycle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDelegate* self = (CCTableViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  CCTableViewCell* cell = ((CCTableViewCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellWillRecycle'", NULL);
#endif
  {
   self->tableCellWillRecycle(table,cell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellWillRecycle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellHighlight of class  CCTableViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDelegate_tableCellHighlight00
static int tolua_CocoStudio_CCTableViewDelegate_tableCellHighlight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDelegate* self = (CCTableViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  CCTableViewCell* cell = ((CCTableViewCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellHighlight'", NULL);
#endif
  {
   self->tableCellHighlight(table,cell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellHighlight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellUnhighlight of class  CCTableViewDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDelegate_tableCellUnhighlight00
static int tolua_CocoStudio_CCTableViewDelegate_tableCellUnhighlight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCTableViewCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDelegate* self = (CCTableViewDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  CCTableViewCell* cell = ((CCTableViewCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellUnhighlight'", NULL);
#endif
  {
   self->tableCellUnhighlight(table,cell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellUnhighlight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_create00
static int tolua_CocoStudio_CCComAttribute_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComAttribute* tolua_ret = (CCComAttribute*)  CCComAttribute::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComAttribute");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_createInstance00
static int tolua_CocoStudio_CCComAttribute_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  CCComAttribute::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFloat of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_getFloat00
static int tolua_CocoStudio_CCComAttribute_getFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  float def = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getFloat(key,def);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBool of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_getBool00
static int tolua_CocoStudio_CCComAttribute_getBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool def = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBool'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getBool(key,def);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCString of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_setCString00
static int tolua_CocoStudio_CCComAttribute_setCString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* value = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCString'", NULL);
#endif
  {
   self->setCString(key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFloat of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_setFloat00
static int tolua_CocoStudio_CCComAttribute_setFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFloat'", NULL);
#endif
  {
   self->setFloat(key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCString of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_getCString00
static int tolua_CocoStudio_CCComAttribute_getCString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* def = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getCString(key,def);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_serialize00
static int tolua_CocoStudio_CCComAttribute_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  void* r = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->serialize(r);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInt of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_setInt00
static int tolua_CocoStudio_CCComAttribute_setInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInt'", NULL);
#endif
  {
   self->setInt(key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_delete00
static int tolua_CocoStudio_CCComAttribute_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parse of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_parse00
static int tolua_CocoStudio_CCComAttribute_parse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const string jsonPath = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parse'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->parse(jsonPath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)jsonPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInt of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_getInt00
static int tolua_CocoStudio_CCComAttribute_getInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  int def = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getInt(key,def);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_init00
static int tolua_CocoStudio_CCComAttribute_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBool of class  CCComAttribute */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComAttribute_setBool00
static int tolua_CocoStudio_CCComAttribute_setBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComAttribute",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComAttribute* self = (CCComAttribute*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBool'", NULL);
#endif
  {
   self->setBool(key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuinticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionInOut_create00
static int tolua_CocoStudio_CCEaseQuinticActionInOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuinticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuinticActionInOut* tolua_ret = (CCEaseQuinticActionInOut*)  CCEaseQuinticActionInOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuinticActionInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuinticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionInOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuinticActionInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionInOut* self = (CCEaseQuinticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuinticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionInOut_update00
static int tolua_CocoStudio_CCEaseQuinticActionInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionInOut* self = (CCEaseQuinticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuinticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionInOut_reverse00
static int tolua_CocoStudio_CCEaseQuinticActionInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionInOut* self = (CCEaseQuinticActionInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_create00
static int tolua_CocoStudio_LinearLayoutParameter_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LinearLayoutParameter* tolua_ret = (LinearLayoutParameter*)  LinearLayoutParameter::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LinearLayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_setGravity00
static int tolua_CocoStudio_LinearLayoutParameter_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LinearLayoutParameter* self = (LinearLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  LinearGravity gravity = ((LinearGravity) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'", NULL);
#endif
  {
   self->setGravity(gravity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_delete00
static int tolua_CocoStudio_LinearLayoutParameter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LinearLayoutParameter* self = (LinearLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createCloneInstance of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_createCloneInstance00
static int tolua_CocoStudio_LinearLayoutParameter_createCloneInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LinearLayoutParameter* self = (LinearLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createCloneInstance'", NULL);
#endif
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  self->createCloneInstance();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createCloneInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyProperties of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_copyProperties00
static int tolua_CocoStudio_LinearLayoutParameter_copyProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LinearLayoutParameter* self = (LinearLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  LayoutParameter* model = ((LayoutParameter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyProperties'", NULL);
#endif
  {
   self->copyProperties(model);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGravity of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_getGravity00
static int tolua_CocoStudio_LinearLayoutParameter_getGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LinearLayoutParameter* self = (LinearLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGravity'", NULL);
#endif
  {
   LinearGravity tolua_ret = (LinearGravity)  self->getGravity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_new00
static int tolua_CocoStudio_LinearLayoutParameter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LinearLayoutParameter* tolua_ret = (LinearLayoutParameter*)  Mtolua_new((LinearLayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LinearLayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LinearLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LinearLayoutParameter_new00_local
static int tolua_CocoStudio_LinearLayoutParameter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LinearLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LinearLayoutParameter* tolua_ret = (LinearLayoutParameter*)  Mtolua_new((LinearLayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LinearLayoutParameter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_create00
static int tolua_CocoStudio_TriggerObj_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerObj* tolua_ret = (TriggerObj*)  TriggerObj::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TriggerObj");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: detect of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_detect00
static int tolua_CocoStudio_TriggerObj_detect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'detect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->detect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'detect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_serialize00
static int tolua_CocoStudio_TriggerObj_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   self->serialize(pCocoLoader,pCocoNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnable of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_setEnable00
static int tolua_CocoStudio_TriggerObj_setEnable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
  bool bEnable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnable'", NULL);
#endif
  {
   self->setEnable(bEnable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getId of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_getId00
static int tolua_CocoStudio_TriggerObj_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getId'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_delete00
static int tolua_CocoStudio_TriggerObj_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_removeAll00
static int tolua_CocoStudio_TriggerObj_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_init00
static int tolua_CocoStudio_TriggerObj_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: done of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_done00
static int tolua_CocoStudio_TriggerObj_done00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerObj* self = (TriggerObj*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'done'", NULL);
#endif
  {
   self->done();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'done'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_new00
static int tolua_CocoStudio_TriggerObj_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerObj* tolua_ret = (TriggerObj*)  Mtolua_new((TriggerObj)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TriggerObj");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TriggerObj */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TriggerObj_new00_local
static int tolua_CocoStudio_TriggerObj_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerObj",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerObj* tolua_ret = (TriggerObj*)  Mtolua_new((TriggerObj)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"TriggerObj");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuinticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionIn_create00
static int tolua_CocoStudio_CCEaseQuinticActionIn_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuinticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuinticActionIn* tolua_ret = (CCEaseQuinticActionIn*)  CCEaseQuinticActionIn::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuinticActionIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuinticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionIn_copyWithZone00
static int tolua_CocoStudio_CCEaseQuinticActionIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionIn* self = (CCEaseQuinticActionIn*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuinticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionIn_update00
static int tolua_CocoStudio_CCEaseQuinticActionIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionIn* self = (CCEaseQuinticActionIn*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuinticActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuinticActionIn_reverse00
static int tolua_CocoStudio_CCEaseQuinticActionIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuinticActionIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuinticActionIn* self = (CCEaseQuinticActionIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_create00
static int tolua_CocoStudio_LayoutParameter_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  LayoutParameter::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_clone00
static int tolua_CocoStudio_LayoutParameter_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutType of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_getLayoutType00
static int tolua_CocoStudio_LayoutParameter_getLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutType'", NULL);
#endif
  {
   LayoutParameterType tolua_ret = (LayoutParameterType)  self->getLayoutType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMargin of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_getMargin00
static int tolua_CocoStudio_LayoutParameter_getMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMargin'", NULL);
#endif
  {
   const Margin& tolua_ret = (const Margin&)  self->getMargin();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Margin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createCloneInstance of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_createCloneInstance00
static int tolua_CocoStudio_LayoutParameter_createCloneInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createCloneInstance'", NULL);
#endif
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  self->createCloneInstance();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createCloneInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyProperties of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_copyProperties00
static int tolua_CocoStudio_LayoutParameter_copyProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  LayoutParameter* model = ((LayoutParameter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyProperties'", NULL);
#endif
  {
   self->copyProperties(model);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMargin of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_setMargin00
static int tolua_CocoStudio_LayoutParameter_setMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Margin",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  const Margin* margin = ((const Margin*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMargin'", NULL);
#endif
  {
   self->setMargin(*margin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_new00
static int tolua_CocoStudio_LayoutParameter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  Mtolua_new((LayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_new00_local
static int tolua_CocoStudio_LayoutParameter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  Mtolua_new((LayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LayoutParameter_delete00
static int tolua_CocoStudio_LayoutParameter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LayoutParameter* self = (LayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroyInstance of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_destroyInstance00
static int tolua_CocoStudio_ActionTimelineCache_destroyInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocostudio::timeline::ActionTimelineCache::destroyInstance();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroyInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInstance of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_getInstance00
static int tolua_CocoStudio_ActionTimelineCache_getInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
    cocostudio::timeline::ActionTimelineCache* tolua_ret = ( cocostudio::timeline::ActionTimelineCache*)cocostudio::timeline::ActionTimelineCache::getInstance();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionTimelineCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createAction of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_createAction00
static int tolua_CocoStudio_ActionTimelineCache_createAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
  const string fileName = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createAction'", NULL);
#endif
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->createAction(fileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_delete00
static int tolua_CocoStudio_ActionTimelineCache_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purge of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_purge00
static int tolua_CocoStudio_ActionTimelineCache_purge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'purge'", NULL);
#endif
  {
   self->purge();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_init00
static int tolua_CocoStudio_ActionTimelineCache_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   self->init();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadAnimationActionWithContent of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithContent00
static int tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithContent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
  const string fileName = ((const string)  tolua_tocppstring(tolua_S,2,0));
  const string content = ((const string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadAnimationActionWithContent'", NULL);
#endif
  {
   cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->loadAnimationActionWithContent(fileName,content);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
   tolua_pushcppstring(tolua_S,(const char*)fileName);
   tolua_pushcppstring(tolua_S,(const char*)content);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadAnimationActionWithContent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadAnimationActionWithFile of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithFile00
static int tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
  const string fileName = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadAnimationActionWithFile'", NULL);
#endif
  {
    cocostudio::timeline::ActionTimeline* tolua_ret = (cocostudio::timeline::ActionTimeline*)  self->loadAnimationActionWithFile(fileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ActionTimeline");
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadAnimationActionWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAction of class  ActionTimelineCache */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionTimelineCache_removeAction00
static int tolua_CocoStudio_ActionTimelineCache_removeAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionTimelineCache",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   cocostudio::timeline::ActionTimelineCache* self = (cocostudio::timeline::ActionTimelineCache*)  tolua_tousertype(tolua_S,1,0);
  const string fileName = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAction'", NULL);
#endif
  {
   self->removeAction(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RGBfromHSV of class  CCControlUtils */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlUtils_RGBfromHSV00
static int tolua_CocoStudio_CCControlUtils_RGBfromHSV00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlUtils",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"HSV",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HSV value = *((HSV*)  tolua_tousertype(tolua_S,2,0));
  {
   RGBA tolua_ret = (RGBA)  CCControlUtils::RGBfromHSV(value);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((RGBA)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"RGBA");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(RGBA));
     tolua_pushusertype(tolua_S,tolua_obj,"RGBA");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RGBfromHSV'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectUnion of class  CCControlUtils */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlUtils_CCRectUnion00
static int tolua_CocoStudio_CCControlUtils_CCRectUnion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlUtils",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CCRect* src1 = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
  const CCRect* src2 = ((const CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   CCRect tolua_ret = (CCRect)  CCControlUtils::CCRectUnion(*src1,*src2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectUnion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteToTargetWithPosAndAnchor of class  CCControlUtils */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlUtils_addSpriteToTargetWithPosAndAnchor00
static int tolua_CocoStudio_CCControlUtils_addSpriteToTargetWithPosAndAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlUtils",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* spriteName = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,3,0));
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,4,0));
  CCPoint anchor = *((CCPoint*)  tolua_tousertype(tolua_S,5,0));
  {
   CCSprite* tolua_ret = (CCSprite*)  CCControlUtils::addSpriteToTargetWithPosAndAnchor(spriteName,target,pos,anchor);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteToTargetWithPosAndAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HSVfromRGB of class  CCControlUtils */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlUtils_HSVfromRGB00
static int tolua_CocoStudio_CCControlUtils_HSVfromRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlUtils",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"RGBA",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RGBA value = *((RGBA*)  tolua_tousertype(tolua_S,2,0));
  {
   HSV tolua_ret = (HSV)  CCControlUtils::HSVfromRGB(value);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((HSV)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"HSV");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(HSV));
     tolua_pushusertype(tolua_S,tolua_obj,"HSV");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HSVfromRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  ScrollInnerContainer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollInnerContainer_create00
static int tolua_CocoStudio_ScrollInnerContainer_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollInnerContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollInnerContainer* tolua_ret = (ScrollInnerContainer*)  ScrollInnerContainer::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollInnerContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ScrollInnerContainer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollInnerContainer_delete00
static int tolua_CocoStudio_ScrollInnerContainer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollInnerContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollInnerContainer* self = (ScrollInnerContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutSize of class  ScrollInnerContainer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollInnerContainer_getLayoutSize00
static int tolua_CocoStudio_ScrollInnerContainer_getLayoutSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScrollInnerContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScrollInnerContainer* self = (ScrollInnerContainer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getLayoutSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ScrollInnerContainer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollInnerContainer_new00
static int tolua_CocoStudio_ScrollInnerContainer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollInnerContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollInnerContainer* tolua_ret = (ScrollInnerContainer*)  Mtolua_new((ScrollInnerContainer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollInnerContainer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ScrollInnerContainer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ScrollInnerContainer_new00_local
static int tolua_CocoStudio_ScrollInnerContainer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScrollInnerContainer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScrollInnerContainer* tolua_ret = (ScrollInnerContainer*)  Mtolua_new((ScrollInnerContainer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScrollInnerContainer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_doesAdjustBackgroundImage of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_get_CCControlButton_m_doesAdjustBackgroundImage
static int tolua_get_CCControlButton_m_doesAdjustBackgroundImage(lua_State* tolua_S)
{
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_doesAdjustBackgroundImage'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_doesAdjustBackgroundImage);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_doesAdjustBackgroundImage of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_set_CCControlButton_m_doesAdjustBackgroundImage
static int tolua_set_CCControlButton_m_doesAdjustBackgroundImage(lua_State* tolua_S)
{
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_doesAdjustBackgroundImage'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_doesAdjustBackgroundImage = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_create00
static int tolua_CocoStudio_CCControlButton_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  string title = ((string)  tolua_tocppstring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   CCControlButton* tolua_ret = (CCControlButton*)  CCControlButton::create(title,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_create01
static int tolua_CocoStudio_CCControlButton_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCNode* label = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCScale9Sprite* backgroundSprite = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,3,0));
  {
   CCControlButton* tolua_ret = (CCControlButton*)  CCControlButton::create(label,backgroundSprite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCControlButton_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_create02
static int tolua_CocoStudio_CCControlButton_create02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* sprite = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,2,0));
  {
   CCControlButton* tolua_ret = (CCControlButton*)  CCControlButton::create(sprite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCControlButton_create01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_create03
static int tolua_CocoStudio_CCControlButton_create03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCControlButton* tolua_ret = (CCControlButton*)  CCControlButton::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCControlButton_create02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleColorDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleColorDispatchTable00
static int tolua_CocoStudio_CCControlButton_setTitleColorDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* var = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleColorDispatchTable'", NULL);
#endif
  {
   self->setTitleColorDispatchTable(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleColorDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZoomOnTouchDown of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setZoomOnTouchDown00
static int tolua_CocoStudio_CCControlButton_setZoomOnTouchDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZoomOnTouchDown'", NULL);
#endif
  {
   self->setZoomOnTouchDown(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZoomOnTouchDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelected of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setSelected00
static int tolua_CocoStudio_CCControlButton_setSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelected'", NULL);
#endif
  {
   self->setSelected(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleLabel of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleLabel00
static int tolua_CocoStudio_CCControlButton_setTitleLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCNode* var = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleLabel'", NULL);
#endif
  {
   self->setTitleLabel(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_ccTouchBegan00
static int tolua_CocoStudio_CCControlButton_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleTTFSizeForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleTTFSizeForState00
static int tolua_CocoStudio_CCControlButton_setTitleTTFSizeForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleTTFSizeForState'", NULL);
#endif
  {
   self->setTitleTTFSizeForState(size,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleTTFSizeForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAdjustBackgroundImage of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setAdjustBackgroundImage00
static int tolua_CocoStudio_CCControlButton_setAdjustBackgroundImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  bool adjustBackgroundImage = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAdjustBackgroundImage'", NULL);
#endif
  {
   self->setAdjustBackgroundImage(adjustBackgroundImage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAdjustBackgroundImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_ccTouchEnded00
static int tolua_CocoStudio_CCControlButton_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHighlighted of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setHighlighted00
static int tolua_CocoStudio_CCControlButton_setHighlighted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHighlighted'", NULL);
#endif
  {
   self->setHighlighted(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHighlighted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundSpriteDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setBackgroundSpriteDispatchTable00
static int tolua_CocoStudio_CCControlButton_setBackgroundSpriteDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* var = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundSpriteDispatchTable'", NULL);
#endif
  {
   self->setBackgroundSpriteDispatchTable(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundSpriteDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleLabelForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleLabelForState00
static int tolua_CocoStudio_CCControlButton_setTitleLabelForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCNode* label = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleLabelForState'", NULL);
#endif
  {
   self->setTitleLabelForState(label,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleLabelForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleForState00
static int tolua_CocoStudio_CCControlButton_setTitleForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCString",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCString* title = ((CCString*)  tolua_tousertype(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleForState'", NULL);
#endif
  {
   self->setTitleForState(title,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleDispatchTable00
static int tolua_CocoStudio_CCControlButton_getTitleDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleDispatchTable'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getTitleDispatchTable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLabelAnchorPoint of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setLabelAnchorPoint00
static int tolua_CocoStudio_CCControlButton_setLabelAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCPoint var = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLabelAnchorPoint'", NULL);
#endif
  {
   self->setLabelAnchorPoint(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLabelAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_ccTouchCancelled00
static int tolua_CocoStudio_CCControlButton_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLabelAnchorPoint of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getLabelAnchorPoint00
static int tolua_CocoStudio_CCControlButton_getLabelAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLabelAnchorPoint'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getLabelAnchorPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLabelAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBackgroundSprite of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_initWithBackgroundSprite00
static int tolua_CocoStudio_CCControlButton_initWithBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCScale9Sprite* sprite = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBackgroundSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithBackgroundSprite(sprite);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleTTFSizeForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleTTFSizeForState00
static int tolua_CocoStudio_CCControlButton_getTitleTTFSizeForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleTTFSizeForState'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTitleTTFSizeForState(state);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleTTFSizeForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleDispatchTable00
static int tolua_CocoStudio_CCControlButton_setTitleDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* var = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleDispatchTable'", NULL);
#endif
  {
   self->setTitleDispatchTable(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPushed of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_isPushed00
static int tolua_CocoStudio_CCControlButton_isPushed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPushed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPushed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPushed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setOpacity00
static int tolua_CocoStudio_CCControlButton_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned char var = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_delete00
static int tolua_CocoStudio_CCControlButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_init00
static int tolua_CocoStudio_CCControlButton_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleTTFForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleTTFForState00
static int tolua_CocoStudio_CCControlButton_setTitleTTFForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  const char* fntFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleTTFForState'", NULL);
#endif
  {
   self->setTitleTTFForState(fntFile,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleTTFForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPreferredSize of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setPreferredSize00
static int tolua_CocoStudio_CCControlButton_setPreferredSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCSize var = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPreferredSize'", NULL);
#endif
  {
   self->setPreferredSize(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPreferredSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHorizontalOrigin of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getHorizontalOrigin00
static int tolua_CocoStudio_CCControlButton_getHorizontalOrigin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHorizontalOrigin'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getHorizontalOrigin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHorizontalOrigin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_ccTouchMoved00
static int tolua_CocoStudio_CCControlButton_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getOpacity00
static int tolua_CocoStudio_CCControlButton_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentTitleColor of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getCurrentTitleColor00
static int tolua_CocoStudio_CCControlButton_getCurrentTitleColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentTitleColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getCurrentTitleColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentTitleColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleColorDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleColorDispatchTable00
static int tolua_CocoStudio_CCControlButton_getTitleColorDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleColorDispatchTable'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getTitleColorDispatchTable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleColorDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setEnabled00
static int tolua_CocoStudio_CCControlButton_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackgroundSpriteForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getBackgroundSpriteForState00
static int tolua_CocoStudio_CCControlButton_getBackgroundSpriteForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackgroundSpriteForState'", NULL);
#endif
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  self->getBackgroundSpriteForState(state);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackgroundSpriteForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getColor00
static int tolua_CocoStudio_CCControlButton_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMargins of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setMargins00
static int tolua_CocoStudio_CCControlButton_setMargins00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  int marginH = ((int)  tolua_tonumber(tolua_S,2,0));
  int marginV = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMargins'", NULL);
#endif
  {
   self->setMargins(marginH,marginV);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMargins'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needsLayout of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_needsLayout00
static int tolua_CocoStudio_CCControlButton_needsLayout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needsLayout'", NULL);
#endif
  {
   self->needsLayout();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needsLayout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTitleAndFontNameAndFontSize of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_initWithTitleAndFontNameAndFontSize00
static int tolua_CocoStudio_CCControlButton_initWithTitleAndFontNameAndFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  string title = ((string)  tolua_tocppstring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTitleAndFontNameAndFontSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTitleAndFontNameAndFontSize(title,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTitleAndFontNameAndFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleBMFontForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleBMFontForState00
static int tolua_CocoStudio_CCControlButton_setTitleBMFontForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  const char* fntFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleBMFontForState'", NULL);
#endif
  {
   self->setTitleBMFontForState(fntFile,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleBMFontForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleTTFForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleTTFForState00
static int tolua_CocoStudio_CCControlButton_getTitleTTFForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleTTFForState'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTitleTTFForState(state);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleTTFForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackgroundSprite of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getBackgroundSprite00
static int tolua_CocoStudio_CCControlButton_getBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackgroundSprite'", NULL);
#endif
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  self->getBackgroundSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleColorForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleColorForState00
static int tolua_CocoStudio_CCControlButton_getTitleColorForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleColorForState'", NULL);
#endif
  {
   ccColor3B tolua_ret = (ccColor3B)  self->getTitleColorForState(state);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleColorForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleColorForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleColorForState00
static int tolua_CocoStudio_CCControlButton_setTitleColorForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  ccColor3B color = *((ccColor3B*)  tolua_tousertype(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleColorForState'", NULL);
#endif
  {
   self->setTitleColorForState(color,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleColorForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: doesAdjustBackgroundImage of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_doesAdjustBackgroundImage00
static int tolua_CocoStudio_CCControlButton_doesAdjustBackgroundImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'doesAdjustBackgroundImage'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->doesAdjustBackgroundImage();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'doesAdjustBackgroundImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundSpriteFrameForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setBackgroundSpriteFrameForState00
static int tolua_CocoStudio_CCControlButton_setBackgroundSpriteFrameForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundSpriteFrameForState'", NULL);
#endif
  {
   self->setBackgroundSpriteFrameForState(spriteFrame,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundSpriteFrameForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundSpriteForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setBackgroundSpriteForState00
static int tolua_CocoStudio_CCControlButton_setBackgroundSpriteForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCScale9Sprite* sprite = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,2,0));
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundSpriteForState'", NULL);
#endif
  {
   self->setBackgroundSpriteForState(sprite,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundSpriteForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setColor00
static int tolua_CocoStudio_CCControlButton_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* tolua_var_1 = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*tolua_var_1);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleLabelDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleLabelDispatchTable00
static int tolua_CocoStudio_CCControlButton_getTitleLabelDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleLabelDispatchTable'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getTitleLabelDispatchTable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleLabelDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithLabelAndBackgroundSprite of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_initWithLabelAndBackgroundSprite00
static int tolua_CocoStudio_CCControlButton_initWithLabelAndBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCNode* label = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCScale9Sprite* backgroundSprite = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithLabelAndBackgroundSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithLabelAndBackgroundSprite(label,backgroundSprite);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithLabelAndBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTitleLabelDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setTitleLabelDispatchTable00
static int tolua_CocoStudio_CCControlButton_setTitleLabelDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary* var = ((CCDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTitleLabelDispatchTable'", NULL);
#endif
  {
   self->setTitleLabelDispatchTable(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitleLabelDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleLabel of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleLabel00
static int tolua_CocoStudio_CCControlButton_getTitleLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleLabel'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getTitleLabel();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPreferredSize of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getPreferredSize00
static int tolua_CocoStudio_CCControlButton_getPreferredSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPreferredSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getPreferredSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPreferredSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVerticalMargin of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getVerticalMargin00
static int tolua_CocoStudio_CCControlButton_getVerticalMargin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVerticalMargin'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getVerticalMargin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVerticalMargin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackgroundSpriteDispatchTable of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getBackgroundSpriteDispatchTable00
static int tolua_CocoStudio_CCControlButton_getBackgroundSpriteDispatchTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackgroundSpriteDispatchTable'", NULL);
#endif
  {
   CCDictionary* tolua_ret = (CCDictionary*)  self->getBackgroundSpriteDispatchTable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackgroundSpriteDispatchTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleLabelForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleLabelForState00
static int tolua_CocoStudio_CCControlButton_getTitleLabelForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleLabelForState'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getTitleLabelForState(state);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleLabelForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_new00
static int tolua_CocoStudio_CCControlButton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlButton* tolua_ret = (CCControlButton*)  Mtolua_new((CCControlButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_new00_local
static int tolua_CocoStudio_CCControlButton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlButton* tolua_ret = (CCControlButton*)  Mtolua_new((CCControlButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlButton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentTitle of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getCurrentTitle00
static int tolua_CocoStudio_CCControlButton_getCurrentTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentTitle'", NULL);
#endif
  {
   CCString* tolua_ret = (CCString*)  self->getCurrentTitle();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleBMFontForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleBMFontForState00
static int tolua_CocoStudio_CCControlButton_getTitleBMFontForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleBMFontForState'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTitleBMFontForState(state);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleBMFontForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundSprite of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_setBackgroundSprite00
static int tolua_CocoStudio_CCControlButton_setBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  CCScale9Sprite* var = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundSprite'", NULL);
#endif
  {
   self->setBackgroundSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZoomOnTouchDown of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getZoomOnTouchDown00
static int tolua_CocoStudio_CCControlButton_getZoomOnTouchDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZoomOnTouchDown'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getZoomOnTouchDown();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZoomOnTouchDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTitleForState of class  CCControlButton */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlButton_getTitleForState00
static int tolua_CocoStudio_CCControlButton_getTitleForState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlButton* self = (CCControlButton*)  tolua_tousertype(tolua_S,1,0);
  unsigned int state = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTitleForState'", NULL);
#endif
  {
   CCString* tolua_ret = (CCString*)  self->getTitleForState(state);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTitleForState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_clone00
static int tolua_CocoStudio_Frame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNode of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_setNode00
static int tolua_CocoStudio_Frame_setNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNode'", NULL);
#endif
  {
   self->setNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_onEnter00
static int tolua_CocoStudio_Frame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTimeline of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_setTimeline00
static int tolua_CocoStudio_Frame_setTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Timeline",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  cocostudio::timeline::Timeline* timeline = ((cocostudio::timeline::Timeline*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTimeline'", NULL);
#endif
  {
   self->setTimeline(timeline);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_delete00
static int tolua_CocoStudio_Frame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameIndex of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_getFrameIndex00
static int tolua_CocoStudio_Frame_getFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameIndex'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_apply00
static int tolua_CocoStudio_Frame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTween of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_isTween00
static int tolua_CocoStudio_Frame_isTween00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTween'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTween();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTween'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameIndex of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_setFrameIndex00
static int tolua_CocoStudio_Frame_setFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  unsigned int frameIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameIndex'", NULL);
#endif
  {
   self->setFrameIndex(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTween of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_setTween00
static int tolua_CocoStudio_Frame_setTween00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
  bool tween = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTween'", NULL);
#endif
  {
   self->setTween(tween);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTween'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTimeline of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_getTimeline00
static int tolua_CocoStudio_Frame_getTimeline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTimeline'", NULL);
#endif
  {
   Timeline* tolua_ret = (Timeline*)  self->getTimeline();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Timeline");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNode of class  Frame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Frame_getNode00
static int tolua_CocoStudio_Frame_getNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Frame* self = (Frame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNode'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseCircleActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionIn_create00
static int tolua_CocoStudio_CCEaseCircleActionIn_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCircleActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCircleActionIn* tolua_ret = (CCEaseCircleActionIn*)  CCEaseCircleActionIn::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCircleActionIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCircleActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionIn_copyWithZone00
static int tolua_CocoStudio_CCEaseCircleActionIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionIn* self = (CCEaseCircleActionIn*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCircleActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionIn_update00
static int tolua_CocoStudio_CCEaseCircleActionIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionIn* self = (CCEaseCircleActionIn*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCircleActionIn */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionIn_reverse00
static int tolua_CocoStudio_CCEaseCircleActionIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionIn* self = (CCEaseCircleActionIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_create00
static int tolua_CocoStudio_CCControlSwitch_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSprite* maskSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* onSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* offSprite = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
  CCSprite* thumbSprite = ((CCSprite*)  tolua_tousertype(tolua_S,5,0));
  CCLabelTTF* onLabel = ((CCLabelTTF*)  tolua_tousertype(tolua_S,6,0));
  CCLabelTTF* offLabel = ((CCLabelTTF*)  tolua_tousertype(tolua_S,7,0));
  {
   CCControlSwitch* tolua_ret = (CCControlSwitch*)  CCControlSwitch::create(maskSprite,onSprite,offSprite,thumbSprite,onLabel,offLabel);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSwitch");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_create01
static int tolua_CocoStudio_CCControlSwitch_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCSprite* maskSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* onSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* offSprite = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
  CCSprite* thumbSprite = ((CCSprite*)  tolua_tousertype(tolua_S,5,0));
  {
   CCControlSwitch* tolua_ret = (CCControlSwitch*)  CCControlSwitch::create(maskSprite,onSprite,offSprite,thumbSprite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSwitch");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCControlSwitch_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_setEnabled00
static int tolua_CocoStudio_CCControlSwitch_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOn of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_setOn00
static int tolua_CocoStudio_CCControlSwitch_setOn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  bool isOn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOn'", NULL);
#endif
  {
   self->setOn(isOn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOn of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_setOn01
static int tolua_CocoStudio_CCControlSwitch_setOn01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  bool isOn = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool animated = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOn'", NULL);
#endif
  {
   self->setOn(isOn,animated);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCControlSwitch_setOn00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_ccTouchBegan00
static int tolua_CocoStudio_CCControlSwitch_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_new00
static int tolua_CocoStudio_CCControlSwitch_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlSwitch* tolua_ret = (CCControlSwitch*)  Mtolua_new((CCControlSwitch)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSwitch");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_new00_local
static int tolua_CocoStudio_CCControlSwitch_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlSwitch* tolua_ret = (CCControlSwitch*)  Mtolua_new((CCControlSwitch)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSwitch");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOn of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_isOn00
static int tolua_CocoStudio_CCControlSwitch_isOn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_ccTouchCancelled00
static int tolua_CocoStudio_CCControlSwitch_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_ccTouchEnded00
static int tolua_CocoStudio_CCControlSwitch_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithMaskSprite of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_initWithMaskSprite00
static int tolua_CocoStudio_CCControlSwitch_initWithMaskSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* maskSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* onSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* offSprite = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
  CCSprite* thumbSprite = ((CCSprite*)  tolua_tousertype(tolua_S,5,0));
  CCLabelTTF* onLabel = ((CCLabelTTF*)  tolua_tousertype(tolua_S,6,0));
  CCLabelTTF* offLabel = ((CCLabelTTF*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithMaskSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithMaskSprite(maskSprite,onSprite,offSprite,thumbSprite,onLabel,offLabel);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithMaskSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithMaskSprite of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_initWithMaskSprite01
static int tolua_CocoStudio_CCControlSwitch_initWithMaskSprite01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* maskSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* onSprite = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* offSprite = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
  CCSprite* thumbSprite = ((CCSprite*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithMaskSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithMaskSprite(maskSprite,onSprite,offSprite,thumbSprite);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCControlSwitch_initWithMaskSprite00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_ccTouchMoved00
static int tolua_CocoStudio_CCControlSwitch_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoved of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_hasMoved00
static int tolua_CocoStudio_CCControlSwitch_hasMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoved'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoved();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_delete00
static int tolua_CocoStudio_CCControlSwitch_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: locationFromTouch of class  CCControlSwitch */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSwitch_locationFromTouch00
static int tolua_CocoStudio_CCControlSwitch_locationFromTouch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSwitch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSwitch* self = (CCControlSwitch*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'locationFromTouch'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->locationFromTouch(touch);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'locationFromTouch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RichElementImage */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementImage_create00
static int tolua_CocoStudio_RichElementImage_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  const char* filePath = ((const char*)  tolua_tostring(tolua_S,5,0));
  {
   RichElementImage* tolua_ret = (RichElementImage*)  RichElementImage::create(tag,*color,opacity,filePath);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  RichElementImage */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementImage_init00
static int tolua_CocoStudio_RichElementImage_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementImage* self = (RichElementImage*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  const char* filePath = ((const char*)  tolua_tostring(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(tag,*color,opacity,filePath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RichElementImage */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementImage_delete00
static int tolua_CocoStudio_RichElementImage_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementImage* self = (RichElementImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RichElementImage */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementImage_new00
static int tolua_CocoStudio_RichElementImage_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementImage* tolua_ret = (RichElementImage*)  Mtolua_new((RichElementImage)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RichElementImage */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementImage_new00_local
static int tolua_CocoStudio_RichElementImage_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementImage* tolua_ret = (RichElementImage*)  Mtolua_new((RichElementImage)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementImage");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRawDuration of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getRawDuration00
static int tolua_CocoStudio_CCProcessBase_getRawDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRawDuration'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRawDuration();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRawDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentPercent of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setCurrentPercent00
static int tolua_CocoStudio_CCProcessBase_setCurrentPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentPercent'", NULL);
#endif
  {
   self->setCurrentPercent(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsPause of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getIsPause00
static int tolua_CocoStudio_CCProcessBase_getIsPause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsPause'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsPause();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsPause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_pause00
static int tolua_CocoStudio_CCProcessBase_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentFrameIndex of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getCurrentFrameIndex00
static int tolua_CocoStudio_CCProcessBase_getCurrentFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentFrameIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurrentFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_delete00
static int tolua_CocoStudio_CCProcessBase_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: play of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_play00
static int tolua_CocoStudio_CCProcessBase_play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  int durationTo = ((int)  tolua_tonumber(tolua_S,2,0));
  int durationTween = ((int)  tolua_tonumber(tolua_S,3,0));
  int loop = ((int)  tolua_tonumber(tolua_S,4,0));
  int tweenEasing = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'play'", NULL);
#endif
  {
   self->play(durationTo,durationTween,loop,tweenEasing);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentPercent of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getCurrentPercent00
static int tolua_CocoStudio_CCProcessBase_getCurrentPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCurrentPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_resume00
static int tolua_CocoStudio_CCProcessBase_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsComplete of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setIsComplete00
static int tolua_CocoStudio_CCProcessBase_setIsComplete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsComplete'", NULL);
#endif
  {
   self->setIsComplete(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsComplete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_stop00
static int tolua_CocoStudio_CCProcessBase_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_update00
static int tolua_CocoStudio_CCProcessBase_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsComplete of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getIsComplete00
static int tolua_CocoStudio_CCProcessBase_getIsComplete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsComplete'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsComplete();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsComplete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProcessScale of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getProcessScale00
static int tolua_CocoStudio_CCProcessBase_getProcessScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProcessScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getProcessScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProcessScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRawDuration of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setRawDuration00
static int tolua_CocoStudio_CCProcessBase_setRawDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  int var = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRawDuration'", NULL);
#endif
  {
   self->setRawDuration(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRawDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsPause of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setIsPause00
static int tolua_CocoStudio_CCProcessBase_setIsPause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsPause'", NULL);
#endif
  {
   self->setIsPause(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsPause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_new00
static int tolua_CocoStudio_CCProcessBase_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCProcessBase* tolua_ret = (CCProcessBase*)  Mtolua_new((CCProcessBase)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCProcessBase");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_new00_local
static int tolua_CocoStudio_CCProcessBase_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCProcessBase* tolua_ret = (CCProcessBase*)  Mtolua_new((CCProcessBase)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCProcessBase");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsPlaying of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_getIsPlaying00
static int tolua_CocoStudio_CCProcessBase_getIsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProcessScale of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setProcessScale00
static int tolua_CocoStudio_CCProcessBase_setProcessScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProcessScale'", NULL);
#endif
  {
   self->setProcessScale(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProcessScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsPlaying of class  CCProcessBase */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCProcessBase_setIsPlaying00
static int tolua_CocoStudio_CCProcessBase_setIsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCProcessBase",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCProcessBase* self = (CCProcessBase*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsPlaying'", NULL);
#endif
  {
   self->setIsPlaying(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrame of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_addFrame00
static int tolua_CocoStudio_ActionNode_addFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  ActionFrame* frame = ((ActionFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrame'", NULL);
#endif
  {
   self->addFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObject of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_setObject00
static int tolua_CocoStudio_ActionNode_setObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  CCObject* node = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObject'", NULL);
#endif
  {
   self->setObject(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUnitTime of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_setUnitTime00
static int tolua_CocoStudio_ActionNode_setUnitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUnitTime'", NULL);
#endif
  {
   self->setUnitTime(fTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUnitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateActionToTimeLine of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_updateActionToTimeLine00
static int tolua_CocoStudio_ActionNode_updateActionToTimeLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateActionToTimeLine'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->updateActionToTimeLine(fTime);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateActionToTimeLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertFrame of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_insertFrame00
static int tolua_CocoStudio_ActionNode_insertFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  ActionFrame* frame = ((ActionFrame*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertFrame'", NULL);
#endif
  {
   self->insertFrame(index,frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActionTag of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_setActionTag00
static int tolua_CocoStudio_ActionNode_setActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActionTag'", NULL);
#endif
  {
   self->setActionTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteFrame of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_deleteFrame00
static int tolua_CocoStudio_ActionNode_deleteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  ActionFrame* frame = ((ActionFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteFrame'", NULL);
#endif
  {
   self->deleteFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_delete00
static int tolua_CocoStudio_ActionNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObject of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_getObject00
static int tolua_CocoStudio_ActionNode_getObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObject'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->getObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFirstFrameIndex of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_getFirstFrameIndex00
static int tolua_CocoStudio_ActionNode_getFirstFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFirstFrameIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getFirstFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFirstFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBinary of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_initWithBinary00
static int tolua_CocoStudio_ActionNode_initWithBinary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
  CCObject* root = ((CCObject*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBinary'", NULL);
#endif
  {
   self->initWithBinary(pCocoLoader,pCocoNode,root);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBinary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isActionDoneOnce of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_isActionDoneOnce00
static int tolua_CocoStudio_ActionNode_isActionDoneOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isActionDoneOnce'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isActionDoneOnce();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActionDoneOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionTag of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_getActionTag00
static int tolua_CocoStudio_ActionNode_getActionTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getActionTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_new00
static int tolua_CocoStudio_ActionNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionNode* tolua_ret = (ActionNode*)  Mtolua_new((ActionNode)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_new00_local
static int tolua_CocoStudio_ActionNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionNode* tolua_ret = (ActionNode*)  Mtolua_new((ActionNode)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLastFrameIndex of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_getLastFrameIndex00
static int tolua_CocoStudio_ActionNode_getLastFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLastFrameIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getLastFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnitTime of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_getUnitTime00
static int tolua_CocoStudio_ActionNode_getUnitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnitTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getUnitTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopAction of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_stopAction00
static int tolua_CocoStudio_ActionNode_stopAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopAction'", NULL);
#endif
  {
   self->stopAction();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: playAction of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_playAction00
static int tolua_CocoStudio_ActionNode_playAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'playAction'", NULL);
#endif
  {
   self->playAction();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearAllFrame of class  ActionNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionNode_clearAllFrame00
static int tolua_CocoStudio_ActionNode_clearAllFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionNode* self = (ActionNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearAllFrame'", NULL);
#endif
  {
   self->clearAllFrame();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearAllFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editBoxReturn of class  CCEditBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBoxDelegate_editBoxReturn00
static int tolua_CocoStudio_CCEditBoxDelegate_editBoxReturn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBoxDelegate* self = (CCEditBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCEditBox* editBox = ((CCEditBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editBoxReturn'", NULL);
#endif
  {
   self->editBoxReturn(editBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editBoxReturn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editBoxEditingDidEnd of class  CCEditBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidEnd00
static int tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBoxDelegate* self = (CCEditBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCEditBox* editBox = ((CCEditBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editBoxEditingDidEnd'", NULL);
#endif
  {
   self->editBoxEditingDidEnd(editBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editBoxEditingDidEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editBoxTextChanged of class  CCEditBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBoxDelegate_editBoxTextChanged00
static int tolua_CocoStudio_CCEditBoxDelegate_editBoxTextChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCEditBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBoxDelegate* self = (CCEditBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCEditBox* editBox = ((CCEditBox*)  tolua_tousertype(tolua_S,2,0));
  const string text = ((const string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editBoxTextChanged'", NULL);
#endif
  {
   self->editBoxTextChanged(editBox,text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editBoxTextChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editBoxEditingDidBegin of class  CCEditBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidBegin00
static int tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidBegin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBoxDelegate* self = (CCEditBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCEditBox* editBox = ((CCEditBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editBoxEditingDidBegin'", NULL);
#endif
  {
   self->editBoxEditingDidBegin(editBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editBoxEditingDidBegin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCEditBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBoxDelegate_delete00
static int tolua_CocoStudio_CCEditBoxDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBoxDelegate* self = (CCEditBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_create00
static int tolua_CocoStudio_CCScale9Sprite_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::create(file,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_create01
static int tolua_CocoStudio_CCScale9Sprite_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,4,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::create(file,rect,capInsets);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_create02
static int tolua_CocoStudio_CCScale9Sprite_create02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,2,0));
  const char* file = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::create(capInsets,file);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_create01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_create03
static int tolua_CocoStudio_CCScale9Sprite_create03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::create(file);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_create02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_create04
static int tolua_CocoStudio_CCScale9Sprite_create04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_create03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWithSpriteFrameName of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName00
static int tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* spriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::createWithSpriteFrameName(spriteFrameName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWithSpriteFrameName of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName01
static int tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* spriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::createWithSpriteFrameName(spriteFrameName,capInsets);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWithSpriteFrame of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame00
static int tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::createWithSpriteFrame(spriteFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createWithSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWithSpriteFrame of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame01
static int tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  CCScale9Sprite::createWithSpriteFrame(spriteFrame,capInsets);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsets of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getCapInsets00
static int tolua_CocoStudio_CCScale9Sprite_getCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsets'", NULL);
#endif
  {
   CCRect tolua_ret = (CCRect)  self->getCapInsets();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacityModifyRGB of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setOpacityModifyRGB00
static int tolua_CocoStudio_CCScale9Sprite_setOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacityModifyRGB'", NULL);
#endif
  {
   self->setOpacityModifyRGB(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsetTop of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setInsetTop00
static int tolua_CocoStudio_CCScale9Sprite_setInsetTop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsetTop'", NULL);
#endif
  {
   self->setInsetTop(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsetTop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateWithBatchNode of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_updateWithBatchNode00
static int tolua_CocoStudio_CCScale9Sprite_updateWithBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteBatchNode* batchnode = ((CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  bool rotated = ((bool)  tolua_toboolean(tolua_S,4,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateWithBatchNode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->updateWithBatchNode(batchnode,rect,rotated,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateWithBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsetBottom of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setInsetBottom00
static int tolua_CocoStudio_CCScale9Sprite_setInsetBottom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsetBottom'", NULL);
#endif
  {
   self->setInsetBottom(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsetBottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOpacityModifyRGB of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_isOpacityModifyRGB00
static int tolua_CocoStudio_CCScale9Sprite_isOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOpacityModifyRGB'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOpacityModifyRGB();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_visit00
static int tolua_CocoStudio_CCScale9Sprite_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrameName of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName00
static int tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const char* spriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrameName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrameName(spriteFrameName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrameName of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName01
static int tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const char* spriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrameName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrameName(spriteFrameName,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_delete00
static int tolua_CocoStudio_CCScale9Sprite_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplayedOpacity of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_updateDisplayedOpacity00
static int tolua_CocoStudio_CCScale9Sprite_updateDisplayedOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  unsigned char parentOpacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDisplayedOpacity'", NULL);
#endif
  {
   self->updateDisplayedOpacity(parentOpacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplayedOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_init00
static int tolua_CocoStudio_CCScale9Sprite_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPreferredSize of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setPreferredSize00
static int tolua_CocoStudio_CCScale9Sprite_setPreferredSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSize var = *((CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPreferredSize'", NULL);
#endif
  {
   self->setPreferredSize(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPreferredSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getOpacity00
static int tolua_CocoStudio_CCScale9Sprite_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpriteFrame of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setSpriteFrame00
static int tolua_CocoStudio_CCScale9Sprite_setSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpriteFrame'", NULL);
#endif
  {
   self->setSpriteFrame(spriteFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getColor00
static int tolua_CocoStudio_CCScale9Sprite_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBatchNode of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithBatchNode00
static int tolua_CocoStudio_CCScale9Sprite_initWithBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteBatchNode* batchnode = ((CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBatchNode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithBatchNode(batchnode,rect,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBatchNode of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithBatchNode01
static int tolua_CocoStudio_CCScale9Sprite_initWithBatchNode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteBatchNode* batchnode = ((CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  bool rotated = ((bool)  tolua_toboolean(tolua_S,4,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBatchNode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithBatchNode(batchnode,rect,rotated,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithBatchNode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsetBottom of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getInsetBottom00
static int tolua_CocoStudio_CCScale9Sprite_getInsetBottom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsetBottom'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getInsetBottom();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsetBottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizableSpriteWithCapInsets of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_resizableSpriteWithCapInsets00
static int tolua_CocoStudio_CCScale9Sprite_resizableSpriteWithCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizableSpriteWithCapInsets'", NULL);
#endif
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  self->resizableSpriteWithCapInsets(capInsets);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizableSpriteWithCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setOpacity00
static int tolua_CocoStudio_CCScale9Sprite_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSize of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setContentSize00
static int tolua_CocoStudio_CCScale9Sprite_setContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSize'", NULL);
#endif
  {
   self->setContentSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsetRight of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getInsetRight00
static int tolua_CocoStudio_CCScale9Sprite_getInsetRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsetRight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getInsetRight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsetRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOriginalSize of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getOriginalSize00
static int tolua_CocoStudio_CCScale9Sprite_getOriginalSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOriginalSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getOriginalSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOriginalSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithFile00
static int tolua_CocoStudio_CCScale9Sprite_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(file,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithFile01
static int tolua_CocoStudio_CCScale9Sprite_initWithFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  CCRect rect = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(file,rect,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithFile02
static int tolua_CocoStudio_CCScale9Sprite_initWithFile02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,2,0));
  const char* file = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(capInsets,file);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithFile01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithFile03
static int tolua_CocoStudio_CCScale9Sprite_initWithFile03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(file);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithFile02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setColor00
static int tolua_CocoStudio_CCScale9Sprite_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsetTop of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getInsetTop00
static int tolua_CocoStudio_CCScale9Sprite_getInsetTop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsetTop'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getInsetTop();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsetTop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsetLeft of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setInsetLeft00
static int tolua_CocoStudio_CCScale9Sprite_setInsetLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsetLeft'", NULL);
#endif
  {
   self->setInsetLeft(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsetLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrame of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame00
static int tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrame'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrame(spriteFrame);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrame of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame01
static int tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCSpriteFrame* spriteFrame = ((CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  CCRect capInsets = *((CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrame'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrame(spriteFrame,capInsets);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPreferredSize of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getPreferredSize00
static int tolua_CocoStudio_CCScale9Sprite_getPreferredSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPreferredSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getPreferredSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPreferredSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsets of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setCapInsets00
static int tolua_CocoStudio_CCScale9Sprite_setCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  CCRect var = *((CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsets'", NULL);
#endif
  {
   self->setCapInsets(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_new00
static int tolua_CocoStudio_CCScale9Sprite_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  Mtolua_new((CCScale9Sprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_new00_local
static int tolua_CocoStudio_CCScale9Sprite_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCScale9Sprite* tolua_ret = (CCScale9Sprite*)  Mtolua_new((CCScale9Sprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCScale9Sprite");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInsetLeft of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_getInsetLeft00
static int tolua_CocoStudio_CCScale9Sprite_getInsetLeft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInsetLeft'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getInsetLeft();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInsetLeft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDisplayedColor of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_updateDisplayedColor00
static int tolua_CocoStudio_CCScale9Sprite_updateDisplayedColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* parentColor = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDisplayedColor'", NULL);
#endif
  {
   self->updateDisplayedColor(*parentColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDisplayedColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInsetRight of class  CCScale9Sprite */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCScale9Sprite_setInsetRight00
static int tolua_CocoStudio_CCScale9Sprite_setInsetRight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCScale9Sprite* self = (CCScale9Sprite*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInsetRight'", NULL);
#endif
  {
   self->setInsetRight(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInsetRight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_create00
static int tolua_CocoStudio_Layout_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Layout* tolua_ret = (Layout*)  Layout::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Layout");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_createInstance00
static int tolua_CocoStudio_Layout_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  Layout::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundColorVector of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundColorVector00
static int tolua_CocoStudio_Layout_setBackGroundColorVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* vector = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundColorVector'", NULL);
#endif
  {
   self->setBackGroundColorVector(*vector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundColorVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_addChild00
static int tolua_CocoStudio_Layout_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_addChild01
static int tolua_CocoStudio_Layout_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Layout_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_addChild02
static int tolua_CocoStudio_Layout_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Layout_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_onEnter00
static int tolua_CocoStudio_Layout_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClippingType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setClippingType00
static int tolua_CocoStudio_Layout_setClippingType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  LayoutClippingType type = ((LayoutClippingType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClippingType'", NULL);
#endif
  {
   self->setClippingType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClippingType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundColorType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundColorType00
static int tolua_CocoStudio_Layout_setBackGroundColorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  LayoutBackGroundColorType type = ((LayoutBackGroundColorType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundColorType'", NULL);
#endif
  {
   self->setBackGroundColorType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundColorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundImageColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundImageColor00
static int tolua_CocoStudio_Layout_setBackGroundImageColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundImageColor'", NULL);
#endif
  {
   self->setBackGroundImageColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundImageColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundColorVector of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundColorVector00
static int tolua_CocoStudio_Layout_getBackGroundColorVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundColorVector'", NULL);
#endif
  {
   const CCPoint& tolua_ret = (const CCPoint&)  self->getBackGroundColorVector();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundColorVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildren of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_removeAllChildren00
static int tolua_CocoStudio_Layout_removeAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildren'", NULL);
#endif
  {
   self->removeAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClippingType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getClippingType00
static int tolua_CocoStudio_Layout_getClippingType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClippingType'", NULL);
#endif
  {
   LayoutClippingType tolua_ret = (LayoutClippingType)  self->getClippingType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClippingType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeBackGroundImage of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_removeBackGroundImage00
static int tolua_CocoStudio_Layout_removeBackGroundImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeBackGroundImage'", NULL);
#endif
  {
   self->removeBackGroundImage();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeBackGroundImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundColorOpacity of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundColorOpacity00
static int tolua_CocoStudio_Layout_getBackGroundColorOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundColorOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getBackGroundColorOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundColorOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isClippingEnabled of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_isClippingEnabled00
static int tolua_CocoStudio_Layout_isClippingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isClippingEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isClippingEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isClippingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundImageOpacity of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundImageOpacity00
static int tolua_CocoStudio_Layout_setBackGroundImageOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundImageOpacity'", NULL);
#endif
  {
   self->setBackGroundImageOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundImageOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundImage of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundImage00
static int tolua_CocoStudio_Layout_setBackGroundImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundImage'", NULL);
#endif
  {
   self->setBackGroundImage(fileName,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundColor00
static int tolua_CocoStudio_Layout_setBackGroundColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* startColor = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
  const ccColor3B* endColor = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundColor'", NULL);
#endif
  {
   self->setBackGroundColor(*startColor,*endColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundColor01
static int tolua_CocoStudio_Layout_setBackGroundColor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundColor'", NULL);
#endif
  {
   self->setBackGroundColor(*color);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Layout_setBackGroundColor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_visit00
static int tolua_CocoStudio_Layout_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestDoLayout of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_requestDoLayout00
static int tolua_CocoStudio_Layout_requestDoLayout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestDoLayout'", NULL);
#endif
  {
   self->requestDoLayout();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestDoLayout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_delete00
static int tolua_CocoStudio_Layout_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundImageCapInsets of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundImageCapInsets00
static int tolua_CocoStudio_Layout_getBackGroundImageCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundImageCapInsets'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getBackGroundImageCapInsets();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundImageCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundColor00
static int tolua_CocoStudio_Layout_getBackGroundColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getBackGroundColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClippingEnabled of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setClippingEnabled00
static int tolua_CocoStudio_Layout_setClippingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClippingEnabled'", NULL);
#endif
  {
   self->setClippingEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClippingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getDescription00
static int tolua_CocoStudio_Layout_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundImageColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundImageColor00
static int tolua_CocoStudio_Layout_getBackGroundImageColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundImageColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getBackGroundImageColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundImageColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBackGroundImageScale9Enabled of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_isBackGroundImageScale9Enabled00
static int tolua_CocoStudio_Layout_isBackGroundImageScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBackGroundImageScale9Enabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBackGroundImageScale9Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBackGroundImageScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundColorType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundColorType00
static int tolua_CocoStudio_Layout_getBackGroundColorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundColorType'", NULL);
#endif
  {
   LayoutBackGroundColorType tolua_ret = (LayoutBackGroundColorType)  self->getBackGroundColorType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundColorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundEndColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundEndColor00
static int tolua_CocoStudio_Layout_getBackGroundEndColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundEndColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getBackGroundEndColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundEndColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundColorOpacity of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundColorOpacity00
static int tolua_CocoStudio_Layout_setBackGroundColorOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundColorOpacity'", NULL);
#endif
  {
   self->setBackGroundColorOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundColorOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundImageOpacity of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundImageOpacity00
static int tolua_CocoStudio_Layout_getBackGroundImageOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundImageOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->getBackGroundImageOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundImageOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_removeAllChildrenWithCleanup00
static int tolua_CocoStudio_Layout_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sortAllChildren of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_sortAllChildren00
static int tolua_CocoStudio_Layout_sortAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sortAllChildren'", NULL);
#endif
  {
   self->sortAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sortAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundImageCapInsets of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundImageCapInsets00
static int tolua_CocoStudio_Layout_setBackGroundImageCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundImageCapInsets'", NULL);
#endif
  {
   self->setBackGroundImageCapInsets(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundImageCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundImageTextureSize of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundImageTextureSize00
static int tolua_CocoStudio_Layout_getBackGroundImageTextureSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundImageTextureSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getBackGroundImageTextureSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundImageTextureSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_onExit00
static int tolua_CocoStudio_Layout_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getLayoutType00
static int tolua_CocoStudio_Layout_getLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutType'", NULL);
#endif
  {
   LayoutType tolua_ret = (LayoutType)  self->getLayoutType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackGroundStartColor of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_getBackGroundStartColor00
static int tolua_CocoStudio_Layout_getBackGroundStartColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackGroundStartColor'", NULL);
#endif
  {
   const ccColor3B& tolua_ret = (const ccColor3B&)  self->getBackGroundStartColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const ccColor3B");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackGroundStartColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hitTest of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_hitTest00
static int tolua_CocoStudio_Layout_hitTest00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hitTest'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hitTest(*pt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hitTest'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_removeChild00
static int tolua_CocoStudio_Layout_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  CCNode* widget = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(widget,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_removeChild01
static int tolua_CocoStudio_Layout_removeChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_Layout_removeChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_new00
static int tolua_CocoStudio_Layout_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Layout* tolua_ret = (Layout*)  Mtolua_new((Layout)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Layout");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_new00_local
static int tolua_CocoStudio_Layout_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Layout* tolua_ret = (Layout*)  Mtolua_new((Layout)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Layout");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackGroundImageScale9Enabled of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setBackGroundImageScale9Enabled00
static int tolua_CocoStudio_Layout_setBackGroundImageScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackGroundImageScale9Enabled'", NULL);
#endif
  {
   self->setBackGroundImageScale9Enabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackGroundImageScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayoutType of class  Layout */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_Layout_setLayoutType00
static int tolua_CocoStudio_Layout_setLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Layout",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Layout* self = (Layout*)  tolua_tousertype(tolua_S,1,0);
  LayoutType type = ((LayoutType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayoutType'", NULL);
#endif
  {
   self->setLayoutType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: height of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_height
static int tolua_get_CCTextureData_height(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: height of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_height
static int tolua_set_CCTextureData_height(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->height = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: width of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_width
static int tolua_get_CCTextureData_width(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: width of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_width
static int tolua_set_CCTextureData_width(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->width = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pivotX of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_pivotX
static int tolua_get_CCTextureData_pivotX(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pivotX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->pivotX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pivotX of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_pivotX
static int tolua_set_CCTextureData_pivotX(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pivotX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pivotX = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pivotY of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_pivotY
static int tolua_get_CCTextureData_pivotY(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pivotY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->pivotY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pivotY of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_pivotY
static int tolua_set_CCTextureData_pivotY(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pivotY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pivotY = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_name
static int tolua_get_CCTextureData_name(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_name
static int tolua_set_CCTextureData_name(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: contourDataList of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_get_CCTextureData_contourDataList
static int tolua_get_CCTextureData_contourDataList(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contourDataList'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->contourDataList,"CCArray");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: contourDataList of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_set_CCTextureData_contourDataList
static int tolua_set_CCTextureData_contourDataList(lua_State* tolua_S)
{
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contourDataList'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->contourDataList = *((CCArray*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_create00
static int tolua_CocoStudio_CCTextureData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTextureData* tolua_ret = (CCTextureData*)  CCTextureData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTextureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContourData of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_getContourData00
static int tolua_CocoStudio_CCTextureData_getContourData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContourData'", NULL);
#endif
  {
   CCContourData* tolua_ret = (CCContourData*)  self->getContourData(index);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCContourData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContourData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addContourData of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_addContourData00
static int tolua_CocoStudio_CCTextureData_addContourData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCContourData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
  CCContourData* contourData = ((CCContourData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addContourData'", NULL);
#endif
  {
   self->addContourData(contourData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addContourData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_init00
static int tolua_CocoStudio_CCTextureData_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_delete00
static int tolua_CocoStudio_CCTextureData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTextureData* self = (CCTextureData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_new00
static int tolua_CocoStudio_CCTextureData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTextureData* tolua_ret = (CCTextureData*)  Mtolua_new((CCTextureData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTextureData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCTextureData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTextureData_new00_local
static int tolua_CocoStudio_CCTextureData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCTextureData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCTextureData* tolua_ret = (CCTextureData*)  Mtolua_new((CCTextureData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCTextureData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_create00
static int tolua_CocoStudio_LoadingBar_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LoadingBar* tolua_ret = (LoadingBar*)  LoadingBar::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LoadingBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_createInstance00
static int tolua_CocoStudio_LoadingBar_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  LoadingBar::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPercent of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_setPercent00
static int tolua_CocoStudio_LoadingBar_setPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  int percent = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPercent'", NULL);
#endif
  {
   self->setPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVirtualRenderer of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getVirtualRenderer00
static int tolua_CocoStudio_LoadingBar_getVirtualRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVirtualRenderer'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getVirtualRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVirtualRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_LoadingBar_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTexture of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_loadTexture00
static int tolua_CocoStudio_LoadingBar_loadTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  const char* texture = ((const char*)  tolua_tostring(tolua_S,2,0));
  TextureResType texType = ((TextureResType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTexture'", NULL);
#endif
  {
   self->loadTexture(texture,texType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirection of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_setDirection00
static int tolua_CocoStudio_LoadingBar_setDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  LoadingBarType dir = ((LoadingBarType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirection'", NULL);
#endif
  {
   self->setDirection(dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPercentage of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getPercentage00
static int tolua_CocoStudio_LoadingBar_getPercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPercentage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPercentage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getDescription00
static int tolua_CocoStudio_LoadingBar_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale9Enabled of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_setScale9Enabled00
static int tolua_CocoStudio_LoadingBar_setScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale9Enabled'", NULL);
#endif
  {
   self->setScale9Enabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_delete00
static int tolua_CocoStudio_LoadingBar_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCapInsets of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_setCapInsets00
static int tolua_CocoStudio_LoadingBar_setCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  const CCRect* capInsets = ((const CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCapInsets'", NULL);
#endif
  {
   self->setCapInsets(*capInsets);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDirection of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getDirection00
static int tolua_CocoStudio_LoadingBar_getDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDirection'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getDirection();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPercentage of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_setPercentage00
static int tolua_CocoStudio_LoadingBar_setPercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
  float p = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPercentage'", NULL);
#endif
  {
   self->setPercentage(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapInsets of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getCapInsets00
static int tolua_CocoStudio_LoadingBar_getCapInsets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapInsets'", NULL);
#endif
  {
   const CCRect& tolua_ret = (const CCRect&)  self->getCapInsets();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapInsets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getContentSize00
static int tolua_CocoStudio_LoadingBar_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_new00
static int tolua_CocoStudio_LoadingBar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LoadingBar* tolua_ret = (LoadingBar*)  Mtolua_new((LoadingBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LoadingBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_new00_local
static int tolua_CocoStudio_LoadingBar_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LoadingBar* tolua_ret = (LoadingBar*)  Mtolua_new((LoadingBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LoadingBar");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isScale9Enabled of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_isScale9Enabled00
static int tolua_CocoStudio_LoadingBar_isScale9Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isScale9Enabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isScale9Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isScale9Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPercent of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_LoadingBar_getPercent00
static int tolua_CocoStudio_LoadingBar_getPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LoadingBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPercent'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCMeasurableProtocol__ of class  LoadingBar */
#ifndef TOLUA_DISABLE_tolua_get_LoadingBar___CCMeasurableProtocol__
static int tolua_get_LoadingBar___CCMeasurableProtocol__(lua_State* tolua_S)
{
  LoadingBar* self = (LoadingBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCMeasurableProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCMeasurableProtocol*>(self), "CCMeasurableProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((CCMeasurableProtocol*)self), "CCMeasurableProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bVisible of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_get_CCDisplayManager_m_bVisible
static int tolua_get_CCDisplayManager_m_bVisible(lua_State* tolua_S)
{
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_bVisible);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bVisible of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_set_CCDisplayManager_m_bVisible
static int tolua_set_CCDisplayManager_m_bVisible(lua_State* tolua_S)
{
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bVisible = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_create00
static int tolua_CocoStudio_CCDisplayManager_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
  {
   CCDisplayManager* tolua_ret = (CCDisplayManager*)  CCDisplayManager::create(bone);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentDecorativeDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getCurrentDecorativeDisplay00
static int tolua_CocoStudio_CCDisplayManager_getCurrentDecorativeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentDecorativeDisplay'", NULL);
#endif
  {
   CCDecorativeDisplay* tolua_ret = (CCDecorativeDisplay*)  self->getCurrentDecorativeDisplay();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDecorativeDisplay");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentDecorativeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayRenderNode of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getDisplayRenderNode00
static int tolua_CocoStudio_CCDisplayManager_getDisplayRenderNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayRenderNode'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getDisplayRenderNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayRenderNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_delete00
static int tolua_CocoStudio_CCDisplayManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnchorPointInPoints of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getAnchorPointInPoints00
static int tolua_CocoStudio_CCDisplayManager_getAnchorPointInPoints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnchorPointInPoints'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getAnchorPointInPoints();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnchorPointInPoints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentDecorativeDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_setCurrentDecorativeDisplay00
static int tolua_CocoStudio_CCDisplayManager_setCurrentDecorativeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDecorativeDisplay",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCDecorativeDisplay* decoDisplay = ((CCDecorativeDisplay*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentDecorativeDisplay'", NULL);
#endif
  {
   self->setCurrentDecorativeDisplay(decoDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentDecorativeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_removeDisplay00
static int tolua_CocoStudio_CCDisplayManager_removeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeDisplay'", NULL);
#endif
  {
   self->removeDisplay(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setForceChangeDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_setForceChangeDisplay00
static int tolua_CocoStudio_CCDisplayManager_setForceChangeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setForceChangeDisplay'", NULL);
#endif
  {
   self->setForceChangeDisplay(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setForceChangeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_init00
static int tolua_CocoStudio_CCDisplayManager_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCBone* bone = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(bone);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getContentSize00
static int tolua_CocoStudio_CCDisplayManager_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getContentSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getBoundingBox00
static int tolua_CocoStudio_CCDisplayManager_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'", NULL);
#endif
  {
   CCRect tolua_ret = (CCRect)  self->getBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_addDisplay00
static int tolua_CocoStudio_CCDisplayManager_addDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCNode* display = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDisplay'", NULL);
#endif
  {
   self->addDisplay(display,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_addDisplay01
static int tolua_CocoStudio_CCDisplayManager_addDisplay01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDisplay'", NULL);
#endif
  {
   self->addDisplay(displayData,index);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCDisplayManager_addDisplay00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: containPoint of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_containPoint00
static int tolua_CocoStudio_CCDisplayManager_containPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containPoint(x,y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containPoint of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_containPoint01
static int tolua_CocoStudio_CCDisplayManager_containPoint01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCPoint* _point = ((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containPoint(*_point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCDisplayManager_containPoint00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_new00
static int tolua_CocoStudio_CCDisplayManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDisplayManager* tolua_ret = (CCDisplayManager*)  Mtolua_new((CCDisplayManager)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_new00_local
static int tolua_CocoStudio_CCDisplayManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCDisplayManager* tolua_ret = (CCDisplayManager*)  Mtolua_new((CCDisplayManager)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initDisplayList of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_initDisplayList00
static int tolua_CocoStudio_CCDisplayManager_initDisplayList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  CCBoneData* boneData = ((CCBoneData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initDisplayList'", NULL);
#endif
  {
   self->initDisplayList(boneData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initDisplayList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeDisplayWithIndex of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_changeDisplayWithIndex00
static int tolua_CocoStudio_CCDisplayManager_changeDisplayWithIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  bool force = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeDisplayWithIndex'", NULL);
#endif
  {
   self->changeDisplayWithIndex(index,force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeDisplayWithIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeDisplayWithName of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_changeDisplayWithName00
static int tolua_CocoStudio_CCDisplayManager_changeDisplayWithName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool force = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeDisplayWithName'", NULL);
#endif
  {
   self->changeDisplayWithName(name,force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeDisplayWithName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDecorativeDisplayByIndex of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayByIndex00
static int tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDecorativeDisplayByIndex'", NULL);
#endif
  {
   CCDecorativeDisplay* tolua_ret = (CCDecorativeDisplay*)  self->getDecorativeDisplayByIndex(index);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDecorativeDisplay");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDecorativeDisplayByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentDisplayIndex of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getCurrentDisplayIndex00
static int tolua_CocoStudio_CCDisplayManager_getCurrentDisplayIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentDisplayIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurrentDisplayIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentDisplayIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getForceChangeDisplay of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getForceChangeDisplay00
static int tolua_CocoStudio_CCDisplayManager_getForceChangeDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getForceChangeDisplay'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getForceChangeDisplay();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getForceChangeDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnchorPoint of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getAnchorPoint00
static int tolua_CocoStudio_CCDisplayManager_getAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnchorPoint'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getAnchorPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDecorativeDisplayList of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayList00
static int tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDecorativeDisplayList'", NULL);
#endif
  {
   CCArray* tolua_ret = (CCArray*)  self->getDecorativeDisplayList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDecorativeDisplayList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_isVisible00
static int tolua_CocoStudio_CCDisplayManager_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  CCDisplayManager */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCDisplayManager_setVisible00
static int tolua_CocoStudio_CCDisplayManager_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCDisplayManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCDisplayManager* self = (CCDisplayManager*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_create00
static int tolua_CocoStudio_CCControlHuePicker_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   CCControlHuePicker* tolua_ret = (CCControlHuePicker*)  CCControlHuePicker::create(target,pos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlHuePicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_setEnabled00
static int tolua_CocoStudio_CCControlHuePicker_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTargetAndPos of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_initWithTargetAndPos00
static int tolua_CocoStudio_CCControlHuePicker_initWithTargetAndPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  CCNode* target = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  CCPoint pos = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTargetAndPos'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTargetAndPos(target,pos);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTargetAndPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHue of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_setHue00
static int tolua_CocoStudio_CCControlHuePicker_setHue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHue'", NULL);
#endif
  {
   self->setHue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartPos of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_getStartPos00
static int tolua_CocoStudio_CCControlHuePicker_getStartPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartPos'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getStartPos();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHue of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_getHue00
static int tolua_CocoStudio_CCControlHuePicker_getHue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getHue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSlider of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_getSlider00
static int tolua_CocoStudio_CCControlHuePicker_getSlider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSlider'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getSlider();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSlider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_delete00
static int tolua_CocoStudio_CCControlHuePicker_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackground of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_setBackground00
static int tolua_CocoStudio_CCControlHuePicker_setBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackground'", NULL);
#endif
  {
   self->setBackground(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHuePercentage of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_setHuePercentage00
static int tolua_CocoStudio_CCControlHuePicker_setHuePercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHuePercentage'", NULL);
#endif
  {
   self->setHuePercentage(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHuePercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackground of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_getBackground00
static int tolua_CocoStudio_CCControlHuePicker_getBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackground'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getBackground();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_new00
static int tolua_CocoStudio_CCControlHuePicker_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlHuePicker* tolua_ret = (CCControlHuePicker*)  Mtolua_new((CCControlHuePicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlHuePicker");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_new00_local
static int tolua_CocoStudio_CCControlHuePicker_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlHuePicker* tolua_ret = (CCControlHuePicker*)  Mtolua_new((CCControlHuePicker)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlHuePicker");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHuePercentage of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_getHuePercentage00
static int tolua_CocoStudio_CCControlHuePicker_getHuePercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHuePercentage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getHuePercentage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHuePercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSlider of class  CCControlHuePicker */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlHuePicker_setSlider00
static int tolua_CocoStudio_CCControlHuePicker_setSlider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlHuePicker",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlHuePicker* self = (CCControlHuePicker*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSlider'", NULL);
#endif
  {
   self->setSlider(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSlider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RichElementCustomNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementCustomNode_create00
static int tolua_CocoStudio_RichElementCustomNode_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementCustomNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  CCNode* customNode = ((CCNode*)  tolua_tousertype(tolua_S,5,0));
  {
   RichElementCustomNode* tolua_ret = (RichElementCustomNode*)  RichElementCustomNode::create(tag,*color,opacity,customNode);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementCustomNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  RichElementCustomNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementCustomNode_init00
static int tolua_CocoStudio_RichElementCustomNode_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementCustomNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementCustomNode* self = (RichElementCustomNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  CCNode* customNode = ((CCNode*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(tag,*color,opacity,customNode);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RichElementCustomNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementCustomNode_delete00
static int tolua_CocoStudio_RichElementCustomNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElementCustomNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElementCustomNode* self = (RichElementCustomNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RichElementCustomNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementCustomNode_new00
static int tolua_CocoStudio_RichElementCustomNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementCustomNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementCustomNode* tolua_ret = (RichElementCustomNode*)  Mtolua_new((RichElementCustomNode)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementCustomNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RichElementCustomNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElementCustomNode_new00_local
static int tolua_CocoStudio_RichElementCustomNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElementCustomNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElementCustomNode* tolua_ret = (RichElementCustomNode*)  Mtolua_new((RichElementCustomNode)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElementCustomNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseBezierAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseBezierAction_create00
static int tolua_CocoStudio_CCEaseBezierAction_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseBezierAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseBezierAction* tolua_ret = (CCEaseBezierAction*)  CCEaseBezierAction::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseBezierAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseBezierAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseBezierAction_copyWithZone00
static int tolua_CocoStudio_CCEaseBezierAction_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseBezierAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseBezierAction* self = (CCEaseBezierAction*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBezierParamer of class  CCEaseBezierAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseBezierAction_setBezierParamer00
static int tolua_CocoStudio_CCEaseBezierAction_setBezierParamer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseBezierAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseBezierAction* self = (CCEaseBezierAction*)  tolua_tousertype(tolua_S,1,0);
  float p0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float p1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float p2 = ((float)  tolua_tonumber(tolua_S,4,0));
  float p3 = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBezierParamer'", NULL);
#endif
  {
   self->setBezierParamer(p0,p1,p2,p3);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBezierParamer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseBezierAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseBezierAction_update00
static int tolua_CocoStudio_CCEaseBezierAction_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseBezierAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseBezierAction* self = (CCEaseBezierAction*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseBezierAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseBezierAction_reverse00
static int tolua_CocoStudio_CCEaseBezierAction_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseBezierAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseBezierAction* self = (CCEaseBezierAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_x
static int tolua_get_CCBaseData_x(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_x
static int tolua_set_CCBaseData_x(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_y
static int tolua_get_CCBaseData_y(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_y
static int tolua_set_CCBaseData_y(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: zOrder of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_zOrder
static int tolua_get_CCBaseData_zOrder(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'zOrder'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->zOrder);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: zOrder of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_zOrder
static int tolua_set_CCBaseData_zOrder(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'zOrder'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->zOrder = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skewX of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_skewX
static int tolua_get_CCBaseData_skewX(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skewX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->skewX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skewX of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_skewX
static int tolua_set_CCBaseData_skewX(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skewX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->skewX = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skewY of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_skewY
static int tolua_get_CCBaseData_skewY(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skewY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->skewY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skewY of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_skewY
static int tolua_set_CCBaseData_skewY(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skewY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->skewY = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: scaleX of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_scaleX
static int tolua_get_CCBaseData_scaleX(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scaleX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->scaleX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: scaleX of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_scaleX
static int tolua_set_CCBaseData_scaleX(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scaleX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->scaleX = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: scaleY of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_scaleY
static int tolua_get_CCBaseData_scaleY(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scaleY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->scaleY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: scaleY of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_scaleY
static int tolua_set_CCBaseData_scaleY(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'scaleY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->scaleY = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tweenRotate of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_tweenRotate
static int tolua_get_CCBaseData_tweenRotate(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tweenRotate'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tweenRotate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tweenRotate of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_tweenRotate
static int tolua_set_CCBaseData_tweenRotate(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tweenRotate'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tweenRotate = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: isUseColorInfo of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_isUseColorInfo
static int tolua_get_CCBaseData_isUseColorInfo(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isUseColorInfo'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->isUseColorInfo);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: isUseColorInfo of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_isUseColorInfo
static int tolua_set_CCBaseData_isUseColorInfo(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isUseColorInfo'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->isUseColorInfo = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_a
static int tolua_get_CCBaseData_a(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_a
static int tolua_set_CCBaseData_a(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_r
static int tolua_get_CCBaseData_r(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_r
static int tolua_set_CCBaseData_r(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_g
static int tolua_get_CCBaseData_g(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_g
static int tolua_set_CCBaseData_g(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_get_CCBaseData_b
static int tolua_get_CCBaseData_b(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_set_CCBaseData_b
static int tolua_set_CCBaseData_b(lua_State* tolua_S)
{
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_create00
static int tolua_CocoStudio_CCBaseData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBaseData* tolua_ret = (CCBaseData*)  CCBaseData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBaseData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_setColor00
static int tolua_CocoStudio_CCBaseData_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
  const ccColor4B* color = ((const ccColor4B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_getColor00
static int tolua_CocoStudio_CCBaseData_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   ccColor4B tolua_ret = (ccColor4B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ccColor4B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ccColor4B));
     tolua_pushusertype(tolua_S,tolua_obj,"ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_delete00
static int tolua_CocoStudio_CCBaseData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_new00
static int tolua_CocoStudio_CCBaseData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBaseData* tolua_ret = (CCBaseData*)  Mtolua_new((CCBaseData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBaseData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_new00_local
static int tolua_CocoStudio_CCBaseData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBaseData* tolua_ret = (CCBaseData*)  Mtolua_new((CCBaseData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBaseData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_copy00
static int tolua_CocoStudio_CCBaseData_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CCBaseData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
  const CCBaseData* node = ((const CCBaseData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   self->copy(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: subtract of class  CCBaseData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBaseData_subtract00
static int tolua_CocoStudio_CCBaseData_subtract00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBaseData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCBaseData",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBaseData* self = (CCBaseData*)  tolua_tousertype(tolua_S,1,0);
  CCBaseData* from = ((CCBaseData*)  tolua_tousertype(tolua_S,2,0));
  CCBaseData* to = ((CCBaseData*)  tolua_tousertype(tolua_S,3,0));
  bool limit = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'subtract'", NULL);
#endif
  {
   self->subtract(from,to,limit);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'subtract'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pageItemDidRecycled of class  PageViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageViewDataSource_pageItemDidRecycled00
static int tolua_CocoStudio_PageViewDataSource_pageItemDidRecycled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageViewDataSource* self = (PageViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  PageView* pv = ((PageView*)  tolua_tousertype(tolua_S,2,0));
  Widget* item = ((Widget*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pageItemDidRecycled'", NULL);
#endif
  {
   self->pageItemDidRecycled(pv,item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pageItemDidRecycled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pageItemAtIndex of class  PageViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageViewDataSource_pageItemAtIndex00
static int tolua_CocoStudio_PageViewDataSource_pageItemAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PageView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageViewDataSource* self = (PageViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  PageView* pv = ((PageView*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pageItemAtIndex'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->pageItemAtIndex(pv,index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pageItemAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pageViewItemCount of class  PageViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageViewDataSource_pageViewItemCount00
static int tolua_CocoStudio_PageViewDataSource_pageViewItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageViewDataSource* self = (PageViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  PageView* pv = ((PageView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pageViewItemCount'", NULL);
#endif
  {
   int tolua_ret = (int)  self->pageViewItemCount(pv);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pageViewItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAccelerometerEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_isAccelerometerEnabled00
static int tolua_CocoStudio_CCInputDelegate_isAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAccelerometerEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAccelerometerEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_setTouchEnabled00
static int tolua_CocoStudio_CCInputDelegate_setTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchEnabled'", NULL);
#endif
  {
   self->setTouchEnabled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: didAccelerate of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_didAccelerate00
static int tolua_CocoStudio_CCInputDelegate_didAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCAcceleration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCAcceleration* pAccelerationValue = ((CCAcceleration*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didAccelerate'", NULL);
#endif
  {
   self->didAccelerate(pAccelerationValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchMode of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_getTouchMode00
static int tolua_CocoStudio_CCInputDelegate_getTouchMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchMode'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTouchMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAccelerometerEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_setAccelerometerEnabled00
static int tolua_CocoStudio_CCInputDelegate_setAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAccelerometerEnabled'", NULL);
#endif
  {
   self->setAccelerometerEnabled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchBegan00
static int tolua_CocoStudio_CCInputDelegate_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setKeypadEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_setKeypadEnabled00
static int tolua_CocoStudio_CCInputDelegate_setKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setKeypadEnabled'", NULL);
#endif
  {
   self->setKeypadEnabled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isKeypadEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_isKeypadEnabled00
static int tolua_CocoStudio_CCInputDelegate_isKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isKeypadEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isKeypadEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesCancelled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchesCancelled00
static int tolua_CocoStudio_CCInputDelegate_ccTouchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCSet* pTouches = ((CCSet*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesCancelled'", NULL);
#endif
  {
   self->ccTouchesCancelled(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_delete00
static int tolua_CocoStudio_CCInputDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchCancelled00
static int tolua_CocoStudio_CCInputDelegate_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchEnded00
static int tolua_CocoStudio_CCInputDelegate_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchEnabled of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_isTouchEnabled00
static int tolua_CocoStudio_CCInputDelegate_isTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesBegan of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchesBegan00
static int tolua_CocoStudio_CCInputDelegate_ccTouchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCSet* pTouches = ((CCSet*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesBegan'", NULL);
#endif
  {
   self->ccTouchesBegan(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchPriority of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_setTouchPriority00
static int tolua_CocoStudio_CCInputDelegate_setTouchPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  int priority = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchPriority'", NULL);
#endif
  {
   self->setTouchPriority(priority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesMoved of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchesMoved00
static int tolua_CocoStudio_CCInputDelegate_ccTouchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCSet* pTouches = ((CCSet*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesMoved'", NULL);
#endif
  {
   self->ccTouchesMoved(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchMoved00
static int tolua_CocoStudio_CCInputDelegate_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchPriority of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_getTouchPriority00
static int tolua_CocoStudio_CCInputDelegate_getTouchPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchPriority'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTouchPriority();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesEnded of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_ccTouchesEnded00
static int tolua_CocoStudio_CCInputDelegate_ccTouchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  CCSet* pTouches = ((CCSet*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesEnded'", NULL);
#endif
  {
   self->ccTouchesEnded(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTouchMode of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCInputDelegate_setTouchMode00
static int tolua_CocoStudio_CCInputDelegate_setTouchMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCInputDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
  ccTouchesMode mode = ((ccTouchesMode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTouchMode'", NULL);
#endif
  {
   self->setTouchMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTouchMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCAccelerometerDelegate__ of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_get_CCInputDelegate___CCAccelerometerDelegate__
static int tolua_get_CCInputDelegate___CCAccelerometerDelegate__(lua_State* tolua_S)
{
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCAccelerometerDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCAccelerometerDelegate*>(self), "CCAccelerometerDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCAccelerometerDelegate*)self), "CCAccelerometerDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCKeypadDelegate__ of class  CCInputDelegate */
#ifndef TOLUA_DISABLE_tolua_get_CCInputDelegate___CCKeypadDelegate__
static int tolua_get_CCInputDelegate___CCKeypadDelegate__(lua_State* tolua_S)
{
  CCInputDelegate* self = (CCInputDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCKeypadDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCKeypadDelegate*>(self), "CCKeypadDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCKeypadDelegate*)self), "CCKeypadDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_create00
static int tolua_CocoStudio_CCComRender_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCComRender* tolua_ret = (CCComRender*)  CCComRender::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_create01
static int tolua_CocoStudio_CCComRender_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCNode* pNode = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  const char* comName = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   CCComRender* tolua_ret = (CCComRender*)  CCComRender::create(pNode,comName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCComRender_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_createInstance00
static int tolua_CocoStudio_CCComRender_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  CCComRender::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNode of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_setNode00
static int tolua_CocoStudio_CCComRender_setNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
  CCNode* pNode = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNode'", NULL);
#endif
  {
   self->setNode(pNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_onEnter00
static int tolua_CocoStudio_CCComRender_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_onExit00
static int tolua_CocoStudio_CCComRender_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_serialize00
static int tolua_CocoStudio_CCComRender_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
  void* r = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->serialize(r);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_delete00
static int tolua_CocoStudio_CCComRender_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_new00
static int tolua_CocoStudio_CCComRender_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  const char* comName = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   CCComRender* tolua_ret = (CCComRender*)  Mtolua_new((CCComRender)(node,comName));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_new00_local
static int tolua_CocoStudio_CCComRender_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCNode* node = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  const char* comName = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   CCComRender* tolua_ret = (CCComRender*)  Mtolua_new((CCComRender)(node,comName));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_new01
static int tolua_CocoStudio_CCComRender_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCComRender* tolua_ret = (CCComRender*)  Mtolua_new((CCComRender)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCComRender_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_new01_local
static int tolua_CocoStudio_CCComRender_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCComRender* tolua_ret = (CCComRender*)  Mtolua_new((CCComRender)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCComRender");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCComRender_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNode of class  CCComRender */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCComRender_getNode00
static int tolua_CocoStudio_CCComRender_getNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCComRender",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCComRender* self = (CCComRender*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNode'", NULL);
#endif
  {
   CCNode* tolua_ret = (CCNode*)  self->getNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_getOpacity00
static int tolua_CocoStudio_ActionFadeFrame_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFadeFrame* self = (ActionFadeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_delete00
static int tolua_CocoStudio_ActionFadeFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFadeFrame* self = (ActionFadeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_getAction00
static int tolua_CocoStudio_ActionFadeFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFadeFrame* self = (ActionFadeFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_setOpacity00
static int tolua_CocoStudio_ActionFadeFrame_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionFadeFrame* self = (ActionFadeFrame*)  tolua_tousertype(tolua_S,1,0);
  int opacity = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_new00
static int tolua_CocoStudio_ActionFadeFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFadeFrame* tolua_ret = (ActionFadeFrame*)  Mtolua_new((ActionFadeFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFadeFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionFadeFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionFadeFrame_new00_local
static int tolua_CocoStudio_ActionFadeFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionFadeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionFadeFrame* tolua_ret = (ActionFadeFrame*)  Mtolua_new((ActionFadeFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionFadeFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_get_CCControlPotentiometer_m_fValue
static int tolua_get_CCControlPotentiometer_m_fValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_set_CCControlPotentiometer_m_fValue
static int tolua_set_CCControlPotentiometer_m_fValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fValue = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fMinimumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_get_CCControlPotentiometer_m_fMinimumValue
static int tolua_get_CCControlPotentiometer_m_fMinimumValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fMinimumValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fMinimumValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fMinimumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_set_CCControlPotentiometer_m_fMinimumValue
static int tolua_set_CCControlPotentiometer_m_fMinimumValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fMinimumValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fMinimumValue = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fMaximumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_get_CCControlPotentiometer_m_fMaximumValue
static int tolua_get_CCControlPotentiometer_m_fMaximumValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fMaximumValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fMaximumValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fMaximumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_set_CCControlPotentiometer_m_fMaximumValue
static int tolua_set_CCControlPotentiometer_m_fMaximumValue(lua_State* tolua_S)
{
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fMaximumValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fMaximumValue = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_create00
static int tolua_CocoStudio_CCControlPotentiometer_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* backgroundFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* progressFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* thumbFile = ((const char*)  tolua_tostring(tolua_S,4,0));
  {
   CCControlPotentiometer* tolua_ret = (CCControlPotentiometer*)  CCControlPotentiometer::create(backgroundFile,progressFile,thumbFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlPotentiometer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPreviousLocation of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setPreviousLocation00
static int tolua_CocoStudio_CCControlPotentiometer_setPreviousLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint var = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPreviousLocation'", NULL);
#endif
  {
   self->setPreviousLocation(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPreviousLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProgressTimer of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setProgressTimer00
static int tolua_CocoStudio_CCControlPotentiometer_setProgressTimer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCProgressTimer* var = ((CCProgressTimer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProgressTimer'", NULL);
#endif
  {
   self->setProgressTimer(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProgressTimer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: potentiometerMoved of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_potentiometerMoved00
static int tolua_CocoStudio_CCControlPotentiometer_potentiometerMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint location = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'potentiometerMoved'", NULL);
#endif
  {
   self->potentiometerMoved(location);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'potentiometerMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_ccTouchEnded00
static int tolua_CocoStudio_CCControlPotentiometer_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinimumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getMinimumValue00
static int tolua_CocoStudio_CCControlPotentiometer_getMinimumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinimumValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMinimumValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinimumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setThumbSprite of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setThumbSprite00
static int tolua_CocoStudio_CCControlPotentiometer_setThumbSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setThumbSprite'", NULL);
#endif
  {
   self->setThumbSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setThumbSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_delete00
static int tolua_CocoStudio_CCControlPotentiometer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_ccTouchBegan00
static int tolua_CocoStudio_CCControlPotentiometer_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_ccTouchMoved00
static int tolua_CocoStudio_CCControlPotentiometer_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPreviousLocation of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getPreviousLocation00
static int tolua_CocoStudio_CCControlPotentiometer_getPreviousLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPreviousLocation'", NULL);
#endif
  {
   CCPoint tolua_ret = (CCPoint)  self->getPreviousLocation();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPreviousLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setEnabled00
static int tolua_CocoStudio_CCControlPotentiometer_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'", NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setValue00
static int tolua_CocoStudio_CCControlPotentiometer_setValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setValue'", NULL);
#endif
  {
   self->setValue(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaximumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setMaximumValue00
static int tolua_CocoStudio_CCControlPotentiometer_setMaximumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  float maximumValue = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaximumValue'", NULL);
#endif
  {
   self->setMaximumValue(maximumValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaximumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinimumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_setMinimumValue00
static int tolua_CocoStudio_CCControlPotentiometer_setMinimumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  float minimumValue = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinimumValue'", NULL);
#endif
  {
   self->setMinimumValue(minimumValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinimumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: potentiometerEnded of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_potentiometerEnded00
static int tolua_CocoStudio_CCControlPotentiometer_potentiometerEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint location = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'potentiometerEnded'", NULL);
#endif
  {
   self->potentiometerEnded(location);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'potentiometerEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: distanceBetweenPointAndPoint of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_distanceBetweenPointAndPoint00
static int tolua_CocoStudio_CCControlPotentiometer_distanceBetweenPointAndPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint point1 = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
  CCPoint point2 = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'distanceBetweenPointAndPoint'", NULL);
#endif
  {
   float tolua_ret = (float)  self->distanceBetweenPointAndPoint(point1,point2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'distanceBetweenPointAndPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProgressTimer of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getProgressTimer00
static int tolua_CocoStudio_CCControlPotentiometer_getProgressTimer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProgressTimer'", NULL);
#endif
  {
   CCProgressTimer* tolua_ret = (CCProgressTimer*)  self->getProgressTimer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCProgressTimer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProgressTimer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximumValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getMaximumValue00
static int tolua_CocoStudio_CCControlPotentiometer_getMaximumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximumValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaximumValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint00
static int tolua_CocoStudio_CCControlPotentiometer_angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint beginLineA = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
  CCPoint endLineA = *((CCPoint*)  tolua_tousertype(tolua_S,3,0));
  CCPoint beginLineB = *((CCPoint*)  tolua_tousertype(tolua_S,4,0));
  CCPoint endLineB = *((CCPoint*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint'", NULL);
#endif
  {
   float tolua_ret = (float)  self->angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint(beginLineA,endLineA,beginLineB,endLineB);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTouchInside of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_isTouchInside00
static int tolua_CocoStudio_CCControlPotentiometer_isTouchInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTouchInside'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTouchInside(touch);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTouchInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getValue of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getValue00
static int tolua_CocoStudio_CCControlPotentiometer_getValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: potentiometerBegan of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_potentiometerBegan00
static int tolua_CocoStudio_CCControlPotentiometer_potentiometerBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCPoint location = *((CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'potentiometerBegan'", NULL);
#endif
  {
   self->potentiometerBegan(location);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'potentiometerBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_new00
static int tolua_CocoStudio_CCControlPotentiometer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlPotentiometer* tolua_ret = (CCControlPotentiometer*)  Mtolua_new((CCControlPotentiometer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlPotentiometer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_new00_local
static int tolua_CocoStudio_CCControlPotentiometer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCControlPotentiometer* tolua_ret = (CCControlPotentiometer*)  Mtolua_new((CCControlPotentiometer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlPotentiometer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getThumbSprite of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_getThumbSprite00
static int tolua_CocoStudio_CCControlPotentiometer_getThumbSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getThumbSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getThumbSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getThumbSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTrackSprite_ProgressTimer_ThumbSprite of class  CCControlPotentiometer */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlPotentiometer_initWithTrackSprite_ProgressTimer_ThumbSprite00
static int tolua_CocoStudio_CCControlPotentiometer_initWithTrackSprite_ProgressTimer_ThumbSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlPotentiometer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCProgressTimer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlPotentiometer* self = (CCControlPotentiometer*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* trackSprite = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCProgressTimer* progressTimer = ((CCProgressTimer*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* thumbSprite = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTrackSprite_ProgressTimer_ThumbSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTrackSprite_ProgressTimer_ThumbSprite(trackSprite,progressTimer,thumbSprite);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTrackSprite_ProgressTimer_ThumbSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_create00
static int tolua_CocoStudio_SkewFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkewFrame* tolua_ret = (SkewFrame*)  SkewFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"SkewFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_onEnter00
static int tolua_CocoStudio_SkewFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_clone00
static int tolua_CocoStudio_SkewFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkewY of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_getSkewY00
static int tolua_CocoStudio_SkewFrame_getSkewY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkewY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSkewY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkewY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkewX of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_getSkewX00
static int tolua_CocoStudio_SkewFrame_getSkewX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkewX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSkewX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkewX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_new00
static int tolua_CocoStudio_SkewFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkewFrame* tolua_ret = (SkewFrame*)  Mtolua_new((SkewFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"SkewFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_new00_local
static int tolua_CocoStudio_SkewFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkewFrame* tolua_ret = (SkewFrame*)  Mtolua_new((SkewFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"SkewFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: apply of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_apply00
static int tolua_CocoStudio_SkewFrame_apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'apply'", NULL);
#endif
  {
   self->apply(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewX of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_setSkewX00
static int tolua_CocoStudio_SkewFrame_setSkewX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
  float skewx = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewX'", NULL);
#endif
  {
   self->setSkewX(skewx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewY of class  SkewFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_SkewFrame_setSkewY00
static int tolua_CocoStudio_SkewFrame_setSkewY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkewFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkewFrame* self = (SkewFrame*)  tolua_tousertype(tolua_S,1,0);
  float skewy = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewY'", NULL);
#endif
  {
   self->setSkewY(skewy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  RichElement */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElement_init00
static int tolua_CocoStudio_RichElement_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElement* self = (RichElement*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,3,0));
  unsigned char opacity = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init(tag,*color,opacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RichElement */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElement_delete00
static int tolua_CocoStudio_RichElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichElement* self = (RichElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RichElement */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElement_new00
static int tolua_CocoStudio_RichElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElement* tolua_ret = (RichElement*)  Mtolua_new((RichElement)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RichElement */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichElement_new00_local
static int tolua_CocoStudio_RichElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichElement* tolua_ret = (RichElement*)  Mtolua_new((RichElement)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RichElement");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_setCurrentTime00
static int tolua_CocoStudio_ActionObject_setCurrentTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentTime'", NULL);
#endif
  {
   self->setCurrentTime(fTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_pause00
static int tolua_CocoStudio_ActionObject_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUnitTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_setUnitTime00
static int tolua_CocoStudio_ActionObject_setUnitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUnitTime'", NULL);
#endif
  {
   self->setUnitTime(fTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUnitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_setName00
static int tolua_CocoStudio_ActionObject_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_getTotalTime00
static int tolua_CocoStudio_ActionObject_getTotalTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTotalTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: simulationActionUpdate of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_simulationActionUpdate00
static int tolua_CocoStudio_ActionObject_simulationActionUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'simulationActionUpdate'", NULL);
#endif
  {
   self->simulationActionUpdate(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'simulationActionUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_getName00
static int tolua_CocoStudio_ActionObject_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_stop00
static int tolua_CocoStudio_ActionObject_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: play of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_play00
static int tolua_CocoStudio_ActionObject_play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  CCCallFunc* func = ((CCCallFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'play'", NULL);
#endif
  {
   self->play(func);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: play of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_play01
static int tolua_CocoStudio_ActionObject_play01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'play'", NULL);
#endif
  {
   self->play();
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_ActionObject_play00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_getCurrentTime00
static int tolua_CocoStudio_ActionObject_getCurrentTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCurrentTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_delete00
static int tolua_CocoStudio_ActionObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLoop of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_getLoop00
static int tolua_CocoStudio_ActionObject_getLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLoop'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getLoop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBinary of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_initWithBinary00
static int tolua_CocoStudio_ActionObject_initWithBinary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
  CCObject* root = ((CCObject*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBinary'", NULL);
#endif
  {
   self->initWithBinary(pCocoLoader,pCocoNode,root);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBinary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addActionNode of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_addActionNode00
static int tolua_CocoStudio_ActionObject_addActionNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  ActionNode* node = ((ActionNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addActionNode'", NULL);
#endif
  {
   self->addActionNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addActionNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_new00
static int tolua_CocoStudio_ActionObject_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionObject* tolua_ret = (ActionObject*)  Mtolua_new((ActionObject)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_new00_local
static int tolua_CocoStudio_ActionObject_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionObject* tolua_ret = (ActionObject*)  Mtolua_new((ActionObject)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionObject");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnitTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_getUnitTime00
static int tolua_CocoStudio_ActionObject_getUnitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnitTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getUnitTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPlaying of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_isPlaying00
static int tolua_CocoStudio_ActionObject_isPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateToFrameByTime of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_updateToFrameByTime00
static int tolua_CocoStudio_ActionObject_updateToFrameByTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  float fTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateToFrameByTime'", NULL);
#endif
  {
   self->updateToFrameByTime(fTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateToFrameByTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLoop of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_setLoop00
static int tolua_CocoStudio_ActionObject_setLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  bool bLoop = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLoop'", NULL);
#endif
  {
   self->setLoop(bLoop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeActionNode of class  ActionObject */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionObject_removeActionNode00
static int tolua_CocoStudio_ActionObject_removeActionNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ActionNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionObject* self = (ActionObject*)  tolua_tousertype(tolua_S,1,0);
  ActionNode* node = ((ActionNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeActionNode'", NULL);
#endif
  {
   self->removeActionNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeActionNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_create00
static int tolua_CocoStudio_CCControlSlider_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSprite* bg = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
  CCSprite* thumb = ((CCSprite*)  tolua_tousertype(tolua_S,3,0));
  CCSprite* progress = ((CCSprite*)  tolua_tousertype(tolua_S,4,0));
  {
   CCControlSlider* tolua_ret = (CCControlSlider*)  CCControlSlider::create(bg,thumb,progress);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCControlSlider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_ccTouchBegan00
static int tolua_CocoStudio_CCControlSlider_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(touch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_ccTouchEnded00
static int tolua_CocoStudio_CCControlSlider_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: markDiscreteMode of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_markDiscreteMode00
static int tolua_CocoStudio_CCControlSlider_markDiscreteMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'markDiscreteMode'", NULL);
#endif
  {
   self->markDiscreteMode();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'markDiscreteMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximumAllowedValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getMaximumAllowedValue00
static int tolua_CocoStudio_CCControlSlider_getMaximumAllowedValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximumAllowedValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaximumAllowedValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximumAllowedValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinimumAllowedValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getMinimumAllowedValue00
static int tolua_CocoStudio_CCControlSlider_getMinimumAllowedValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinimumAllowedValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMinimumAllowedValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinimumAllowedValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinimumValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getMinimumValue00
static int tolua_CocoStudio_CCControlSlider_getMinimumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinimumValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMinimumValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinimumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setThumbSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setThumbSprite00
static int tolua_CocoStudio_CCControlSlider_setThumbSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setThumbSprite'", NULL);
#endif
  {
   self->setThumbSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setThumbSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_delete00
static int tolua_CocoStudio_CCControlSlider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinimumValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setMinimumValue00
static int tolua_CocoStudio_CCControlSlider_setMinimumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinimumValue'", NULL);
#endif
  {
   self->setMinimumValue(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinimumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinimumAllowedValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setMinimumAllowedValue00
static int tolua_CocoStudio_CCControlSlider_setMinimumAllowedValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinimumAllowedValue'", NULL);
#endif
  {
   self->setMinimumAllowedValue(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinimumAllowedValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProgressSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setProgressSprite00
static int tolua_CocoStudio_CCControlSlider_setProgressSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProgressSprite'", NULL);
#endif
  {
   self->setProgressSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProgressSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearDiscreteMode of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_clearDiscreteMode00
static int tolua_CocoStudio_CCControlSlider_clearDiscreteMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearDiscreteMode'", NULL);
#endif
  {
   self->clearDiscreteMode();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearDiscreteMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setValue00
static int tolua_CocoStudio_CCControlSlider_setValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setValue'", NULL);
#endif
  {
   self->setValue(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaximumValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setMaximumValue00
static int tolua_CocoStudio_CCControlSlider_setMaximumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaximumValue'", NULL);
#endif
  {
   self->setMaximumValue(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaximumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needsLayout of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_needsLayout00
static int tolua_CocoStudio_CCControlSlider_needsLayout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needsLayout'", NULL);
#endif
  {
   self->needsLayout();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needsLayout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_ccTouchMoved00
static int tolua_CocoStudio_CCControlSlider_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDiscreteMode of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setDiscreteMode00
static int tolua_CocoStudio_CCControlSlider_setDiscreteMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDiscreteMode'", NULL);
#endif
  {
   self->setDiscreteMode(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDiscreteMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBackgroundSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getBackgroundSprite00
static int tolua_CocoStudio_CCControlSlider_getBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBackgroundSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getBackgroundSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getIntValue00
static int tolua_CocoStudio_CCControlSlider_getIntValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntValue'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getIntValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximumValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getMaximumValue00
static int tolua_CocoStudio_CCControlSlider_getMaximumValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximumValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaximumValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximumValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getValue00
static int tolua_CocoStudio_CCControlSlider_getValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_ccTouchCancelled00
static int tolua_CocoStudio_CCControlSlider_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getThumbSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getThumbSprite00
static int tolua_CocoStudio_CCControlSlider_getThumbSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getThumbSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getThumbSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getThumbSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDiscreteMode of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_isDiscreteMode00
static int tolua_CocoStudio_CCControlSlider_isDiscreteMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDiscreteMode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDiscreteMode();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDiscreteMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProgressSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_getProgressSprite00
static int tolua_CocoStudio_CCControlSlider_getProgressSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProgressSprite'", NULL);
#endif
  {
   CCSprite* tolua_ret = (CCSprite*)  self->getProgressSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProgressSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundSprite of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setBackgroundSprite00
static int tolua_CocoStudio_CCControlSlider_setBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  CCSprite* var = ((CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundSprite'", NULL);
#endif
  {
   self->setBackgroundSprite(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaximumAllowedValue of class  CCControlSlider */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCControlSlider_setMaximumAllowedValue00
static int tolua_CocoStudio_CCControlSlider_setMaximumAllowedValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCControlSlider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCControlSlider* self = (CCControlSlider*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaximumAllowedValue'", NULL);
#endif
  {
   self->setMaximumAllowedValue(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaximumAllowedValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseCircleActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionInOut_create00
static int tolua_CocoStudio_CCEaseCircleActionInOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseCircleActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseCircleActionInOut* tolua_ret = (CCEaseCircleActionInOut*)  CCEaseCircleActionInOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseCircleActionInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseCircleActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionInOut_copyWithZone00
static int tolua_CocoStudio_CCEaseCircleActionInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionInOut* self = (CCEaseCircleActionInOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseCircleActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionInOut_update00
static int tolua_CocoStudio_CCEaseCircleActionInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionInOut* self = (CCEaseCircleActionInOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseCircleActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseCircleActionInOut_reverse00
static int tolua_CocoStudio_CCEaseCircleActionInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseCircleActionInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseCircleActionInOut* self = (CCEaseCircleActionInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purge of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_purge00
static int tolua_CocoStudio_GUIReader_purge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GUIReader::purge();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shareReader of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_shareReader00
static int tolua_CocoStudio_GUIReader_shareReader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GUIReader* tolua_ret = (GUIReader*)  GUIReader::shareReader();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"GUIReader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shareReader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFilePath of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_setFilePath00
static int tolua_CocoStudio_GUIReader_setFilePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const string strFilePath = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFilePath'", NULL);
#endif
  {
   self->setFilePath(strFilePath);
   tolua_pushcppstring(tolua_S,(const char*)strFilePath);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFilePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileDesignSize of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_getFileDesignSize00
static int tolua_CocoStudio_GUIReader_getFileDesignSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileDesignSize'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->getFileDesignSize(fileName);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileDesignSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: storeFileDesignSize of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_storeFileDesignSize00
static int tolua_CocoStudio_GUIReader_storeFileDesignSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'storeFileDesignSize'", NULL);
#endif
  {
   self->storeFileDesignSize(fileName,*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'storeFileDesignSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_delete00
static int tolua_CocoStudio_GUIReader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: widgetFromJsonFile of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_widgetFromJsonFile00
static int tolua_CocoStudio_GUIReader_widgetFromJsonFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'widgetFromJsonFile'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->widgetFromJsonFile(fileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'widgetFromJsonFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_new00
static int tolua_CocoStudio_GUIReader_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GUIReader* tolua_ret = (GUIReader*)  Mtolua_new((GUIReader)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"GUIReader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_new00_local
static int tolua_CocoStudio_GUIReader_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GUIReader* tolua_ret = (GUIReader*)  Mtolua_new((GUIReader)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"GUIReader");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFilePath of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_getFilePath00
static int tolua_CocoStudio_GUIReader_getFilePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFilePath'", NULL);
#endif
  {
   const string tolua_ret = (const string)  self->getFilePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFilePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: widgetFromBinaryFile of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_widgetFromBinaryFile00
static int tolua_CocoStudio_GUIReader_widgetFromBinaryFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'widgetFromBinaryFile'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->widgetFromBinaryFile(fileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'widgetFromBinaryFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVersionInteger of class  GUIReader */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_GUIReader_getVersionInteger00
static int tolua_CocoStudio_GUIReader_getVersionInteger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GUIReader",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GUIReader* self = (GUIReader*)  tolua_tousertype(tolua_S,1,0);
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVersionInteger'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getVersionInteger(str);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVersionInteger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: numberOfCellsInTableView of class  CCTableViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDataSource_numberOfCellsInTableView00
static int tolua_CocoStudio_CCTableViewDataSource_numberOfCellsInTableView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDataSource* self = (CCTableViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'numberOfCellsInTableView'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->numberOfCellsInTableView(table);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'numberOfCellsInTableView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellAtIndex of class  CCTableViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDataSource_tableCellAtIndex00
static int tolua_CocoStudio_CCTableViewDataSource_tableCellAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDataSource* self = (CCTableViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellAtIndex'", NULL);
#endif
  {
   CCTableViewCell* tolua_ret = (CCTableViewCell*)  self->tableCellAtIndex(table,idx);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTableViewCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tableCellSizeForIndex of class  CCTableViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDataSource_tableCellSizeForIndex00
static int tolua_CocoStudio_CCTableViewDataSource_tableCellSizeForIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDataSource",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTableView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDataSource* self = (CCTableViewDataSource*)  tolua_tousertype(tolua_S,1,0);
  CCTableView* table = ((CCTableView*)  tolua_tousertype(tolua_S,2,0));
  unsigned int idx = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tableCellSizeForIndex'", NULL);
#endif
  {
   CCSize tolua_ret = (CCSize)  self->tableCellSizeForIndex(table,idx);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tableCellSizeForIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCTableViewDataSource */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCTableViewDataSource_delete00
static int tolua_CocoStudio_CCTableViewDataSource_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCTableViewDataSource",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCTableViewDataSource* self = (CCTableViewDataSource*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_create00
static int tolua_CocoStudio_InnerActionFrame_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InnerActionFrame* tolua_ret = (InnerActionFrame*)  InnerActionFrame::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"InnerActionFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartFrameIndex of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_getStartFrameIndex00
static int tolua_CocoStudio_InnerActionFrame_getStartFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InnerActionFrame* self = (InnerActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartFrameIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getStartFrameIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_onEnter00
static int tolua_CocoStudio_InnerActionFrame_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Frame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InnerActionFrame* self = (InnerActionFrame*)  tolua_tousertype(tolua_S,1,0);
  Frame* nextFrame = ((Frame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter(nextFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clone of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_clone00
static int tolua_CocoStudio_InnerActionFrame_clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InnerActionFrame* self = (InnerActionFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clone'", NULL);
#endif
  {
   Frame* tolua_ret = (Frame*)  self->clone();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"Frame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_new00
static int tolua_CocoStudio_InnerActionFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InnerActionFrame* tolua_ret = (InnerActionFrame*)  Mtolua_new((InnerActionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"InnerActionFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_new00_local
static int tolua_CocoStudio_InnerActionFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InnerActionFrame* tolua_ret = (InnerActionFrame*)  Mtolua_new((InnerActionFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"InnerActionFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartFrameIndex of class  InnerActionFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_InnerActionFrame_setStartFrameIndex00
static int tolua_CocoStudio_InnerActionFrame_setStartFrameIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InnerActionFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InnerActionFrame* self = (InnerActionFrame*)  tolua_tousertype(tolua_S,1,0);
  int frameIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartFrameIndex'", NULL);
#endif
  {
   self->setStartFrameIndex(frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartFrameIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  BaseTriggerAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerAction_removeAll00
static int tolua_CocoStudio_BaseTriggerAction_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerAction* self = (BaseTriggerAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'", NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  BaseTriggerAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerAction_init00
static int tolua_CocoStudio_BaseTriggerAction_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerAction* self = (BaseTriggerAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serialize of class  BaseTriggerAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerAction_serialize00
static int tolua_CocoStudio_BaseTriggerAction_serialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerAction* self = (BaseTriggerAction*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCocoLoader = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  stExpCocoNode* pCocoNode = ((stExpCocoNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serialize'", NULL);
#endif
  {
   self->serialize(pCocoLoader,pCocoNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: done of class  BaseTriggerAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerAction_done00
static int tolua_CocoStudio_BaseTriggerAction_done00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerAction* self = (BaseTriggerAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'done'", NULL);
#endif
  {
   self->done();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'done'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BaseTriggerAction */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_BaseTriggerAction_delete00
static int tolua_CocoStudio_BaseTriggerAction_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BaseTriggerAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BaseTriggerAction* self = (BaseTriggerAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_create00
static int tolua_CocoStudio_CCSkin_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCSkin* tolua_ret = (CCSkin*)  CCSkin::create(pszFileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_create01
static int tolua_CocoStudio_CCSkin_create01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   CCSkin* tolua_ret = (CCSkin*)  CCSkin::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSkin");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CocoStudio_CCSkin_create00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createWithSpriteFrameName of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_createWithSpriteFrameName00
static int tolua_CocoStudio_CCSkin_createWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszSpriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   CCSkin* tolua_ret = (CCSkin*)  CCSkin::createWithSpriteFrameName(pszSpriteFrameName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBone of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_getBone00
static int tolua_CocoStudio_CCSkin_getBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBone'", NULL);
#endif
  {
   CCBone* tolua_ret = (CCBone*)  self->getBone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToWorldTransform of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_nodeToWorldTransform00
static int tolua_CocoStudio_CCSkin_nodeToWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToWorldTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToWorldTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_initWithFile00
static int tolua_CocoStudio_CCSkin_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(pszFilename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToWorldTransformAR of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_nodeToWorldTransformAR00
static int tolua_CocoStudio_CCSkin_nodeToWorldTransformAR00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToWorldTransformAR'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToWorldTransformAR();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToWorldTransformAR'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateTransform of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_updateTransform00
static int tolua_CocoStudio_CCSkin_updateTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateTransform'", NULL);
#endif
  {
   self->updateTransform();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayName of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_getDisplayName00
static int tolua_CocoStudio_CCSkin_getDisplayName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayName'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDisplayName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateArmatureTransform of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_updateArmatureTransform00
static int tolua_CocoStudio_CCSkin_updateArmatureTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateArmatureTransform'", NULL);
#endif
  {
   self->updateArmatureTransform();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateArmatureTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrameName of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_initWithSpriteFrameName00
static int tolua_CocoStudio_CCSkin_initWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
  const char* pszSpriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrameName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrameName(pszSpriteFrameName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkinData of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_setSkinData00
static int tolua_CocoStudio_CCSkin_setSkinData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCBaseData",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
  const CCBaseData* var = ((const CCBaseData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkinData'", NULL);
#endif
  {
   self->setSkinData(*var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkinData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_new00
static int tolua_CocoStudio_CCSkin_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSkin* tolua_ret = (CCSkin*)  Mtolua_new((CCSkin)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_new00_local
static int tolua_CocoStudio_CCSkin_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSkin* tolua_ret = (CCSkin*)  Mtolua_new((CCSkin)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCSkin");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkinData of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_getSkinData00
static int tolua_CocoStudio_CCSkin_getSkinData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkinData'", NULL);
#endif
  {
   const CCBaseData& tolua_ret = (const CCBaseData&)  self->getSkinData();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCBaseData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkinData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBone of class  CCSkin */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSkin_setBone00
static int tolua_CocoStudio_CCSkin_setBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCBone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSkin* self = (CCSkin*)  tolua_tousertype(tolua_S,1,0);
  CCBone* var = ((CCBone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBone'", NULL);
#endif
  {
   self->setBone(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_create00
static int tolua_CocoStudio_PageView_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PageView* tolua_ret = (PageView*)  PageView::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PageView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createInstance of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_createInstance00
static int tolua_CocoStudio_PageView_createInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCObject* tolua_ret = (CCObject*)  PageView::createInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchEnded of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_onTouchEnded00
static int tolua_CocoStudio_PageView_onTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchEnded'", NULL);
#endif
  {
   self->onTouchEnded(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurPageIndex of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getCurPageIndex00
static int tolua_CocoStudio_PageView_getCurPageIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurPageIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCurPageIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurPageIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchMoved of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_onTouchMoved00
static int tolua_CocoStudio_PageView_onTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchMoved'", NULL);
#endif
  {
   self->onTouchMoved(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getDescription00
static int tolua_CocoStudio_PageView_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurPage of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getCurPage00
static int tolua_CocoStudio_PageView_getCurPage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurPage'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getCurPage();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurPage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recyclePage of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_recyclePage00
static int tolua_CocoStudio_PageView_recyclePage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  Widget* page = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recyclePage'", NULL);
#endif
  {
   self->recyclePage(page);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recyclePage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDataSource of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getDataSource00
static int tolua_CocoStudio_PageView_getDataSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDataSource'", NULL);
#endif
  {
   PageViewDataSource* tolua_ret = (PageViewDataSource*)  self->getDataSource();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PageViewDataSource");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDataSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurPage of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_setCurPage00
static int tolua_CocoStudio_PageView_setCurPage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  Widget* var = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurPage'", NULL);
#endif
  {
   self->setCurPage(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurPage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_onEnter00
static int tolua_CocoStudio_PageView_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_delete00
static int tolua_CocoStudio_PageView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dequeuePageItem of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_dequeuePageItem00
static int tolua_CocoStudio_PageView_dequeuePageItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  const string itemId = ((const string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dequeuePageItem'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->dequeuePageItem(itemId);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
   tolua_pushcppstring(tolua_S,(const char*)itemId);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dequeuePageItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadData of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_reloadData00
static int tolua_CocoStudio_PageView_reloadData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reloadData'", NULL);
#endif
  {
   self->reloadData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadData of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_reloadData01
static int tolua_CocoStudio_PageView_reloadData01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  int wantedPageIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reloadData'", NULL);
#endif
  {
   self->reloadData(wantedPageIndex);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_PageView_reloadData00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRightChild of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getRightChild00
static int tolua_CocoStudio_PageView_getRightChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRightChild'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getRightChild();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRightChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayoutType of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getLayoutType00
static int tolua_CocoStudio_PageView_getLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayoutType'", NULL);
#endif
  {
   LayoutType tolua_ret = (LayoutType)  self->getLayoutType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRightChild of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_setRightChild00
static int tolua_CocoStudio_PageView_setRightChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  Widget* var = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRightChild'", NULL);
#endif
  {
   self->setRightChild(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRightChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enqueuePageItem of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_enqueuePageItem00
static int tolua_CocoStudio_PageView_enqueuePageItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  Widget* item = ((Widget*)  tolua_tousertype(tolua_S,2,0));
  const string itemId = ((const string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enqueuePageItem'", NULL);
#endif
  {
   self->enqueuePageItem(item,itemId);
   tolua_pushcppstring(tolua_S,(const char*)itemId);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enqueuePageItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLeftChild of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_getLeftChild00
static int tolua_CocoStudio_PageView_getLeftChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLeftChild'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getLeftChild();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLeftChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_update00
static int tolua_CocoStudio_PageView_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  float dt = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchCancelled of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_onTouchCancelled00
static int tolua_CocoStudio_PageView_onTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchCancelled'", NULL);
#endif
  {
   self->onTouchCancelled(touch,unusedEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollToPage of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_scrollToPage00
static int tolua_CocoStudio_PageView_scrollToPage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  int idx = ((int)  tolua_tonumber(tolua_S,2,0));
  bool animation = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollToPage'", NULL);
#endif
  {
   self->scrollToPage(idx,animation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollToPage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTouchBegan of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_onTouchBegan00
static int tolua_CocoStudio_PageView_onTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* touch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* unusedEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTouchBegan(touch,unusedEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_new00
static int tolua_CocoStudio_PageView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PageView* tolua_ret = (PageView*)  Mtolua_new((PageView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PageView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_new00_local
static int tolua_CocoStudio_PageView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PageView* tolua_ret = (PageView*)  Mtolua_new((PageView)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PageView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDataSource of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_setDataSource00
static int tolua_CocoStudio_PageView_setDataSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PageViewDataSource",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  PageViewDataSource* var = ((PageViewDataSource*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDataSource'", NULL);
#endif
  {
   self->setDataSource(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDataSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLeftChild of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_setLeftChild00
static int tolua_CocoStudio_PageView_setLeftChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  Widget* var = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLeftChild'", NULL);
#endif
  {
   self->setLeftChild(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLeftChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayoutType of class  PageView */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_PageView_setLayoutType00
static int tolua_CocoStudio_PageView_setLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PageView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
  LayoutType type = ((LayoutType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayoutType'", NULL);
#endif
  {
   self->setLayoutType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __UIScrollInterface__ of class  PageView */
#ifndef TOLUA_DISABLE_tolua_get_PageView___UIScrollInterface__
static int tolua_get_PageView___UIScrollInterface__(lua_State* tolua_S)
{
  PageView* self = (PageView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__UIScrollInterface__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<UIScrollInterface*>(self), "UIScrollInterface");
#else
   tolua_pushusertype(tolua_S,(void*)((UIScrollInterface*)self), "UIScrollInterface");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuadraticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionOut_create00
static int tolua_CocoStudio_CCEaseQuadraticActionOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuadraticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuadraticActionOut* tolua_ret = (CCEaseQuadraticActionOut*)  CCEaseQuadraticActionOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuadraticActionOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuadraticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuadraticActionOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionOut* self = (CCEaseQuadraticActionOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuadraticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionOut_update00
static int tolua_CocoStudio_CCEaseQuadraticActionOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionOut* self = (CCEaseQuadraticActionOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuadraticActionOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuadraticActionOut_reverse00
static int tolua_CocoStudio_CCEaseQuadraticActionOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuadraticActionOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuadraticActionOut* self = (CCEaseQuadraticActionOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: skinData of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_get_CCSpriteDisplayData_skinData
static int tolua_get_CCSpriteDisplayData_skinData(lua_State* tolua_S)
{
  CCSpriteDisplayData* self = (CCSpriteDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skinData'",NULL);
#endif
   int nID = (int)self->skinData.m_uID;
    int* pLuaID = &self->skinData.m_nLuaID;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)&self->skinData,"CCBaseData");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: skinData of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_set_CCSpriteDisplayData_skinData
static int tolua_set_CCSpriteDisplayData_skinData(lua_State* tolua_S)
{
  CCSpriteDisplayData* self = (CCSpriteDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'skinData'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCBaseData",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->skinData = *((CCBaseData*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteDisplayData_create00
static int tolua_CocoStudio_CCSpriteDisplayData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSpriteDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSpriteDisplayData* tolua_ret = (CCSpriteDisplayData*)  CCSpriteDisplayData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCSpriteDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteDisplayData_copy00
static int tolua_CocoStudio_CCSpriteDisplayData_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSpriteDisplayData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSpriteDisplayData* self = (CCSpriteDisplayData*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   self->copy(displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteDisplayData_delete00
static int tolua_CocoStudio_CCSpriteDisplayData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCSpriteDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCSpriteDisplayData* self = (CCSpriteDisplayData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteDisplayData_new00
static int tolua_CocoStudio_CCSpriteDisplayData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSpriteDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSpriteDisplayData* tolua_ret = (CCSpriteDisplayData*)  Mtolua_new((CCSpriteDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCSpriteDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCSpriteDisplayData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCSpriteDisplayData_new00_local
static int tolua_CocoStudio_CCSpriteDisplayData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCSpriteDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCSpriteDisplayData* tolua_ret = (CCSpriteDisplayData*)  Mtolua_new((CCSpriteDisplayData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCSpriteDisplayData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_create00
static int tolua_CocoStudio_CCBatchNode_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBatchNode* tolua_ret = (CCBatchNode*)  CCBatchNode::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_addChild00
static int tolua_CocoStudio_CCBatchNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
  CCNode* pChild = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_addChild01
static int tolua_CocoStudio_CCBatchNode_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
  CCNode* pChild = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCBatchNode_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_addChild02
static int tolua_CocoStudio_CCBatchNode_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
  CCNode* pChild = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_CCBatchNode_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_draw00
static int tolua_CocoStudio_CCBatchNode_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexureAtlasWithTexture of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_getTexureAtlasWithTexture00
static int tolua_CocoStudio_CCBatchNode_getTexureAtlasWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
  CCTexture2D* texture = ((CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexureAtlasWithTexture'", NULL);
#endif
  {
   CCTextureAtlas* tolua_ret = (CCTextureAtlas*)  self->getTexureAtlasWithTexture(texture);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexureAtlasWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_visit00
static int tolua_CocoStudio_CCBatchNode_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_delete00
static int tolua_CocoStudio_CCBatchNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_removeChild00
static int tolua_CocoStudio_CCBatchNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
  CCNode* child = ((CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_init00
static int tolua_CocoStudio_CCBatchNode_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBatchNode* self = (CCBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_new00
static int tolua_CocoStudio_CCBatchNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBatchNode* tolua_ret = (CCBatchNode*)  Mtolua_new((CCBatchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCBatchNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBatchNode_new00_local
static int tolua_CocoStudio_CCBatchNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBatchNode* tolua_ret = (CCBatchNode*)  Mtolua_new((CCBatchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCBatchNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEaseQuarticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionInOut_create00
static int tolua_CocoStudio_CCEaseQuarticActionInOut_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEaseQuarticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCActionInterval* pAction = ((CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   CCEaseQuarticActionInOut* tolua_ret = (CCEaseQuarticActionInOut*)  CCEaseQuarticActionInOut::create(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEaseQuarticActionInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  CCEaseQuarticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionInOut_copyWithZone00
static int tolua_CocoStudio_CCEaseQuarticActionInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionInOut* self = (CCEaseQuarticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  CCZone* pZone = ((CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   CCObject* tolua_ret = (CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  CCEaseQuarticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionInOut_update00
static int tolua_CocoStudio_CCEaseQuarticActionInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionInOut* self = (CCEaseQuarticActionInOut*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  CCEaseQuarticActionInOut */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEaseQuarticActionInOut_reverse00
static int tolua_CocoStudio_CCEaseQuarticActionInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEaseQuarticActionInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEaseQuarticActionInOut* self = (CCEaseQuarticActionInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_create00
static int tolua_CocoStudio_RichText_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichText* tolua_ret = (RichText*)  RichText::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RichText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertElement of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_insertElement00
static int tolua_CocoStudio_RichText_insertElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RichElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  RichElement* element = ((RichElement*)  tolua_tousertype(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertElement'", NULL);
#endif
  {
   self->insertElement(element,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_setAnchorPoint00
static int tolua_CocoStudio_RichText_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pt = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushBackElement of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_pushBackElement00
static int tolua_CocoStudio_RichText_pushBackElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RichElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  RichElement* element = ((RichElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushBackElement'", NULL);
#endif
  {
   self->pushBackElement(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushBackElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: formatText of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_formatText00
static int tolua_CocoStudio_RichText_formatText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'formatText'", NULL);
#endif
  {
   self->formatText();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'formatText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ignoreContentAdaptWithSize of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_ignoreContentAdaptWithSize00
static int tolua_CocoStudio_RichText_ignoreContentAdaptWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  bool ignore = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ignoreContentAdaptWithSize'", NULL);
#endif
  {
   self->ignoreContentAdaptWithSize(ignore);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ignoreContentAdaptWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVerticalSpace of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_setVerticalSpace00
static int tolua_CocoStudio_RichText_setVerticalSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  float space = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVerticalSpace'", NULL);
#endif
  {
   self->setVerticalSpace(space);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVerticalSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_visit00
static int tolua_CocoStudio_RichText_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_delete00
static int tolua_CocoStudio_RichText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_getContentSize00
static int tolua_CocoStudio_RichText_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   const CCSize& tolua_ret = (const CCSize&)  self->getContentSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_new00
static int tolua_CocoStudio_RichText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichText* tolua_ret = (RichText*)  Mtolua_new((RichText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RichText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_new00_local
static int tolua_CocoStudio_RichText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RichText* tolua_ret = (RichText*)  Mtolua_new((RichText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RichText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeElement of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_removeElement00
static int tolua_CocoStudio_RichText_removeElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RichElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  RichElement* element = ((RichElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeElement'", NULL);
#endif
  {
   self->removeElement(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeElement of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_removeElement01
static int tolua_CocoStudio_RichText_removeElement01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeElement'", NULL);
#endif
  {
   self->removeElement(index);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CocoStudio_RichText_removeElement00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  RichText */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RichText_getDescription00
static int tolua_CocoStudio_RichText_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RichText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RichText* self = (RichText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   string tolua_ret = (string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_create00
static int tolua_CocoStudio_TouchGroup_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TouchGroup* tolua_ret = (TouchGroup*)  TouchGroup::create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TouchGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRootWidget of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_getRootWidget00
static int tolua_CocoStudio_TouchGroup_getRootWidget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRootWidget'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getRootWidget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRootWidget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeWidget of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_removeWidget00
static int tolua_CocoStudio_TouchGroup_removeWidget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  Widget* widget = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeWidget'", NULL);
#endif
  {
   self->removeWidget(widget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeWidget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_onEnter00
static int tolua_CocoStudio_TouchGroup_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_onExit00
static int tolua_CocoStudio_TouchGroup_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_ccTouchBegan00
static int tolua_CocoStudio_TouchGroup_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWidgetByTag of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_getWidgetByTag00
static int tolua_CocoStudio_TouchGroup_getWidgetByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWidgetByTag'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getWidgetByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWidgetByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_delete00
static int tolua_CocoStudio_TouchGroup_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_ccTouchCancelled00
static int tolua_CocoStudio_TouchGroup_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_ccTouchEnded00
static int tolua_CocoStudio_TouchGroup_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_init00
static int tolua_CocoStudio_TouchGroup_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWidgetByName of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_getWidgetByName00
static int tolua_CocoStudio_TouchGroup_getWidgetByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWidgetByName'", NULL);
#endif
  {
   Widget* tolua_ret = (Widget*)  self->getWidgetByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Widget");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWidgetByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_new00
static int tolua_CocoStudio_TouchGroup_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TouchGroup* tolua_ret = (TouchGroup*)  Mtolua_new((TouchGroup)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TouchGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_new00_local
static int tolua_CocoStudio_TouchGroup_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TouchGroup* tolua_ret = (TouchGroup*)  Mtolua_new((TouchGroup)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TouchGroup");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_ccTouchMoved00
static int tolua_CocoStudio_TouchGroup_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  CCTouch* pTouch = ((CCTouch*)  tolua_tousertype(tolua_S,2,0));
  CCEvent* pEvent = ((CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWidget of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_addWidget00
static int tolua_CocoStudio_TouchGroup_addWidget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Widget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
  Widget* widget = ((Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWidget'", NULL);
#endif
  {
   self->addWidget(widget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWidget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_clear00
static int tolua_CocoStudio_TouchGroup_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnterTransitionDidFinish of class  TouchGroup */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_TouchGroup_onEnterTransitionDidFinish00
static int tolua_CocoStudio_TouchGroup_onEnterTransitionDidFinish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TouchGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TouchGroup* self = (TouchGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnterTransitionDidFinish'", NULL);
#endif
  {
   self->onEnterTransitionDidFinish();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnterTransitionDidFinish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_create00
static int tolua_CocoStudio_RelativeLayoutParameter_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RelativeLayoutParameter* tolua_ret = (RelativeLayoutParameter*)  RelativeLayoutParameter::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RelativeLayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAlign of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_setAlign00
static int tolua_CocoStudio_RelativeLayoutParameter_setAlign00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  RelativeAlign align = ((RelativeAlign) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAlign'", NULL);
#endif
  {
   self->setAlign(align);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAlign'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyProperties of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_copyProperties00
static int tolua_CocoStudio_RelativeLayoutParameter_copyProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  LayoutParameter* model = ((LayoutParameter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyProperties'", NULL);
#endif
  {
   self->copyProperties(model);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_delete00
static int tolua_CocoStudio_RelativeLayoutParameter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativeToWidgetName of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_setRelativeToWidgetName00
static int tolua_CocoStudio_RelativeLayoutParameter_setRelativeToWidgetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativeToWidgetName'", NULL);
#endif
  {
   self->setRelativeToWidgetName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativeToWidgetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeName of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_getRelativeName00
static int tolua_CocoStudio_RelativeLayoutParameter_getRelativeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getRelativeName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeToWidgetName of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_getRelativeToWidgetName00
static int tolua_CocoStudio_RelativeLayoutParameter_getRelativeToWidgetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeToWidgetName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getRelativeToWidgetName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeToWidgetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativeName of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_setRelativeName00
static int tolua_CocoStudio_RelativeLayoutParameter_setRelativeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativeName'", NULL);
#endif
  {
   self->setRelativeName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_new00
static int tolua_CocoStudio_RelativeLayoutParameter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RelativeLayoutParameter* tolua_ret = (RelativeLayoutParameter*)  Mtolua_new((RelativeLayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RelativeLayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_new00_local
static int tolua_CocoStudio_RelativeLayoutParameter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RelativeLayoutParameter* tolua_ret = (RelativeLayoutParameter*)  Mtolua_new((RelativeLayoutParameter)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"RelativeLayoutParameter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAlign of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_getAlign00
static int tolua_CocoStudio_RelativeLayoutParameter_getAlign00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAlign'", NULL);
#endif
  {
   RelativeAlign tolua_ret = (RelativeAlign)  self->getAlign();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlign'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createCloneInstance of class  RelativeLayoutParameter */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_RelativeLayoutParameter_createCloneInstance00
static int tolua_CocoStudio_RelativeLayoutParameter_createCloneInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RelativeLayoutParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RelativeLayoutParameter* self = (RelativeLayoutParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createCloneInstance'", NULL);
#endif
  {
   LayoutParameter* tolua_ret = (LayoutParameter*)  self->createCloneInstance();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"LayoutParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createCloneInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: name of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCBoneData_name
static int tolua_get_CCBoneData_name(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: name of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCBoneData_name
static int tolua_set_CCBoneData_name(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->name = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: parentName of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCBoneData_parentName
static int tolua_get_CCBoneData_parentName(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'parentName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->parentName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: parentName of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCBoneData_parentName
static int tolua_set_CCBoneData_parentName(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'parentName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->parentName = ((string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: displayDataList of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCBoneData_displayDataList
static int tolua_get_CCBoneData_displayDataList(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayDataList'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->displayDataList,"CCArray");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: displayDataList of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCBoneData_displayDataList
static int tolua_set_CCBoneData_displayDataList(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'displayDataList'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCArray",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->displayDataList = *((CCArray*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: boneDataTransform of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_get_CCBoneData_boneDataTransform
static int tolua_get_CCBoneData_boneDataTransform(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boneDataTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->boneDataTransform,"CCAffineTransform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: boneDataTransform of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_set_CCBoneData_boneDataTransform
static int tolua_set_CCBoneData_boneDataTransform(lua_State* tolua_S)
{
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boneDataTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCAffineTransform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->boneDataTransform = *((CCAffineTransform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_create00
static int tolua_CocoStudio_CCBoneData_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBoneData* tolua_ret = (CCBoneData*)  CCBoneData::create();
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplayData of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_getDisplayData00
static int tolua_CocoStudio_CCBoneData_getDisplayData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplayData'", NULL);
#endif
  {
   CCDisplayData* tolua_ret = (CCDisplayData*)  self->getDisplayData(index);
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCDisplayData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplayData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_init00
static int tolua_CocoStudio_CCBoneData_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_delete00
static int tolua_CocoStudio_CCBoneData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDisplayData of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_addDisplayData00
static int tolua_CocoStudio_CCBoneData_addDisplayData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDisplayData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCBoneData* self = (CCBoneData*)  tolua_tousertype(tolua_S,1,0);
  CCDisplayData* displayData = ((CCDisplayData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDisplayData'", NULL);
#endif
  {
   self->addDisplayData(displayData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDisplayData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_new00
static int tolua_CocoStudio_CCBoneData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBoneData* tolua_ret = (CCBoneData*)  Mtolua_new((CCBoneData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBoneData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCBoneData */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCBoneData_new00_local
static int tolua_CocoStudio_CCBoneData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCBoneData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCBoneData* tolua_ret = (CCBoneData*)  Mtolua_new((CCBoneData)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"CCBoneData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleY of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_setScaleY00
static int tolua_CocoStudio_ActionScaleFrame_setScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float scaleY = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleY'", NULL);
#endif
  {
   self->setScaleY(scaleY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleX of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_setScaleX00
static int tolua_CocoStudio_ActionScaleFrame_setScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float scaleX = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleX'", NULL);
#endif
  {
   self->setScaleX(scaleX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleY of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_getScaleY00
static int tolua_CocoStudio_ActionScaleFrame_getScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleX of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_getScaleX00
static int tolua_CocoStudio_ActionScaleFrame_getScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_delete00
static int tolua_CocoStudio_ActionScaleFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAction of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_getAction00
static int tolua_CocoStudio_ActionScaleFrame_getAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ActionScaleFrame* self = (ActionScaleFrame*)  tolua_tousertype(tolua_S,1,0);
  float fDuration = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAction'", NULL);
#endif
  {
   CCActionInterval* tolua_ret = (CCActionInterval*)  self->getAction(fDuration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_new00
static int tolua_CocoStudio_ActionScaleFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionScaleFrame* tolua_ret = (ActionScaleFrame*)  Mtolua_new((ActionScaleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionScaleFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ActionScaleFrame */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_ActionScaleFrame_new00_local
static int tolua_CocoStudio_ActionScaleFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ActionScaleFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ActionScaleFrame* tolua_ret = (ActionScaleFrame*)  Mtolua_new((ActionScaleFrame)());
    int nID = (tolua_ret) ? (int)tolua_ret->m_uID : -1;
    int* pLuaID = (tolua_ret) ? &tolua_ret->m_nLuaID : NULL;
    toluafix_pushusertype_ccobject(tolua_S, nID, pLuaID, (void*)tolua_ret,"ActionScaleFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: create of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_create00
static int tolua_CocoStudio_CCEditBox_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
  CCScale9Sprite* pNormal9SpriteBg = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,3,0));
  CCScale9Sprite* pPressed9SpriteBg = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,4,0));
  CCScale9Sprite* pDisabled9SpriteBg = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,5,0));
  {
   CCEditBox* tolua_ret = (CCEditBox*)  CCEditBox::create(*size,pNormal9SpriteBg,pPressed9SpriteBg,pDisabled9SpriteBg);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setAnchorPoint00
static int tolua_CocoStudio_CCEditBox_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* anchorPoint = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(*anchorPoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_onEnter00
static int tolua_CocoStudio_CCEditBox_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyboardDidShow of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_keyboardDidShow00
static int tolua_CocoStudio_CCEditBox_keyboardDidShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyboardDidShow'", NULL);
#endif
  {
   self->keyboardDidShow(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyboardDidShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScriptEditBoxHandler of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_getScriptEditBoxHandler00
static int tolua_CocoStudio_CCEditBox_getScriptEditBoxHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScriptEditBoxHandler'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getScriptEditBoxHandler();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScriptEditBoxHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_getText00
static int tolua_CocoStudio_CCEditBox_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getText();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyboardDidHide of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_keyboardDidHide00
static int tolua_CocoStudio_CCEditBox_keyboardDidHide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyboardDidHide'", NULL);
#endif
  {
   self->keyboardDidHide(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyboardDidHide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceholderFontName of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPlaceholderFontName00
static int tolua_CocoStudio_CCEditBox_setPlaceholderFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pFontName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceholderFontName'", NULL);
#endif
  {
   self->setPlaceholderFontName(pFontName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceholderFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlaceHolder of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_getPlaceHolder00
static int tolua_CocoStudio_CCEditBox_getPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlaceHolder'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getPlaceHolder();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontName of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setFontName00
static int tolua_CocoStudio_CCEditBox_setFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pFontName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontName'", NULL);
#endif
  {
   self->setFontName(pFontName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerScriptEditBoxHandler of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_registerScriptEditBoxHandler00
static int tolua_CocoStudio_CCEditBox_registerScriptEditBoxHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  int handler = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerScriptEditBoxHandler'", NULL);
#endif
  {
   self->registerScriptEditBoxHandler(handler);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerScriptEditBoxHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_visit00
static int tolua_CocoStudio_CCEditBox_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceholderFontSize of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPlaceholderFontSize00
static int tolua_CocoStudio_CCEditBox_setPlaceholderFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  int fontSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceholderFontSize'", NULL);
#endif
  {
   self->setPlaceholderFontSize(fontSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceholderFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_delete00
static int tolua_CocoStudio_CCEditBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unregisterScriptEditBoxHandler of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_unregisterScriptEditBoxHandler00
static int tolua_CocoStudio_CCEditBox_unregisterScriptEditBoxHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unregisterScriptEditBoxHandler'", NULL);
#endif
  {
   self->unregisterScriptEditBoxHandler();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregisterScriptEditBoxHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyboardWillShow of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_keyboardWillShow00
static int tolua_CocoStudio_CCEditBox_keyboardWillShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyboardWillShow'", NULL);
#endif
  {
   self->keyboardWillShow(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyboardWillShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceholderFontColor of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPlaceholderFontColor00
static int tolua_CocoStudio_CCEditBox_setPlaceholderFontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceholderFontColor'", NULL);
#endif
  {
   self->setPlaceholderFontColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceholderFontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontColor of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setFontColor00
static int tolua_CocoStudio_CCEditBox_setFontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const ccColor3B* color = ((const ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontColor'", NULL);
#endif
  {
   self->setFontColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyboardWillHide of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_keyboardWillHide00
static int tolua_CocoStudio_CCEditBox_keyboardWillHide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyboardWillHide'", NULL);
#endif
  {
   self->keyboardWillHide(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyboardWillHide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchDownAction of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_touchDownAction00
static int tolua_CocoStudio_CCEditBox_touchDownAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCObject* sender = ((CCObject*)  tolua_tousertype(tolua_S,2,0));
  unsigned int controlEvent = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchDownAction'", NULL);
#endif
  {
   self->touchDownAction(sender,controlEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchDownAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceholderFont of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPlaceholderFont00
static int tolua_CocoStudio_CCEditBox_setPlaceholderFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pFontName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int fontSize = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceholderFont'", NULL);
#endif
  {
   self->setPlaceholderFont(pFontName,fontSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceholderFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelegate of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setDelegate00
static int tolua_CocoStudio_CCEditBox_setDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCEditBoxDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  CCEditBoxDelegate* pDelegate = ((CCEditBoxDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelegate'", NULL);
#endif
  {
   self->setDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontSize of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setFontSize00
static int tolua_CocoStudio_CCEditBox_setFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  int fontSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFontSize'", NULL);
#endif
  {
   self->setFontSize(fontSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSizeAndBackgroundSprite of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_initWithSizeAndBackgroundSprite00
static int tolua_CocoStudio_CCEditBox_initWithSizeAndBackgroundSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"CCScale9Sprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
  CCScale9Sprite* pNormal9SpriteBg = ((CCScale9Sprite*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSizeAndBackgroundSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSizeAndBackgroundSprite(*size,pNormal9SpriteBg);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSizeAndBackgroundSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceHolder of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPlaceHolder00
static int tolua_CocoStudio_CCEditBox_setPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pText = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceHolder'", NULL);
#endif
  {
   self->setPlaceHolder(pText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setPosition00
static int tolua_CocoStudio_CCEditBox_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const CCPoint* pos = ((const CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelegate of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_getDelegate00
static int tolua_CocoStudio_CCEditBox_getDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelegate'", NULL);
#endif
  {
   CCEditBoxDelegate* tolua_ret = (CCEditBoxDelegate*)  self->getDelegate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEditBoxDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxLength of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_getMaxLength00
static int tolua_CocoStudio_CCEditBox_getMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setText00
static int tolua_CocoStudio_CCEditBox_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pText = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'", NULL);
#endif
  {
   self->setText(pText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_onExit00
static int tolua_CocoStudio_CCEditBox_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxLength of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setMaxLength00
static int tolua_CocoStudio_CCEditBox_setMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  int maxLength = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxLength'", NULL);
#endif
  {
   self->setMaxLength(maxLength);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSize of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setContentSize00
static int tolua_CocoStudio_CCEditBox_setContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const CCSize* size = ((const CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSize'", NULL);
#endif
  {
   self->setContentSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_new00
static int tolua_CocoStudio_CCEditBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCEditBox* tolua_ret = (CCEditBox*)  Mtolua_new((CCEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_new00_local
static int tolua_CocoStudio_CCEditBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCEditBox* tolua_ret = (CCEditBox*)  Mtolua_new((CCEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCEditBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFont of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setFont00
static int tolua_CocoStudio_CCEditBox_setFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  const char* pFontName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int fontSize = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFont'", NULL);
#endif
  {
   self->setFont(pFontName,fontSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_CCEditBox_setVisible00
static int tolua_CocoStudio_CCEditBox_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCIMEDelegate__ of class  CCEditBox */
#ifndef TOLUA_DISABLE_tolua_get_CCEditBox___CCIMEDelegate__
static int tolua_get_CCEditBox___CCIMEDelegate__(lua_State* tolua_S)
{
  CCEditBox* self = (CCEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCIMEDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCIMEDelegate*>(self), "CCIMEDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCIMEDelegate*)self), "CCIMEDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: src of class  ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_get_ccBlendFunc_unsigned_src
static int tolua_get_ccBlendFunc_unsigned_src(lua_State* tolua_S)
{
  ccBlendFunc* self = (ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'src'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->src);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: src of class  ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_set_ccBlendFunc_unsigned_src
static int tolua_set_ccBlendFunc_unsigned_src(lua_State* tolua_S)
{
  ccBlendFunc* self = (ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'src'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->src = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dst of class  ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_get_ccBlendFunc_unsigned_dst
static int tolua_get_ccBlendFunc_unsigned_dst(lua_State* tolua_S)
{
  ccBlendFunc* self = (ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dst'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dst);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dst of class  ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_set_ccBlendFunc_unsigned_dst
static int tolua_set_ccBlendFunc_unsigned_dst(lua_State* tolua_S)
{
  ccBlendFunc* self = (ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dst'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dst = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_cAttribNum of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoObjectDesc_unsigned_m_cAttribNum
static int tolua_get_stExpCocoObjectDesc_unsigned_m_cAttribNum(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_cAttribNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_cAttribNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_cAttribNum of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoObjectDesc_unsigned_m_cAttribNum
static int tolua_set_stExpCocoObjectDesc_unsigned_m_cAttribNum(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_cAttribNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_cAttribNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_szName of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoObjectDesc_unsigned_m_szName
static int tolua_get_stExpCocoObjectDesc_unsigned_m_szName(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szName'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_szName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_szName of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoObjectDesc_unsigned_m_szName
static int tolua_set_stExpCocoObjectDesc_unsigned_m_szName(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szName'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_szName = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_pAttribDescArray of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoObjectDesc_unsigned_m_pAttribDescArray
static int tolua_get_stExpCocoObjectDesc_unsigned_m_pAttribDescArray(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_pAttribDescArray'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_pAttribDescArray);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_pAttribDescArray of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoObjectDesc_unsigned_m_pAttribDescArray
static int tolua_set_stExpCocoObjectDesc_unsigned_m_pAttribDescArray(lua_State* tolua_S)
{
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_pAttribDescArray'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_pAttribDescArray = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAttribDescArray of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoObjectDesc_GetAttribDescArray00
static int tolua_CocoStudio_stExpCocoObjectDesc_GetAttribDescArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoObjectDesc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAttribDescArray'", NULL);
#endif
  {
   stExpCocoAttribDesc* tolua_ret = (stExpCocoAttribDesc*)  self->GetAttribDescArray(pCoco);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoAttribDesc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAttribDescArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoObjectDesc_GetName00
static int tolua_CocoStudio_stExpCocoObjectDesc_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoObjectDesc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetName(pCoco);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAttribNum of class  stExpCocoObjectDesc */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoObjectDesc_GetAttribNum00
static int tolua_CocoStudio_stExpCocoObjectDesc_GetAttribNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoObjectDesc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoObjectDesc* self = (stExpCocoObjectDesc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAttribNum'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetAttribNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAttribNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: begin of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_begin
static int tolua_get_CCIMEKeyboardNotificationInfo_begin(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'begin'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->begin,"CCRect");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: begin of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_begin
static int tolua_set_CCIMEKeyboardNotificationInfo_begin(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'begin'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->begin = *((CCRect*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: end of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_end
static int tolua_get_CCIMEKeyboardNotificationInfo_end(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->end,"CCRect");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: end of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_end
static int tolua_set_CCIMEKeyboardNotificationInfo_end(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->end = *((CCRect*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: duration of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_duration
static int tolua_get_CCIMEKeyboardNotificationInfo_duration(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->duration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: duration of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_duration
static int tolua_set_CCIMEKeyboardNotificationInfo_duration(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->duration = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nDataSize of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_nDataSize
static int tolua_get_stCocoFileHeader_unsigned_m_nDataSize(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nDataSize'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nDataSize);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nDataSize of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_nDataSize
static int tolua_set_stCocoFileHeader_unsigned_m_nDataSize(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nDataSize'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nDataSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nCompressSize of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_nCompressSize
static int tolua_get_stCocoFileHeader_unsigned_m_nCompressSize(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCompressSize'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_nCompressSize);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nCompressSize of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_nCompressSize
static int tolua_set_stCocoFileHeader_unsigned_m_nCompressSize(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nCompressSize'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nCompressSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ObjectCount of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_ObjectCount
static int tolua_get_stCocoFileHeader_unsigned_m_ObjectCount(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ObjectCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_ObjectCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ObjectCount of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_ObjectCount
static int tolua_set_stCocoFileHeader_unsigned_m_ObjectCount(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ObjectCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_ObjectCount = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_lAttribMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_lAttribMemAddr
static int tolua_get_stCocoFileHeader_unsigned_m_lAttribMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_lAttribMemAddr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_lAttribMemAddr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_lAttribMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_lAttribMemAddr
static int tolua_set_stCocoFileHeader_unsigned_m_lAttribMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_lAttribMemAddr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_lAttribMemAddr = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_CocoNodeMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_CocoNodeMemAddr
static int tolua_get_stCocoFileHeader_unsigned_m_CocoNodeMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CocoNodeMemAddr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_CocoNodeMemAddr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_CocoNodeMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_CocoNodeMemAddr
static int tolua_set_stCocoFileHeader_unsigned_m_CocoNodeMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_CocoNodeMemAddr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_CocoNodeMemAddr = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_lStringMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_get_stCocoFileHeader_unsigned_m_lStringMemAddr
static int tolua_get_stCocoFileHeader_unsigned_m_lStringMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_lStringMemAddr'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_lStringMemAddr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_lStringMemAddr of class  stCocoFileHeader */
#ifndef TOLUA_DISABLE_tolua_set_stCocoFileHeader_unsigned_m_lStringMemAddr
static int tolua_set_stCocoFileHeader_unsigned_m_lStringMemAddr(lua_State* tolua_S)
{
  stCocoFileHeader* self = (stCocoFileHeader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_lStringMemAddr'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_lStringMemAddr = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor3B_unsigned_r
static int tolua_get_ccColor3B_unsigned_r(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor3B_unsigned_r
static int tolua_set_ccColor3B_unsigned_r(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor3B_unsigned_g
static int tolua_get_ccColor3B_unsigned_g(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor3B_unsigned_g
static int tolua_set_ccColor3B_unsigned_g(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor3B_unsigned_b
static int tolua_get_ccColor3B_unsigned_b(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor3B_unsigned_b
static int tolua_set_ccColor3B_unsigned_b(lua_State* tolua_S)
{
  ccColor3B* self = (ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: h of class  HSV */
#ifndef TOLUA_DISABLE_tolua_get_HSV_h
static int tolua_get_HSV_h(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'h'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->h);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: h of class  HSV */
#ifndef TOLUA_DISABLE_tolua_set_HSV_h
static int tolua_set_HSV_h(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'h'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->h = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: s of class  HSV */
#ifndef TOLUA_DISABLE_tolua_get_HSV_s
static int tolua_get_HSV_s(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 's'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->s);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: s of class  HSV */
#ifndef TOLUA_DISABLE_tolua_set_HSV_s
static int tolua_set_HSV_s(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 's'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->s = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: v of class  HSV */
#ifndef TOLUA_DISABLE_tolua_get_HSV_v
static int tolua_get_HSV_v(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->v);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: v of class  HSV */
#ifndef TOLUA_DISABLE_tolua_set_HSV_v
static int tolua_set_HSV_v(lua_State* tolua_S)
{
  HSV* self = (HSV*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->v = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ObjIndex of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoNode_m_ObjIndex
static int tolua_get_stExpCocoNode_m_ObjIndex(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ObjIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_ObjIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ObjIndex of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoNode_m_ObjIndex
static int tolua_set_stExpCocoNode_m_ObjIndex(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ObjIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_ObjIndex = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_AttribIndex of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoNode_m_AttribIndex
static int tolua_get_stExpCocoNode_m_AttribIndex(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_AttribIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_AttribIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_AttribIndex of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoNode_m_AttribIndex
static int tolua_set_stExpCocoNode_m_AttribIndex(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_AttribIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_AttribIndex = ((short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ChildNum of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoNode_unsigned_m_ChildNum
static int tolua_get_stExpCocoNode_unsigned_m_ChildNum(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ChildNum'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_ChildNum);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ChildNum of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoNode_unsigned_m_ChildNum
static int tolua_set_stExpCocoNode_unsigned_m_ChildNum(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ChildNum'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_ChildNum = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_szValue of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoNode_unsigned_m_szValue
static int tolua_get_stExpCocoNode_unsigned_m_szValue(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_szValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_szValue of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoNode_unsigned_m_szValue
static int tolua_set_stExpCocoNode_unsigned_m_szValue(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_szValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_szValue = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_ChildArray of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_get_stExpCocoNode_unsigned_m_ChildArray
static int tolua_get_stExpCocoNode_unsigned_m_ChildArray(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ChildArray'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_ChildArray);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_ChildArray of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_set_stExpCocoNode_unsigned_m_ChildArray
static int tolua_set_stExpCocoNode_unsigned_m_ChildArray(lua_State* tolua_S)
{
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_ChildArray'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_ChildArray = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildArray of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoNode_GetChildArray00
static int tolua_CocoStudio_stExpCocoNode_GetChildArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildArray'", NULL);
#endif
  {
   stExpCocoNode* tolua_ret = (stExpCocoNode*)  self->GetChildArray(pCoco);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"stExpCocoNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: WriteJson of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoNode_WriteJson00
static int tolua_CocoStudio_stExpCocoNode_WriteJson00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
  void* pFileName = ((void*)  tolua_touserdata(tolua_S,3,0));
  int vLayer = ((int)  tolua_tonumber(tolua_S,4,0));
  bool bEndNode = ((bool)  tolua_toboolean(tolua_S,5,0));
  bool bParentNodeIsArray = ((bool)  tolua_toboolean(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'WriteJson'", NULL);
#endif
  {
   self->WriteJson(pCoco,pFileName,vLayer,bEndNode,bParentNodeIsArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'WriteJson'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoNode_GetName00
static int tolua_CocoStudio_stExpCocoNode_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetName(pCoco);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoNode_GetValue00
static int tolua_CocoStudio_stExpCocoNode_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CocoLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
  CocoLoader* pCoco = ((CocoLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->GetValue(pCoco);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildNum of class  stExpCocoNode */
#ifndef TOLUA_DISABLE_tolua_CocoStudio_stExpCocoNode_GetChildNum00
static int tolua_CocoStudio_stExpCocoNode_GetChildNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"stExpCocoNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  stExpCocoNode* self = (stExpCocoNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildNum'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetChildNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor4B_unsigned_r
static int tolua_get_ccColor4B_unsigned_r(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor4B_unsigned_r
static int tolua_set_ccColor4B_unsigned_r(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor4B_unsigned_g
static int tolua_get_ccColor4B_unsigned_g(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor4B_unsigned_g
static int tolua_set_ccColor4B_unsigned_g(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor4B_unsigned_b
static int tolua_get_ccColor4B_unsigned_b(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor4B_unsigned_b
static int tolua_set_ccColor4B_unsigned_b(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_ccColor4B_unsigned_a
static int tolua_get_ccColor4B_unsigned_a(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_ccColor4B_unsigned_a
static int tolua_set_ccColor4B_unsigned_a(lua_State* tolua_S)
{
  ccColor4B* self = (ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_get_RGBA_r
static int tolua_get_RGBA_r(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_set_RGBA_r
static int tolua_set_RGBA_r(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_get_RGBA_g
static int tolua_get_RGBA_g(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_set_RGBA_g
static int tolua_set_RGBA_g(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_get_RGBA_b
static int tolua_get_RGBA_b(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_set_RGBA_b
static int tolua_set_RGBA_b(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_get_RGBA_a
static int tolua_get_RGBA_a(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  RGBA */
#ifndef TOLUA_DISABLE_tolua_set_RGBA_a
static int tolua_set_RGBA_a(lua_State* tolua_S)
{
  RGBA* self = (RGBA*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_a
static int tolua_get_CCAffineTransform_a(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_a
static int tolua_set_CCAffineTransform_a(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_b
static int tolua_get_CCAffineTransform_b(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_b
static int tolua_set_CCAffineTransform_b(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: c of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_c
static int tolua_get_CCAffineTransform_c(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->c);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: c of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_c
static int tolua_set_CCAffineTransform_c(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->c = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: d of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_d
static int tolua_get_CCAffineTransform_d(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'd'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->d);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: d of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_d
static int tolua_set_CCAffineTransform_d(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'd'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->d = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tx of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_tx
static int tolua_get_CCAffineTransform_tx(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tx'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tx of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_tx
static int tolua_set_CCAffineTransform_tx(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tx'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tx = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ty of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_get_CCAffineTransform_ty
static int tolua_get_CCAffineTransform_ty(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ty'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ty);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ty of class  CCAffineTransform */
#ifndef TOLUA_DISABLE_tolua_set_CCAffineTransform_ty
static int tolua_set_CCAffineTransform_ty(lua_State* tolua_S)
{
  CCAffineTransform* self = (CCAffineTransform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ty'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ty = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_CocoStudio_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_cclass(tolua_S,"CCEaseCubicActionInOut","CCEaseCubicActionInOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCubicActionInOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCubicActionInOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCubicActionInOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCubicActionInOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCubicActionInOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionFrame","ActionFrame","CCObject",tolua_collect_ActionFrame);
  #else
  tolua_cclass(tolua_S,"ActionFrame","ActionFrame","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionFrame");
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionFrame_getAction00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionFrame_getAction01);
   tolua_function(tolua_S,"getFrameType",tolua_CocoStudio_ActionFrame_getFrameType00);
   tolua_function(tolua_S,"setFrameTime",tolua_CocoStudio_ActionFrame_setFrameTime00);
   tolua_function(tolua_S,"setEasingType",tolua_CocoStudio_ActionFrame_setEasingType00);
   tolua_function(tolua_S,"getFrameTime",tolua_CocoStudio_ActionFrame_getFrameTime00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionFrame_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionFrame_new00_local);
   tolua_function(tolua_S,"getFrameIndex",tolua_CocoStudio_ActionFrame_getFrameIndex00);
   tolua_function(tolua_S,"setFrameType",tolua_CocoStudio_ActionFrame_setFrameType00);
   tolua_function(tolua_S,"setFrameIndex",tolua_CocoStudio_ActionFrame_setFrameIndex00);
   tolua_function(tolua_S,"getEasingType",tolua_CocoStudio_ActionFrame_getEasingType00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCFrameData","CCFrameData","CCBaseData",tolua_collect_CCFrameData);
  #else
  tolua_cclass(tolua_S,"CCFrameData","CCFrameData","CCBaseData",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCFrameData");
   tolua_variable(tolua_S,"frameID",tolua_get_CCFrameData_frameID,tolua_set_CCFrameData_frameID);
   tolua_variable(tolua_S,"duration",tolua_get_CCFrameData_duration,tolua_set_CCFrameData_duration);
   tolua_variable(tolua_S,"easingParamNumber",tolua_get_CCFrameData_easingParamNumber,tolua_set_CCFrameData_easingParamNumber);
   tolua_variable(tolua_S,"isTween",tolua_get_CCFrameData_isTween,tolua_set_CCFrameData_isTween);
   tolua_variable(tolua_S,"displayIndex",tolua_get_CCFrameData_displayIndex,tolua_set_CCFrameData_displayIndex);
   tolua_variable(tolua_S,"blendFunc",tolua_get_CCFrameData_blendFunc,tolua_set_CCFrameData_blendFunc);
   tolua_variable(tolua_S,"strEvent",tolua_get_CCFrameData_strEvent,tolua_set_CCFrameData_strEvent);
   tolua_variable(tolua_S,"strMovement",tolua_get_CCFrameData_strMovement,tolua_set_CCFrameData_strMovement);
   tolua_variable(tolua_S,"strSound",tolua_get_CCFrameData_strSound,tolua_set_CCFrameData_strSound);
   tolua_variable(tolua_S,"strSoundEffect",tolua_get_CCFrameData_strSoundEffect,tolua_set_CCFrameData_strSoundEffect);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCFrameData_create00);
   tolua_function(tolua_S,"copy",tolua_CocoStudio_CCFrameData_copy00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCFrameData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCFrameData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCFrameData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCFrameData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TextField","TextField","Widget",tolua_collect_TextField);
  #else
  tolua_cclass(tolua_S,"TextField","TextField","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TextField");
   tolua_function(tolua_S,"create",tolua_CocoStudio_TextField_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_TextField_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_TextField_setAnchorPoint00);
   tolua_function(tolua_S,"setAttachWithIME",tolua_CocoStudio_TextField_setAttachWithIME00);
   tolua_function(tolua_S,"getFontSize",tolua_CocoStudio_TextField_getFontSize00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_TextField_onEnter00);
   tolua_function(tolua_S,"getStringValue",tolua_CocoStudio_TextField_getStringValue00);
   tolua_function(tolua_S,"setPasswordStyleText",tolua_CocoStudio_TextField_setPasswordStyleText00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_TextField_getDescription00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_TextField_getVirtualRenderer00);
   tolua_function(tolua_S,"getDeleteBackward",tolua_CocoStudio_TextField_getDeleteBackward00);
   tolua_function(tolua_S,"getPlaceHolder",tolua_CocoStudio_TextField_getPlaceHolder00);
   tolua_function(tolua_S,"getAttachWithIME",tolua_CocoStudio_TextField_getAttachWithIME00);
   tolua_function(tolua_S,"setFontName",tolua_CocoStudio_TextField_setFontName00);
   tolua_function(tolua_S,"getInsertText",tolua_CocoStudio_TextField_getInsertText00);
   tolua_function(tolua_S,"setInsertText",tolua_CocoStudio_TextField_setInsertText00);
   tolua_function(tolua_S,"getDetachWithIME",tolua_CocoStudio_TextField_getDetachWithIME00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_TextField_delete00);
   tolua_function(tolua_S,"setTextVerticalAlignment",tolua_CocoStudio_TextField_setTextVerticalAlignment00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_TextField_getContentSize00);
   tolua_function(tolua_S,"didNotSelectSelf",tolua_CocoStudio_TextField_didNotSelectSelf00);
   tolua_function(tolua_S,"getFontName",tolua_CocoStudio_TextField_getFontName00);
   tolua_function(tolua_S,"setTextAreaSize",tolua_CocoStudio_TextField_setTextAreaSize00);
   tolua_function(tolua_S,"attachWithIME",tolua_CocoStudio_TextField_attachWithIME00);
   tolua_function(tolua_S,"setPasswordEnabled",tolua_CocoStudio_TextField_setPasswordEnabled00);
   tolua_function(tolua_S,"getPasswordStyleText",tolua_CocoStudio_TextField_getPasswordStyleText00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_TextField_update00);
   tolua_function(tolua_S,"setMaxLengthEnabled",tolua_CocoStudio_TextField_setMaxLengthEnabled00);
   tolua_function(tolua_S,"isPasswordEnabled",tolua_CocoStudio_TextField_isPasswordEnabled00);
   tolua_function(tolua_S,"setDeleteBackward",tolua_CocoStudio_TextField_setDeleteBackward00);
   tolua_function(tolua_S,"setFontSize",tolua_CocoStudio_TextField_setFontSize00);
   tolua_function(tolua_S,"setPlaceHolder",tolua_CocoStudio_TextField_setPlaceHolder00);
   tolua_function(tolua_S,"onTouchBegan",tolua_CocoStudio_TextField_onTouchBegan00);
   tolua_function(tolua_S,"setTextHorizontalAlignment",tolua_CocoStudio_TextField_setTextHorizontalAlignment00);
   tolua_function(tolua_S,"getMaxLength",tolua_CocoStudio_TextField_getMaxLength00);
   tolua_function(tolua_S,"isMaxLengthEnabled",tolua_CocoStudio_TextField_isMaxLengthEnabled00);
   tolua_function(tolua_S,"setDetachWithIME",tolua_CocoStudio_TextField_setDetachWithIME00);
   tolua_function(tolua_S,"setText",tolua_CocoStudio_TextField_setText00);
   tolua_function(tolua_S,"setTouchAreaEnabled",tolua_CocoStudio_TextField_setTouchAreaEnabled00);
   tolua_function(tolua_S,"hitTest",tolua_CocoStudio_TextField_hitTest00);
   tolua_function(tolua_S,"setMaxLength",tolua_CocoStudio_TextField_setMaxLength00);
   tolua_function(tolua_S,"setTouchSize",tolua_CocoStudio_TextField_setTouchSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_TextField_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_TextField_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_TextField_new00_local);
   tolua_function(tolua_S,"getTouchSize",tolua_CocoStudio_TextField_getTouchSize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCScrollViewDelegate","CCScrollViewDelegate","",tolua_collect_CCScrollViewDelegate);
  #else
  tolua_cclass(tolua_S,"CCScrollViewDelegate","CCScrollViewDelegate","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCScrollViewDelegate");
   tolua_function(tolua_S,"scrollViewDidScroll",tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidScroll00);
   tolua_function(tolua_S,"scrollViewDidZoom",tolua_CocoStudio_CCScrollViewDelegate_scrollViewDidZoom00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCScrollViewDelegate_delete00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseCubicActionIn","CCEaseCubicActionIn","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCubicActionIn");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCubicActionIn_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCubicActionIn_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCubicActionIn_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCubicActionIn_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCMovementBoneData","CCMovementBoneData","CCObject",tolua_collect_CCMovementBoneData);
  #else
  tolua_cclass(tolua_S,"CCMovementBoneData","CCMovementBoneData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCMovementBoneData");
   tolua_variable(tolua_S,"delay",tolua_get_CCMovementBoneData_delay,tolua_set_CCMovementBoneData_delay);
   tolua_variable(tolua_S,"scale",tolua_get_CCMovementBoneData_scale,tolua_set_CCMovementBoneData_scale);
   tolua_variable(tolua_S,"duration",tolua_get_CCMovementBoneData_duration,tolua_set_CCMovementBoneData_duration);
   tolua_variable(tolua_S,"name",tolua_get_CCMovementBoneData_name,tolua_set_CCMovementBoneData_name);
   tolua_variable(tolua_S,"frameList",tolua_get_CCMovementBoneData_frameList,tolua_set_CCMovementBoneData_frameList);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCMovementBoneData_create00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCMovementBoneData_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCMovementBoneData_delete00);
   tolua_function(tolua_S,"addFrameData",tolua_CocoStudio_CCMovementBoneData_addFrameData00);
   tolua_function(tolua_S,"getFrameData",tolua_CocoStudio_CCMovementBoneData_getFrameData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCMovementBoneData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCMovementBoneData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCMovementBoneData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RotationFrame","RotationFrame","Frame",tolua_collect_RotationFrame);
  #else
  tolua_cclass(tolua_S,"RotationFrame","RotationFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RotationFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RotationFrame_create00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_RotationFrame_onEnter00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_RotationFrame_clone00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RotationFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RotationFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RotationFrame_new00_local);
   tolua_function(tolua_S,"getRotation",tolua_CocoStudio_RotationFrame_getRotation00);
   tolua_function(tolua_S,"setRotation",tolua_CocoStudio_RotationFrame_setRotation00);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_RotationFrame_apply00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Widget","Widget","CCNodeRGBA",tolua_collect_Widget);
  #else
  tolua_cclass(tolua_S,"Widget","Widget","CCNodeRGBA",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Widget");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Widget_create00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Widget_addChild00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Widget_addChild01);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Widget_addChild02);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_Widget_getVirtualRenderer00);
   tolua_function(tolua_S,"getCustomSize",tolua_CocoStudio_Widget_getCustomSize00);
   tolua_function(tolua_S,"setActionTag",tolua_CocoStudio_Widget_setActionTag00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_Widget_getDescription00);
   tolua_function(tolua_S,"getSize",tolua_CocoStudio_Widget_getSize00);
   tolua_function(tolua_S,"getChildren",tolua_CocoStudio_Widget_getChildren00);
   tolua_function(tolua_S,"onTouchEnded",tolua_CocoStudio_Widget_onTouchEnded00);
   tolua_function(tolua_S,"getPositionType",tolua_CocoStudio_Widget_getPositionType00);
   tolua_function(tolua_S,"getChildByName",tolua_CocoStudio_Widget_getChildByName00);
   tolua_function(tolua_S,"isEnabled",tolua_CocoStudio_Widget_isEnabled00);
   tolua_function(tolua_S,"isFlipX",tolua_CocoStudio_Widget_isFlipX00);
   tolua_function(tolua_S,"isFlipY",tolua_CocoStudio_Widget_isFlipY00);
   tolua_function(tolua_S,"removeNodeByTag",tolua_CocoStudio_Widget_removeNodeByTag00);
   tolua_function(tolua_S,"didNotSelectSelf",tolua_CocoStudio_Widget_didNotSelectSelf00);
   tolua_function(tolua_S,"setFocused",tolua_CocoStudio_Widget_setFocused00);
   tolua_function(tolua_S,"getLayoutParameter",tolua_CocoStudio_Widget_getLayoutParameter00);
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_Widget_getColor00);
   tolua_function(tolua_S,"isBright",tolua_CocoStudio_Widget_isBright00);
   tolua_function(tolua_S,"updateSizeAndPosition",tolua_CocoStudio_Widget_updateSizeAndPosition00);
   tolua_function(tolua_S,"updateSizeAndPosition",tolua_CocoStudio_Widget_updateSizeAndPosition01);
   tolua_function(tolua_S,"getSizeType",tolua_CocoStudio_Widget_getSizeType00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_Widget_onExit00);
   tolua_function(tolua_S,"getPositionPercent",tolua_CocoStudio_Widget_getPositionPercent00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_Widget_removeChild00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_Widget_removeChild01);
   tolua_function(tolua_S,"moveEvent",tolua_CocoStudio_Widget_moveEvent00);
   tolua_function(tolua_S,"setSize",tolua_CocoStudio_Widget_setSize00);
   tolua_function(tolua_S,"removeAllChildren",tolua_CocoStudio_Widget_removeAllChildren00);
   tolua_function(tolua_S,"releaseUpEvent",tolua_CocoStudio_Widget_releaseUpEvent00);
   tolua_function(tolua_S,"getSizePercent",tolua_CocoStudio_Widget_getSizePercent00);
   tolua_function(tolua_S,"getLayoutSize",tolua_CocoStudio_Widget_getLayoutSize00);
   tolua_function(tolua_S,"setPositionType",tolua_CocoStudio_Widget_setPositionType00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_Widget_getContentSize00);
   tolua_function(tolua_S,"getName",tolua_CocoStudio_Widget_getName00);
   tolua_function(tolua_S,"isTouchEnabled",tolua_CocoStudio_Widget_isTouchEnabled00);
   tolua_function(tolua_S,"setTouchEnabled",tolua_CocoStudio_Widget_setTouchEnabled00);
   tolua_function(tolua_S,"setLayoutParameter",tolua_CocoStudio_Widget_setLayoutParameter00);
   tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_CocoStudio_Widget_removeAllChildrenWithCleanup00);
   tolua_function(tolua_S,"onTouchBegan",tolua_CocoStudio_Widget_onTouchBegan00);
   tolua_function(tolua_S,"clippingParentAreaContainPoint",tolua_CocoStudio_Widget_clippingParentAreaContainPoint00);
   tolua_function(tolua_S,"removeFromParentAndCleanup",tolua_CocoStudio_Widget_removeFromParentAndCleanup00);
   tolua_function(tolua_S,"setPosition",tolua_CocoStudio_Widget_setPosition00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_Widget_setColor00);
   tolua_function(tolua_S,"removeAllNodes",tolua_CocoStudio_Widget_removeAllNodes00);
   tolua_function(tolua_S,"isFocused",tolua_CocoStudio_Widget_isFocused00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Widget_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Widget_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Widget_new00_local);
   tolua_function(tolua_S,"getChildrenCount",tolua_CocoStudio_Widget_getChildrenCount00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_Widget_onEnter00);
   tolua_function(tolua_S,"getLeftInParent",tolua_CocoStudio_Widget_getLeftInParent00);
   tolua_function(tolua_S,"setPositionPercent",tolua_CocoStudio_Widget_setPositionPercent00);
   tolua_function(tolua_S,"getNodes",tolua_CocoStudio_Widget_getNodes00);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_Widget_addNode00);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_Widget_addNode01);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_Widget_addNode02);
   tolua_function(tolua_S,"getBottomInParent",tolua_CocoStudio_Widget_getBottomInParent00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_Widget_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_Widget_visit00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Widget_delete00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_Widget_setEnabled00);
   tolua_function(tolua_S,"removeNode",tolua_CocoStudio_Widget_removeNode00);
   tolua_function(tolua_S,"setBrightStyle",tolua_CocoStudio_Widget_setBrightStyle00);
   tolua_function(tolua_S,"setName",tolua_CocoStudio_Widget_setName00);
   tolua_function(tolua_S,"setFlipY",tolua_CocoStudio_Widget_setFlipY00);
   tolua_function(tolua_S,"setFlipX",tolua_CocoStudio_Widget_setFlipX00);
   tolua_function(tolua_S,"onTouchCancelled",tolua_CocoStudio_Widget_onTouchCancelled00);
   tolua_function(tolua_S,"getNodeByTag",tolua_CocoStudio_Widget_getNodeByTag00);
   tolua_function(tolua_S,"removeChildByTag",tolua_CocoStudio_Widget_removeChildByTag00);
   tolua_function(tolua_S,"hitTest",tolua_CocoStudio_Widget_hitTest00);
   tolua_function(tolua_S,"setSizePercent",tolua_CocoStudio_Widget_setSizePercent00);
   tolua_function(tolua_S,"setScriptObjectDict",tolua_CocoStudio_Widget_setScriptObjectDict00);
   tolua_function(tolua_S,"getTouchEndPos",tolua_CocoStudio_Widget_getTouchEndPos00);
   tolua_function(tolua_S,"getChildByTag",tolua_CocoStudio_Widget_getChildByTag00);
   tolua_function(tolua_S,"isIgnoreContentAdaptWithSize",tolua_CocoStudio_Widget_isIgnoreContentAdaptWithSize00);
   tolua_function(tolua_S,"pushDownEvent",tolua_CocoStudio_Widget_pushDownEvent00);
   tolua_function(tolua_S,"getWidgetType",tolua_CocoStudio_Widget_getWidgetType00);
   tolua_function(tolua_S,"setOpacity",tolua_CocoStudio_Widget_setOpacity00);
   tolua_function(tolua_S,"getActionTag",tolua_CocoStudio_Widget_getActionTag00);
   tolua_function(tolua_S,"getOpacity",tolua_CocoStudio_Widget_getOpacity00);
   tolua_function(tolua_S,"cancelUpEvent",tolua_CocoStudio_Widget_cancelUpEvent00);
   tolua_function(tolua_S,"getTouchMovePos",tolua_CocoStudio_Widget_getTouchMovePos00);
   tolua_function(tolua_S,"onTouchMoved",tolua_CocoStudio_Widget_onTouchMoved00);
   tolua_function(tolua_S,"removeFromParent",tolua_CocoStudio_Widget_removeFromParent00);
   tolua_function(tolua_S,"getWorldPosition",tolua_CocoStudio_Widget_getWorldPosition00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_Widget_clone00);
   tolua_function(tolua_S,"sortAllChildren",tolua_CocoStudio_Widget_sortAllChildren00);
   tolua_function(tolua_S,"checkChildInfo",tolua_CocoStudio_Widget_checkChildInfo00);
   tolua_function(tolua_S,"getTopInParent",tolua_CocoStudio_Widget_getTopInParent00);
   tolua_function(tolua_S,"getScriptObjectDict",tolua_CocoStudio_Widget_getScriptObjectDict00);
   tolua_function(tolua_S,"getRightInParent",tolua_CocoStudio_Widget_getRightInParent00);
   tolua_function(tolua_S,"getTouchStartPos",tolua_CocoStudio_Widget_getTouchStartPos00);
   tolua_function(tolua_S,"setSizeType",tolua_CocoStudio_Widget_setSizeType00);
   tolua_function(tolua_S,"setBright",tolua_CocoStudio_Widget_setBright00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ZOrderFrame","ZOrderFrame","Frame",tolua_collect_ZOrderFrame);
  #else
  tolua_cclass(tolua_S,"ZOrderFrame","ZOrderFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ZOrderFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ZOrderFrame_create00);
   tolua_function(tolua_S,"getZOrder",tolua_CocoStudio_ZOrderFrame_getZOrder00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_ZOrderFrame_clone00);
   tolua_function(tolua_S,"setZOrder",tolua_CocoStudio_ZOrderFrame_setZOrder00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_ZOrderFrame_onEnter00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ZOrderFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ZOrderFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ZOrderFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Slider","Slider","Widget",tolua_collect_Slider);
  #else
  tolua_cclass(tolua_S,"Slider","Slider","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Slider");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Slider_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_Slider_createInstance00);
   tolua_function(tolua_S,"setPercent",tolua_CocoStudio_Slider_setPercent00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_Slider_getVirtualRenderer00);
   tolua_function(tolua_S,"onTouchEnded",tolua_CocoStudio_Slider_onTouchEnded00);
   tolua_function(tolua_S,"loadSlidBallTextureNormal",tolua_CocoStudio_Slider_loadSlidBallTextureNormal00);
   tolua_function(tolua_S,"loadProgressBarTexture",tolua_CocoStudio_Slider_loadProgressBarTexture00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_Slider_getDescription00);
   tolua_function(tolua_S,"setScale9Enabled",tolua_CocoStudio_Slider_setScale9Enabled00);
   tolua_function(tolua_S,"getCapInsetBarRenderer",tolua_CocoStudio_Slider_getCapInsetBarRenderer00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_Slider_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"loadSlidBallTextures",tolua_CocoStudio_Slider_loadSlidBallTextures00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Slider_delete00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_Slider_getContentSize00);
   tolua_function(tolua_S,"onTouchMoved",tolua_CocoStudio_Slider_onTouchMoved00);
   tolua_function(tolua_S,"loadBarTexture",tolua_CocoStudio_Slider_loadBarTexture00);
   tolua_function(tolua_S,"onTouchCancelled",tolua_CocoStudio_Slider_onTouchCancelled00);
   tolua_function(tolua_S,"onTouchBegan",tolua_CocoStudio_Slider_onTouchBegan00);
   tolua_function(tolua_S,"loadSlidBallTexturePressed",tolua_CocoStudio_Slider_loadSlidBallTexturePressed00);
   tolua_function(tolua_S,"isScale9Enabled",tolua_CocoStudio_Slider_isScale9Enabled00);
   tolua_function(tolua_S,"setCapInsetProgressBarRebderer",tolua_CocoStudio_Slider_setCapInsetProgressBarRebderer00);
   tolua_function(tolua_S,"setCapInsetsBarRenderer",tolua_CocoStudio_Slider_setCapInsetsBarRenderer00);
   tolua_function(tolua_S,"setCapInsets",tolua_CocoStudio_Slider_setCapInsets00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Slider_new00_local);
   tolua_function(tolua_S,"loadSlidBallTextureDisabled",tolua_CocoStudio_Slider_loadSlidBallTextureDisabled00);
   tolua_function(tolua_S,"getPercent",tolua_CocoStudio_Slider_getPercent00);
   tolua_function(tolua_S,"getCapInsetProgressBarRebderer",tolua_CocoStudio_Slider_getCapInsetProgressBarRebderer00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControl","CCControl","CCLayerRGBA",tolua_collect_CCControl);
  #else
  tolua_cclass(tolua_S,"CCControl","CCControl","CCLayerRGBA",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControl");
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCControl_onEnter00);
   tolua_function(tolua_S,"sendActionsForControlEvents",tolua_CocoStudio_CCControl_sendActionsForControlEvents00);
   tolua_function(tolua_S,"setSelected",tolua_CocoStudio_CCControl_setSelected00);
   tolua_function(tolua_S,"hasVisibleParents",tolua_CocoStudio_CCControl_hasVisibleParents00);
   tolua_function(tolua_S,"setHighlighted",tolua_CocoStudio_CCControl_setHighlighted00);
   tolua_function(tolua_S,"isHighlighted",tolua_CocoStudio_CCControl_isHighlighted00);
   tolua_function(tolua_S,"removeHandleOfControlEvent",tolua_CocoStudio_CCControl_removeHandleOfControlEvent00);
   tolua_function(tolua_S,"isOpacityModifyRGB",tolua_CocoStudio_CCControl_isOpacityModifyRGB00);
   tolua_function(tolua_S,"isEnabled",tolua_CocoStudio_CCControl_isEnabled00);
   tolua_function(tolua_S,"setOpacityModifyRGB",tolua_CocoStudio_CCControl_setOpacityModifyRGB00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControl_delete00);
   tolua_function(tolua_S,"isSelected",tolua_CocoStudio_CCControl_isSelected00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCControl_init00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControl_setEnabled00);
   tolua_function(tolua_S,"getState",tolua_CocoStudio_CCControl_getState00);
   tolua_function(tolua_S,"needsLayout",tolua_CocoStudio_CCControl_needsLayout00);
   tolua_function(tolua_S,"addHandleOfControlEvent",tolua_CocoStudio_CCControl_addHandleOfControlEvent00);
   tolua_function(tolua_S,"getTouchLocation",tolua_CocoStudio_CCControl_getTouchLocation00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCControl_onExit00);
   tolua_function(tolua_S,"isTouchInside",tolua_CocoStudio_CCControl_isTouchInside00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControl_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControl_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControl_new00_local);
   tolua_function(tolua_S,"registerWithTouchDispatcher",tolua_CocoStudio_CCControl_registerWithTouchDispatcher00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCParticleDisplayData","CCParticleDisplayData","CCDisplayData",tolua_collect_CCParticleDisplayData);
  #else
  tolua_cclass(tolua_S,"CCParticleDisplayData","CCParticleDisplayData","CCDisplayData",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCParticleDisplayData");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCParticleDisplayData_create00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCParticleDisplayData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCParticleDisplayData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCParticleDisplayData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCParticleDisplayData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCDisplayData","CCDisplayData","CCObject",tolua_collect_CCDisplayData);
  #else
  tolua_cclass(tolua_S,"CCDisplayData","CCDisplayData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCDisplayData");
   tolua_variable(tolua_S,"displayName",tolua_get_CCDisplayData_displayName,tolua_set_CCDisplayData_displayName);
   tolua_function(tolua_S,"changeDisplayToTexture",tolua_CocoStudio_CCDisplayData_changeDisplayToTexture00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCDisplayData_create00);
   tolua_function(tolua_S,"copy",tolua_CocoStudio_CCDisplayData_copy00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCDisplayData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCDisplayData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCDisplayData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCDisplayData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTableViewCell","CCTableViewCell","CCNode",tolua_collect_CCTableViewCell);
  #else
  tolua_cclass(tolua_S,"CCTableViewCell","CCTableViewCell","CCNode",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTableViewCell");
   tolua_function(tolua_S,"reset",tolua_CocoStudio_CCTableViewCell_reset00);
   tolua_function(tolua_S,"setIdx",tolua_CocoStudio_CCTableViewCell_setIdx00);
   tolua_function(tolua_S,"setObjectID",tolua_CocoStudio_CCTableViewCell_setObjectID00);
   tolua_function(tolua_S,"setName",tolua_CocoStudio_CCTableViewCell_setName00);
   tolua_function(tolua_S,"getObjectID",tolua_CocoStudio_CCTableViewCell_getObjectID00);
   tolua_function(tolua_S,"getName",tolua_CocoStudio_CCTableViewCell_getName00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCTableViewCell_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCTableViewCell_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCTableViewCell_new00_local);
   tolua_function(tolua_S,"getIdx",tolua_CocoStudio_CCTableViewCell_getIdx00);
   tolua_variable(tolua_S,"__CCSortableObject__",tolua_get_CCTableViewCell___CCSortableObject__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RotationSkewFrame","RotationSkewFrame","SkewFrame",tolua_collect_RotationSkewFrame);
  #else
  tolua_cclass(tolua_S,"RotationSkewFrame","RotationSkewFrame","SkewFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RotationSkewFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RotationSkewFrame_create00);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_RotationSkewFrame_apply00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_RotationSkewFrame_clone00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_RotationSkewFrame_onEnter00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RotationSkewFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RotationSkewFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RotationSkewFrame_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCDisplayFactory","CCDisplayFactory","",NULL);
  tolua_beginmodule(tolua_S,"CCDisplayFactory");
   tolua_function(tolua_S,"addSpriteDisplay",tolua_CocoStudio_CCDisplayFactory_addSpriteDisplay00);
   tolua_function(tolua_S,"initSpriteDisplay",tolua_CocoStudio_CCDisplayFactory_initSpriteDisplay00);
   tolua_function(tolua_S,"createDisplay",tolua_CocoStudio_CCDisplayFactory_createDisplay00);
   tolua_function(tolua_S,"addArmatureDisplay",tolua_CocoStudio_CCDisplayFactory_addArmatureDisplay00);
   tolua_function(tolua_S,"updateArmatureDisplay",tolua_CocoStudio_CCDisplayFactory_updateArmatureDisplay00);
   tolua_function(tolua_S,"createParticleDisplay",tolua_CocoStudio_CCDisplayFactory_createParticleDisplay00);
   tolua_function(tolua_S,"createSpriteDisplay",tolua_CocoStudio_CCDisplayFactory_createSpriteDisplay00);
   tolua_function(tolua_S,"addParticleDisplay",tolua_CocoStudio_CCDisplayFactory_addParticleDisplay00);
   tolua_function(tolua_S,"updateDisplay",tolua_CocoStudio_CCDisplayFactory_updateDisplay00);
   tolua_function(tolua_S,"createArmatureDisplay",tolua_CocoStudio_CCDisplayFactory_createArmatureDisplay00);
   tolua_function(tolua_S,"updateParticleDisplay",tolua_CocoStudio_CCDisplayFactory_updateParticleDisplay00);
   tolua_function(tolua_S,"addDisplay",tolua_CocoStudio_CCDisplayFactory_addDisplay00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RichElementText","RichElementText","RichElement",tolua_collect_RichElementText);
  #else
  tolua_cclass(tolua_S,"RichElementText","RichElementText","RichElement",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RichElementText");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RichElementText_create00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_RichElementText_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RichElementText_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RichElementText_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RichElementText_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RichElementText_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseCircleActionOut","CCEaseCircleActionOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCircleActionOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCircleActionOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCircleActionOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCircleActionOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCircleActionOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EventFrame","EventFrame","Frame",tolua_collect_EventFrame);
  #else
  tolua_cclass(tolua_S,"EventFrame","EventFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EventFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_EventFrame_create00);
   tolua_function(tolua_S,"setEvent",tolua_CocoStudio_EventFrame_setEvent00);
   tolua_function(tolua_S,"getEvent",tolua_CocoStudio_EventFrame_getEvent00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_EventFrame_clone00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_EventFrame_onEnter00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_EventFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_EventFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_EventFrame_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuinticActionOut","CCEaseQuinticActionOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuinticActionOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuinticActionOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuinticActionOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuinticActionOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuinticActionOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTableView","CCTableView","CCScrollView",tolua_collect_CCTableView);
  #else
  tolua_cclass(tolua_S,"CCTableView","CCTableView","CCScrollView",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTableView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCTableView_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCTableView_create01);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCTableView_ccTouchBegan00);
   tolua_function(tolua_S,"scrollViewDidScroll",tolua_CocoStudio_CCTableView_scrollViewDidScroll00);
   tolua_function(tolua_S,"setColCount",tolua_CocoStudio_CCTableView_setColCount00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCTableView_ccTouchEnded00);
   tolua_function(tolua_S,"getDataSource",tolua_CocoStudio_CCTableView_getDataSource00);
   tolua_function(tolua_S,"updateCellAtIndex",tolua_CocoStudio_CCTableView_updateCellAtIndex00);
   tolua_function(tolua_S,"initWithViewSize",tolua_CocoStudio_CCTableView_initWithViewSize00);
   tolua_function(tolua_S,"removeCellAtIndex",tolua_CocoStudio_CCTableView_removeCellAtIndex00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCTableView_delete00);
   tolua_function(tolua_S,"getColCount",tolua_CocoStudio_CCTableView_getColCount00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCTableView_ccTouchMoved00);
   tolua_function(tolua_S,"reloadData",tolua_CocoStudio_CCTableView_reloadData00);
   tolua_function(tolua_S,"dequeueCell",tolua_CocoStudio_CCTableView_dequeueCell00);
   tolua_function(tolua_S,"setDelegate",tolua_CocoStudio_CCTableView_setDelegate00);
   tolua_function(tolua_S,"scrollViewDidZoom",tolua_CocoStudio_CCTableView_scrollViewDidZoom00);
   tolua_function(tolua_S,"insertCellAtIndex",tolua_CocoStudio_CCTableView_insertCellAtIndex00);
   tolua_function(tolua_S,"cellAtIndex",tolua_CocoStudio_CCTableView_cellAtIndex00);
   tolua_function(tolua_S,"getDelegate",tolua_CocoStudio_CCTableView_getDelegate00);
   tolua_function(tolua_S,"getRealRows",tolua_CocoStudio_CCTableView_getRealRows00);
   tolua_function(tolua_S,"_updateContentSize",tolua_CocoStudio_CCTableView__updateContentSize00);
   tolua_function(tolua_S,"unregisterAllScriptHandler",tolua_CocoStudio_CCTableView_unregisterAllScriptHandler00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCTableView_ccTouchCancelled00);
   tolua_function(tolua_S,"setDataSource",tolua_CocoStudio_CCTableView_setDataSource00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCTableView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCTableView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCTableView_new00_local);
   tolua_variable(tolua_S,"__CCScrollViewDelegate__",tolua_get_CCTableView___CCScrollViewDelegate__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"DictionaryHelper","DictionaryHelper","",tolua_collect_DictionaryHelper);
  #else
  tolua_cclass(tolua_S,"DictionaryHelper","DictionaryHelper","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"DictionaryHelper");
   tolua_function(tolua_S,"purgeDictionaryHelper",tolua_CocoStudio_DictionaryHelper_purgeDictionaryHelper00);
   tolua_function(tolua_S,"shareHelper",tolua_CocoStudio_DictionaryHelper_shareHelper00);
   tolua_function(tolua_S,"getSubDictionary",tolua_CocoStudio_DictionaryHelper_getSubDictionary00);
   tolua_function(tolua_S,"getStringValue",tolua_CocoStudio_DictionaryHelper_getStringValue00);
   tolua_function(tolua_S,"objectToFloatValue",tolua_CocoStudio_DictionaryHelper_objectToFloatValue00);
   tolua_function(tolua_S,"objectToCCArray",tolua_CocoStudio_DictionaryHelper_objectToCCArray00);
   tolua_function(tolua_S,"getFloatValue",tolua_CocoStudio_DictionaryHelper_getFloatValue00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_DictionaryHelper_delete00);
   tolua_function(tolua_S,"checkObjectExist",tolua_CocoStudio_DictionaryHelper_checkObjectExist00);
   tolua_function(tolua_S,"objectToBooleanValue",tolua_CocoStudio_DictionaryHelper_objectToBooleanValue00);
   tolua_function(tolua_S,"objectToIntValue",tolua_CocoStudio_DictionaryHelper_objectToIntValue00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_DictionaryHelper_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_DictionaryHelper_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_DictionaryHelper_new00_local);
   tolua_function(tolua_S,"getBooleanValue",tolua_CocoStudio_DictionaryHelper_getBooleanValue00);
   tolua_function(tolua_S,"getIntValue",tolua_CocoStudio_DictionaryHelper_getIntValue00);
   tolua_function(tolua_S,"getArrayValue",tolua_CocoStudio_DictionaryHelper_getArrayValue00);
   tolua_function(tolua_S,"objectToStringValue",tolua_CocoStudio_DictionaryHelper_objectToStringValue00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TriggerMng","TriggerMng","",tolua_collect_TriggerMng);
  #else
  tolua_cclass(tolua_S,"TriggerMng","TriggerMng","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TriggerMng");
   tolua_function(tolua_S,"triggerMngVersion",tolua_CocoStudio_TriggerMng_triggerMngVersion00);
   tolua_function(tolua_S,"getInstance",tolua_CocoStudio_TriggerMng_getInstance00);
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_TriggerMng_removeAll00);
   tolua_function(tolua_S,"removeTriggerObj",tolua_CocoStudio_TriggerMng_removeTriggerObj00);
   tolua_function(tolua_S,"get",tolua_CocoStudio_TriggerMng_get00);
   tolua_function(tolua_S,"destroyInstance",tolua_CocoStudio_TriggerMng_destroyInstance00);
   tolua_function(tolua_S,"removeArmatureAllMovementCallBack",tolua_CocoStudio_TriggerMng_removeArmatureAllMovementCallBack00);
   tolua_function(tolua_S,"remove",tolua_CocoStudio_TriggerMng_remove00);
   tolua_function(tolua_S,"remove",tolua_CocoStudio_TriggerMng_remove01);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_TriggerMng_delete00);
   tolua_function(tolua_S,"parse",tolua_CocoStudio_TriggerMng_parse00);
   tolua_function(tolua_S,"add",tolua_CocoStudio_TriggerMng_add00);
   tolua_function(tolua_S,"isEmpty",tolua_CocoStudio_TriggerMng_isEmpty00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_TriggerMng_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_TriggerMng_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_TriggerMng_new00_local);
   tolua_function(tolua_S,"getTriggerObj",tolua_CocoStudio_TriggerMng_getTriggerObj00);
   tolua_function(tolua_S,"removeAllArmatureMovementCallBack",tolua_CocoStudio_TriggerMng_removeAllArmatureMovementCallBack00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BaseTriggerCondition","BaseTriggerCondition","CCObject",tolua_collect_BaseTriggerCondition);
  #else
  tolua_cclass(tolua_S,"BaseTriggerCondition","BaseTriggerCondition","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BaseTriggerCondition");
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_BaseTriggerCondition_serialize00);
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_BaseTriggerCondition_removeAll00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_BaseTriggerCondition_init00);
   tolua_function(tolua_S,"detect",tolua_CocoStudio_BaseTriggerCondition_detect00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_BaseTriggerCondition_delete00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuadraticActionIn","CCEaseQuadraticActionIn","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuadraticActionIn");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuadraticActionIn_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuadraticActionIn_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuadraticActionIn_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuadraticActionIn_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionTintFrame","ActionTintFrame","ActionFrame",tolua_collect_ActionTintFrame);
  #else
  tolua_cclass(tolua_S,"ActionTintFrame","ActionTintFrame","ActionFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionTintFrame");
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_ActionTintFrame_getColor00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionTintFrame_delete00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionTintFrame_getAction00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_ActionTintFrame_setColor00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionTintFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionTintFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionTintFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"NodeCreateCallFunc","NodeCreateCallFunc","CCObject",tolua_collect_NodeCreateCallFunc);
  #else
  tolua_cclass(tolua_S,"NodeCreateCallFunc","NodeCreateCallFunc","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"NodeCreateCallFunc");
   tolua_function(tolua_S,"delete",tolua_CocoStudio_NodeCreateCallFunc_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_NodeCreateCallFunc_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_NodeCreateCallFunc_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_NodeCreateCallFunc_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArmature","CCArmature","CCNodeRGBA",tolua_collect_CCArmature);
  #else
  tolua_cclass(tolua_S,"CCArmature","CCArmature","CCNodeRGBA",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArmature");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmature_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmature_create01);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmature_create02);
   tolua_function(tolua_S,"getBone",tolua_CocoStudio_CCArmature_getBone00);
   tolua_function(tolua_S,"changeBoneParent",tolua_CocoStudio_CCArmature_changeBoneParent00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCArmature_onEnter00);
   tolua_function(tolua_S,"getTexureAtlasWithTexture",tolua_CocoStudio_CCArmature_getTexureAtlasWithTexture00);
   tolua_function(tolua_S,"setPreDrawFunction",tolua_CocoStudio_CCArmature_setPreDrawFunction00);
   tolua_function(tolua_S,"setAnimation",tolua_CocoStudio_CCArmature_setAnimation00);
   tolua_function(tolua_S,"getBoneAtPoint",tolua_CocoStudio_CCArmature_getBoneAtPoint00);
   tolua_function(tolua_S,"getBatchNode",tolua_CocoStudio_CCArmature_getBatchNode00);
   tolua_function(tolua_S,"setVersion",tolua_CocoStudio_CCArmature_setVersion00);
   tolua_function(tolua_S,"updateOffsetPoint",tolua_CocoStudio_CCArmature_updateOffsetPoint00);
   tolua_function(tolua_S,"getParentBone",tolua_CocoStudio_CCArmature_getParentBone00);
   tolua_function(tolua_S,"setName",tolua_CocoStudio_CCArmature_setName00);
   tolua_function(tolua_S,"removeBone",tolua_CocoStudio_CCArmature_removeBone00);
   tolua_function(tolua_S,"getArmatureTransformDirty",tolua_CocoStudio_CCArmature_getArmatureTransformDirty00);
   tolua_function(tolua_S,"getName",tolua_CocoStudio_CCArmature_getName00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_CCArmature_visit00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCArmature_delete00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmature_init00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmature_init01);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmature_init02);
   tolua_function(tolua_S,"setParentBone",tolua_CocoStudio_CCArmature_setParentBone00);
   tolua_function(tolua_S,"setBatchNode",tolua_CocoStudio_CCArmature_setBatchNode00);
   tolua_function(tolua_S,"draw",tolua_CocoStudio_CCArmature_draw00);
   tolua_function(tolua_S,"getBlendFunc",tolua_CocoStudio_CCArmature_getBlendFunc00);
   tolua_function(tolua_S,"nodeToParentTransform",tolua_CocoStudio_CCArmature_nodeToParentTransform00);
   tolua_function(tolua_S,"setArmatureData",tolua_CocoStudio_CCArmature_setArmatureData00);
   tolua_function(tolua_S,"setTextureAtlas",tolua_CocoStudio_CCArmature_setTextureAtlas00);
   tolua_function(tolua_S,"addBone",tolua_CocoStudio_CCArmature_addBone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCArmature_update00);
   tolua_function(tolua_S,"getArmatureData",tolua_CocoStudio_CCArmature_getArmatureData00);
   tolua_function(tolua_S,"getPreDrawFunction",tolua_CocoStudio_CCArmature_getPreDrawFunction00);
   tolua_function(tolua_S,"boundingBox",tolua_CocoStudio_CCArmature_boundingBox00);
   tolua_function(tolua_S,"getVersion",tolua_CocoStudio_CCArmature_getVersion00);
   tolua_function(tolua_S,"getAnimation",tolua_CocoStudio_CCArmature_getAnimation00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCArmature_onExit00);
   tolua_function(tolua_S,"setBlendFunc",tolua_CocoStudio_CCArmature_setBlendFunc00);
   tolua_function(tolua_S,"getBoneDic",tolua_CocoStudio_CCArmature_getBoneDic00);
   tolua_function(tolua_S,"getTextureAtlas",tolua_CocoStudio_CCArmature_getTextureAtlas00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCArmature_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCArmature_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCArmature_new00_local);
   tolua_variable(tolua_S,"__CCBlendProtocol__",tolua_get_CCArmature___CCBlendProtocol__,NULL);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuarticActionIn","CCEaseQuarticActionIn","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuarticActionIn");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuarticActionIn_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuarticActionIn_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuarticActionIn_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuarticActionIn_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AnchorPointFrame","AnchorPointFrame","Frame",tolua_collect_AnchorPointFrame);
  #else
  tolua_cclass(tolua_S,"AnchorPointFrame","AnchorPointFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AnchorPointFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_AnchorPointFrame_create00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_AnchorPointFrame_setAnchorPoint00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_AnchorPointFrame_clone00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_AnchorPointFrame_onEnter00);
   tolua_function(tolua_S,"getAnchorPoint",tolua_CocoStudio_AnchorPointFrame_getAnchorPoint00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_AnchorPointFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_AnchorPointFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_AnchorPointFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArmatureData","CCArmatureData","CCObject",tolua_collect_CCArmatureData);
  #else
  tolua_cclass(tolua_S,"CCArmatureData","CCArmatureData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArmatureData");
   tolua_variable(tolua_S,"name",tolua_get_CCArmatureData_name,tolua_set_CCArmatureData_name);
   tolua_variable(tolua_S,"boneDataDic",tolua_get_CCArmatureData_boneDataDic,tolua_set_CCArmatureData_boneDataDic);
   tolua_variable(tolua_S,"dataVersion",tolua_get_CCArmatureData_dataVersion,tolua_set_CCArmatureData_dataVersion);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmatureData_create00);
   tolua_function(tolua_S,"addBoneData",tolua_CocoStudio_CCArmatureData_addBoneData00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmatureData_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCArmatureData_delete00);
   tolua_function(tolua_S,"getBoneData",tolua_CocoStudio_CCArmatureData_getBoneData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCArmatureData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCArmatureData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCArmatureData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCBone","CCBone","CCNodeRGBA",tolua_collect_CCBone);
  #else
  tolua_cclass(tolua_S,"CCBone","CCBone","CCNodeRGBA",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCBone");
   tolua_variable(tolua_S,"m_bBoneTransformDirty",tolua_get_CCBone_m_bBoneTransformDirty,tolua_set_CCBone_m_bBoneTransformDirty);
   tolua_variable(tolua_S,"m_tWorldTransform",tolua_get_CCBone_m_tWorldTransform,tolua_set_CCBone_m_tWorldTransform);
   tolua_variable(tolua_S,"m_fDataVersion",tolua_get_CCBone_m_fDataVersion,tolua_set_CCBone_m_fDataVersion);
   tolua_variable(tolua_S,"m_sBlendFunc",tolua_get_CCBone_m_sBlendFunc,tolua_set_CCBone_m_sBlendFunc);
   tolua_variable(tolua_S,"m_bBlendDirty",tolua_get_CCBone_m_bBlendDirty,tolua_set_CCBone_m_bBlendDirty);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCBone_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCBone_create01);
   tolua_function(tolua_S,"nodeToWorldTransform",tolua_CocoStudio_CCBone_nodeToWorldTransform00);
   tolua_function(tolua_S,"isTransformDirty",tolua_CocoStudio_CCBone_isTransformDirty00);
   tolua_function(tolua_S,"updateZOrder",tolua_CocoStudio_CCBone_updateZOrder00);
   tolua_function(tolua_S,"setTransformDirty",tolua_CocoStudio_CCBone_setTransformDirty00);
   tolua_function(tolua_S,"getDisplayRenderNode",tolua_CocoStudio_CCBone_getDisplayRenderNode00);
   tolua_function(tolua_S,"addChildBone",tolua_CocoStudio_CCBone_addChildBone00);
   tolua_function(tolua_S,"isBlendDirty",tolua_CocoStudio_CCBone_isBlendDirty00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCBone_delete00);
   tolua_function(tolua_S,"getWorldInfo",tolua_CocoStudio_CCBone_getWorldInfo00);
   tolua_function(tolua_S,"getTween",tolua_CocoStudio_CCBone_getTween00);
   tolua_function(tolua_S,"getParentBone",tolua_CocoStudio_CCBone_getParentBone00);
   tolua_function(tolua_S,"updateColor",tolua_CocoStudio_CCBone_updateColor00);
   tolua_function(tolua_S,"setChildArmature",tolua_CocoStudio_CCBone_setChildArmature00);
   tolua_function(tolua_S,"getName",tolua_CocoStudio_CCBone_getName00);
   tolua_function(tolua_S,"setOpacity",tolua_CocoStudio_CCBone_setOpacity00);
   tolua_function(tolua_S,"removeDisplay",tolua_CocoStudio_CCBone_removeDisplay00);
   tolua_function(tolua_S,"updateDisplayedOpacity",tolua_CocoStudio_CCBone_updateDisplayedOpacity00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCBone_init00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCBone_init01);
   tolua_function(tolua_S,"setParentBone",tolua_CocoStudio_CCBone_setParentBone00);
   tolua_function(tolua_S,"setZOrder",tolua_CocoStudio_CCBone_setZOrder00);
   tolua_function(tolua_S,"getIgnoreMovementBoneData",tolua_CocoStudio_CCBone_getIgnoreMovementBoneData00);
   tolua_function(tolua_S,"setIgnoreMovementBoneData",tolua_CocoStudio_CCBone_setIgnoreMovementBoneData00);
   tolua_function(tolua_S,"getBlendFunc",tolua_CocoStudio_CCBone_getBlendFunc00);
   tolua_function(tolua_S,"setName",tolua_CocoStudio_CCBone_setName00);
   tolua_function(tolua_S,"removeFromParent",tolua_CocoStudio_CCBone_removeFromParent00);
   tolua_function(tolua_S,"getChildArmature",tolua_CocoStudio_CCBone_getChildArmature00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCBone_update00);
   tolua_function(tolua_S,"setDisplayManager",tolua_CocoStudio_CCBone_setDisplayManager00);
   tolua_function(tolua_S,"getTweenData",tolua_CocoStudio_CCBone_getTweenData00);
   tolua_function(tolua_S,"changeDisplayWithIndex",tolua_CocoStudio_CCBone_changeDisplayWithIndex00);
   tolua_function(tolua_S,"changeDisplayWithName",tolua_CocoStudio_CCBone_changeDisplayWithName00);
   tolua_function(tolua_S,"getColliderBodyList",tolua_CocoStudio_CCBone_getColliderBodyList00);
   tolua_function(tolua_S,"setBoneData",tolua_CocoStudio_CCBone_setBoneData00);
   tolua_function(tolua_S,"setArmature",tolua_CocoStudio_CCBone_setArmature00);
   tolua_function(tolua_S,"setBlendDirty",tolua_CocoStudio_CCBone_setBlendDirty00);
   tolua_function(tolua_S,"addDisplay",tolua_CocoStudio_CCBone_addDisplay00);
   tolua_function(tolua_S,"addDisplay",tolua_CocoStudio_CCBone_addDisplay01);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_CCBone_setColor00);
   tolua_function(tolua_S,"removeChildBone",tolua_CocoStudio_CCBone_removeChildBone00);
   tolua_function(tolua_S,"setBlendFunc",tolua_CocoStudio_CCBone_setBlendFunc00);
   tolua_function(tolua_S,"getDisplayManager",tolua_CocoStudio_CCBone_getDisplayManager00);
   tolua_function(tolua_S,"getArmature",tolua_CocoStudio_CCBone_getArmature00);
   tolua_function(tolua_S,"nodeToArmatureTransform",tolua_CocoStudio_CCBone_nodeToArmatureTransform00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCBone_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCBone_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCBone_new00_local);
   tolua_function(tolua_S,"updateDisplayedColor",tolua_CocoStudio_CCBone_updateDisplayedColor00);
   tolua_function(tolua_S,"getBoneData",tolua_CocoStudio_CCBone_getBoneData00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCTweenFunction","CCTweenFunction","",NULL);
  tolua_beginmodule(tolua_S,"CCTweenFunction");
   tolua_function(tolua_S,"quartEaseInOut",tolua_CocoStudio_CCTweenFunction_quartEaseInOut00);
   tolua_function(tolua_S,"backEaseIn",tolua_CocoStudio_CCTweenFunction_backEaseIn00);
   tolua_function(tolua_S,"quintEaseIn",tolua_CocoStudio_CCTweenFunction_quintEaseIn00);
   tolua_function(tolua_S,"cubicEaseOut",tolua_CocoStudio_CCTweenFunction_cubicEaseOut00);
   tolua_function(tolua_S,"bounceEaseInOut",tolua_CocoStudio_CCTweenFunction_bounceEaseInOut00);
   tolua_function(tolua_S,"bounceEaseOut",tolua_CocoStudio_CCTweenFunction_bounceEaseOut00);
   tolua_function(tolua_S,"quartEaseOut",tolua_CocoStudio_CCTweenFunction_quartEaseOut00);
   tolua_function(tolua_S,"expoEaseOut",tolua_CocoStudio_CCTweenFunction_expoEaseOut00);
   tolua_function(tolua_S,"circEaseInOut",tolua_CocoStudio_CCTweenFunction_circEaseInOut00);
   tolua_function(tolua_S,"sineEaseOut",tolua_CocoStudio_CCTweenFunction_sineEaseOut00);
   tolua_function(tolua_S,"backEaseOut",tolua_CocoStudio_CCTweenFunction_backEaseOut00);
   tolua_function(tolua_S,"quintEaseOut",tolua_CocoStudio_CCTweenFunction_quintEaseOut00);
   tolua_function(tolua_S,"quintEaseInOut",tolua_CocoStudio_CCTweenFunction_quintEaseInOut00);
   tolua_function(tolua_S,"backEaseInOut",tolua_CocoStudio_CCTweenFunction_backEaseInOut00);
   tolua_function(tolua_S,"elasticEaseInOut",tolua_CocoStudio_CCTweenFunction_elasticEaseInOut00);
   tolua_function(tolua_S,"bounceEaseIn",tolua_CocoStudio_CCTweenFunction_bounceEaseIn00);
   tolua_function(tolua_S,"linear",tolua_CocoStudio_CCTweenFunction_linear00);
   tolua_function(tolua_S,"customEase",tolua_CocoStudio_CCTweenFunction_customEase00);
   tolua_function(tolua_S,"elasticEaseIn",tolua_CocoStudio_CCTweenFunction_elasticEaseIn00);
   tolua_function(tolua_S,"quadEaseOut",tolua_CocoStudio_CCTweenFunction_quadEaseOut00);
   tolua_function(tolua_S,"elasticEaseOut",tolua_CocoStudio_CCTweenFunction_elasticEaseOut00);
   tolua_function(tolua_S,"circEaseIn",tolua_CocoStudio_CCTweenFunction_circEaseIn00);
   tolua_function(tolua_S,"expoEaseIn",tolua_CocoStudio_CCTweenFunction_expoEaseIn00);
   tolua_function(tolua_S,"sineEaseIn",tolua_CocoStudio_CCTweenFunction_sineEaseIn00);
   tolua_function(tolua_S,"cubicEaseInOut",tolua_CocoStudio_CCTweenFunction_cubicEaseInOut00);
   tolua_function(tolua_S,"cubicEaseIn",tolua_CocoStudio_CCTweenFunction_cubicEaseIn00);
   tolua_function(tolua_S,"quadEaseIn",tolua_CocoStudio_CCTweenFunction_quadEaseIn00);
   tolua_function(tolua_S,"circEaseOut",tolua_CocoStudio_CCTweenFunction_circEaseOut00);
   tolua_function(tolua_S,"expoEaseInOut",tolua_CocoStudio_CCTweenFunction_expoEaseInOut00);
   tolua_function(tolua_S,"quartEaseIn",tolua_CocoStudio_CCTweenFunction_quartEaseIn00);
   tolua_function(tolua_S,"quadEaseInOut",tolua_CocoStudio_CCTweenFunction_quadEaseInOut00);
   tolua_function(tolua_S,"sineEaseInOut",tolua_CocoStudio_CCTweenFunction_sineEaseInOut00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionMoveFrame","ActionMoveFrame","ActionFrame",tolua_collect_ActionMoveFrame);
  #else
  tolua_cclass(tolua_S,"ActionMoveFrame","ActionMoveFrame","ActionFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionMoveFrame");
   tolua_function(tolua_S,"setPosition",tolua_CocoStudio_ActionMoveFrame_setPosition00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionMoveFrame_delete00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionMoveFrame_getAction00);
   tolua_function(tolua_S,"getPosition",tolua_CocoStudio_ActionMoveFrame_getPosition00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionMoveFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionMoveFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionMoveFrame_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCInvocation","CCInvocation","CCObject",NULL);
  tolua_beginmodule(tolua_S,"CCInvocation");
   tolua_function(tolua_S,"invoke",tolua_CocoStudio_CCInvocation_invoke00);
   tolua_function(tolua_S,"getControlEvent",tolua_CocoStudio_CCInvocation_getControlEvent00);
   tolua_function(tolua_S,"getTarget",tolua_CocoStudio_CCInvocation_getTarget00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ObjectFactory","ObjectFactory","",tolua_collect_ObjectFactory);
  #else
  tolua_cclass(tolua_S,"ObjectFactory","ObjectFactory","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ObjectFactory");
   tolua_function(tolua_S,"getInstance",tolua_CocoStudio_ObjectFactory_getInstance00);
   tolua_function(tolua_S,"registerType",tolua_CocoStudio_ObjectFactory_registerType00);
   tolua_function(tolua_S,"destroyInstance",tolua_CocoStudio_ObjectFactory_destroyInstance00);
   tolua_function(tolua_S,"createObject",tolua_CocoStudio_ObjectFactory_createObject00);
   tolua_function(tolua_S,"createComponent",tolua_CocoStudio_ObjectFactory_createComponent00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ObjectFactory_delete00);
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_ObjectFactory_removeAll00);
   tolua_function(tolua_S,"createGUI",tolua_CocoStudio_ObjectFactory_createGUI00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ObjectFactory_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ObjectFactory_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ObjectFactory_new00_local);
   tolua_function(tolua_S,"createWidgetReaderProtocol",tolua_CocoStudio_ObjectFactory_createWidgetReaderProtocol00);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"TInfo","ObjectFactory::TInfo","",tolua_collect_ObjectFactory__TInfo);
   #else
   tolua_cclass(tolua_S,"TInfo","ObjectFactory::TInfo","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"TInfo");
    tolua_variable(tolua_S,"_class",tolua_get_ObjectFactory__TInfo__class,tolua_set_ObjectFactory__TInfo__class);
    tolua_function(tolua_S,"delete",tolua_CocoStudio_ObjectFactory_TInfo_delete00);
    tolua_function(tolua_S,"new",tolua_CocoStudio_ObjectFactory_TInfo_new00);
    tolua_function(tolua_S,"new_local",tolua_CocoStudio_ObjectFactory_TInfo_new00_local);
    tolua_function(tolua_S,".call",tolua_CocoStudio_ObjectFactory_TInfo_new00_local);
    tolua_function(tolua_S,"new",tolua_CocoStudio_ObjectFactory_TInfo_new01);
    tolua_function(tolua_S,"new_local",tolua_CocoStudio_ObjectFactory_TInfo_new01_local);
    tolua_function(tolua_S,".call",tolua_CocoStudio_ObjectFactory_TInfo_new01_local);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Label","Label","Widget",tolua_collect_Label);
  #else
  tolua_cclass(tolua_S,"Label","Label","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Label");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Label_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_Label_createInstance00);
   tolua_function(tolua_S,"getStringLength",tolua_CocoStudio_Label_getStringLength00);
   tolua_function(tolua_S,"setFontName",tolua_CocoStudio_Label_setFontName00);
   tolua_function(tolua_S,"setTouchScaleChangeEnabled",tolua_CocoStudio_Label_setTouchScaleChangeEnabled00);
   tolua_function(tolua_S,"getFontSize",tolua_CocoStudio_Label_getFontSize00);
   tolua_function(tolua_S,"getTextVerticalAlignment",tolua_CocoStudio_Label_getTextVerticalAlignment00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_Label_setAnchorPoint00);
   tolua_function(tolua_S,"getStringValue",tolua_CocoStudio_Label_getStringValue00);
   tolua_function(tolua_S,"setText",tolua_CocoStudio_Label_setText00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Label_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Label_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Label_new00_local);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_Label_getDescription00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_Label_getVirtualRenderer00);
   tolua_function(tolua_S,"getTextHorizontalAlignment",tolua_CocoStudio_Label_getTextHorizontalAlignment00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Label_delete00);
   tolua_function(tolua_S,"getTextAreaSize",tolua_CocoStudio_Label_getTextAreaSize00);
   tolua_function(tolua_S,"setTextVerticalAlignment",tolua_CocoStudio_Label_setTextVerticalAlignment00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_Label_getContentSize00);
   tolua_function(tolua_S,"setFontSize",tolua_CocoStudio_Label_setFontSize00);
   tolua_function(tolua_S,"isTouchScaleChangeEnabled",tolua_CocoStudio_Label_isTouchScaleChangeEnabled00);
   tolua_function(tolua_S,"setTextHorizontalAlignment",tolua_CocoStudio_Label_setTextHorizontalAlignment00);
   tolua_function(tolua_S,"getFontName",tolua_CocoStudio_Label_getFontName00);
   tolua_function(tolua_S,"setTextAreaSize",tolua_CocoStudio_Label_setTextAreaSize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlSaturationBrightnessPicker","CCControlSaturationBrightnessPicker","CCControl",tolua_collect_CCControlSaturationBrightnessPicker);
  #else
  tolua_cclass(tolua_S,"CCControlSaturationBrightnessPicker","CCControlSaturationBrightnessPicker","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlSaturationBrightnessPicker");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlSaturationBrightnessPicker_create00);
   tolua_function(tolua_S,"getShadow",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getShadow00);
   tolua_function(tolua_S,"initWithTargetAndPos",tolua_CocoStudio_CCControlSaturationBrightnessPicker_initWithTargetAndPos00);
   tolua_function(tolua_S,"getStartPos",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getStartPos00);
   tolua_function(tolua_S,"getOverlay",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getOverlay00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlSaturationBrightnessPicker_setEnabled00);
   tolua_function(tolua_S,"getSlider",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSlider00);
   tolua_function(tolua_S,"updateWithHSV",tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateWithHSV00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlSaturationBrightnessPicker_delete00);
   tolua_function(tolua_S,"getBackground",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBackground00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlSaturationBrightnessPicker_new00_local);
   tolua_function(tolua_S,"updateDraggerWithHSV",tolua_CocoStudio_CCControlSaturationBrightnessPicker_updateDraggerWithHSV00);
   tolua_function(tolua_S,"getSaturation",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getSaturation00);
   tolua_function(tolua_S,"getBrightness",tolua_CocoStudio_CCControlSaturationBrightnessPicker_getBrightness00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LabelAtlas","LabelAtlas","Widget",tolua_collect_LabelAtlas);
  #else
  tolua_cclass(tolua_S,"LabelAtlas","LabelAtlas","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LabelAtlas");
   tolua_function(tolua_S,"create",tolua_CocoStudio_LabelAtlas_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_LabelAtlas_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_LabelAtlas_setAnchorPoint00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_LabelAtlas_getVirtualRenderer00);
   tolua_function(tolua_S,"getStringValue",tolua_CocoStudio_LabelAtlas_getStringValue00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_LabelAtlas_getDescription00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_LabelAtlas_delete00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_LabelAtlas_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_LabelAtlas_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_LabelAtlas_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_LabelAtlas_new00_local);
   tolua_function(tolua_S,"setProperty",tolua_CocoStudio_LabelAtlas_setProperty00);
   tolua_function(tolua_S,"setStringValue",tolua_CocoStudio_LabelAtlas_setStringValue00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LabelBMFont","LabelBMFont","Widget",tolua_collect_LabelBMFont);
  #else
  tolua_cclass(tolua_S,"LabelBMFont","LabelBMFont","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LabelBMFont");
   tolua_function(tolua_S,"create",tolua_CocoStudio_LabelBMFont_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_LabelBMFont_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_LabelBMFont_setAnchorPoint00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_LabelBMFont_getVirtualRenderer00);
   tolua_function(tolua_S,"getStringValue",tolua_CocoStudio_LabelBMFont_getStringValue00);
   tolua_function(tolua_S,"setText",tolua_CocoStudio_LabelBMFont_setText00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_LabelBMFont_getDescription00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_LabelBMFont_delete00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_LabelBMFont_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_LabelBMFont_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_LabelBMFont_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_LabelBMFont_new00_local);
   tolua_function(tolua_S,"setFntFile",tolua_CocoStudio_LabelBMFont_setFntFile00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArmatureDisplayData","CCArmatureDisplayData","CCDisplayData",tolua_collect_CCArmatureDisplayData);
  #else
  tolua_cclass(tolua_S,"CCArmatureDisplayData","CCArmatureDisplayData","CCDisplayData",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArmatureDisplayData");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmatureDisplayData_create00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCArmatureDisplayData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCArmatureDisplayData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCArmatureDisplayData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCArmatureDisplayData_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"UIHelper","UIHelper","",NULL);
  tolua_beginmodule(tolua_S,"UIHelper");
   tolua_function(tolua_S,"seekActionWidgetByActionTag",tolua_CocoStudio_UIHelper_seekActionWidgetByActionTag00);
   tolua_function(tolua_S,"seekWidgetByTag",tolua_CocoStudio_UIHelper_seekWidgetByTag00);
   tolua_function(tolua_S,"seekWidgetByRelativeName",tolua_CocoStudio_UIHelper_seekWidgetByRelativeName00);
   tolua_function(tolua_S,"seekWidgetByName",tolua_CocoStudio_UIHelper_seekWidgetByName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCSpriteFrameCacheHelper","CCSpriteFrameCacheHelper","",tolua_collect_CCSpriteFrameCacheHelper);
  #else
  tolua_cclass(tolua_S,"CCSpriteFrameCacheHelper","CCSpriteFrameCacheHelper","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCSpriteFrameCacheHelper");
   tolua_function(tolua_S,"purge",tolua_CocoStudio_CCSpriteFrameCacheHelper_purge00);
   tolua_function(tolua_S,"sharedSpriteFrameCacheHelper",tolua_CocoStudio_CCSpriteFrameCacheHelper_sharedSpriteFrameCacheHelper00);
   tolua_function(tolua_S,"addSpriteFrameFromFile",tolua_CocoStudio_CCSpriteFrameCacheHelper_addSpriteFrameFromFile00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCSpriteFrameCacheHelper_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCColliderFilter","CCColliderFilter","",tolua_collect_CCColliderFilter);
  #else
  tolua_cclass(tolua_S,"CCColliderFilter","CCColliderFilter","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCColliderFilter");
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCColliderFilter_delete00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"TimelineActionData","TimelineActionData","CCObject",NULL);
  tolua_beginmodule(tolua_S,"TimelineActionData");
   tolua_function(tolua_S,"create",tolua_CocoStudio_TimelineActionData_create00);
   tolua_function(tolua_S,"setActionTag",tolua_CocoStudio_TimelineActionData_setActionTag00);
   tolua_function(tolua_S,"getActionTag",tolua_CocoStudio_TimelineActionData_getActionTag00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"VisibleFrame","VisibleFrame","Frame",tolua_collect_VisibleFrame);
  #else
  tolua_cclass(tolua_S,"VisibleFrame","VisibleFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"VisibleFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_VisibleFrame_create00);
   tolua_function(tolua_S,"setVisible",tolua_CocoStudio_VisibleFrame_setVisible00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_VisibleFrame_clone00);
   tolua_function(tolua_S,"isVisible",tolua_CocoStudio_VisibleFrame_isVisible00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_VisibleFrame_onEnter00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_VisibleFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_VisibleFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_VisibleFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCComController","CCComController","CCComponent",tolua_collect_CCComController);
  #else
  tolua_cclass(tolua_S,"CCComController","CCComController","CCComponent",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCComController");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCComController_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_CCComController_createInstance00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCComController_setEnabled00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCComController_onEnter00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCComController_onExit00);
   tolua_function(tolua_S,"isEnabled",tolua_CocoStudio_CCComController_isEnabled00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCComController_update00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCComController_delete00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCComController_init00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCComController_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCComController_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCComController_new00_local);
   tolua_variable(tolua_S,"__CCInputDelegate__",tolua_get_CCComController___CCInputDelegate__,NULL);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuadraticActionInOut","CCEaseQuadraticActionInOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuadraticActionInOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuadraticActionInOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuadraticActionInOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuadraticActionInOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuadraticActionInOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArmatureDataManager","CCArmatureDataManager","CCObject",tolua_collect_CCArmatureDataManager);
  #else
  tolua_cclass(tolua_S,"CCArmatureDataManager","CCArmatureDataManager","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArmatureDataManager");
   tolua_function(tolua_S,"purge",tolua_CocoStudio_CCArmatureDataManager_purge00);
   tolua_function(tolua_S,"sharedArmatureDataManager",tolua_CocoStudio_CCArmatureDataManager_sharedArmatureDataManager00);
   tolua_function(tolua_S,"getAnimationDatas",tolua_CocoStudio_CCArmatureDataManager_getAnimationDatas00);
   tolua_function(tolua_S,"removeAnimationData",tolua_CocoStudio_CCArmatureDataManager_removeAnimationData00);
   tolua_function(tolua_S,"addArmatureData",tolua_CocoStudio_CCArmatureDataManager_addArmatureData00);
   tolua_function(tolua_S,"addArmatureFileInfo",tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo00);
   tolua_function(tolua_S,"addArmatureFileInfo",tolua_CocoStudio_CCArmatureDataManager_addArmatureFileInfo01);
   tolua_function(tolua_S,"removeArmatureFileInfo",tolua_CocoStudio_CCArmatureDataManager_removeArmatureFileInfo00);
   tolua_function(tolua_S,"getTextureDatas",tolua_CocoStudio_CCArmatureDataManager_getTextureDatas00);
   tolua_function(tolua_S,"getTextureData",tolua_CocoStudio_CCArmatureDataManager_getTextureData00);
   tolua_function(tolua_S,"getArmatureData",tolua_CocoStudio_CCArmatureDataManager_getArmatureData00);
   tolua_function(tolua_S,"getAnimationData",tolua_CocoStudio_CCArmatureDataManager_getAnimationData00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCArmatureDataManager_delete00);
   tolua_function(tolua_S,"addAnimationData",tolua_CocoStudio_CCArmatureDataManager_addAnimationData00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmatureDataManager_init00);
   tolua_function(tolua_S,"removeArmatureData",tolua_CocoStudio_CCArmatureDataManager_removeArmatureData00);
   tolua_function(tolua_S,"getArmatureDatas",tolua_CocoStudio_CCArmatureDataManager_getArmatureDatas00);
   tolua_function(tolua_S,"removeTextureData",tolua_CocoStudio_CCArmatureDataManager_removeTextureData00);
   tolua_function(tolua_S,"addTextureData",tolua_CocoStudio_CCArmatureDataManager_addTextureData00);
   tolua_function(tolua_S,"isAutoLoadSpriteFile",tolua_CocoStudio_CCArmatureDataManager_isAutoLoadSpriteFile00);
   tolua_function(tolua_S,"addSpriteFrameFromFile",tolua_CocoStudio_CCArmatureDataManager_addSpriteFrameFromFile00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ScrollView","ScrollView","Layout",tolua_collect_ScrollView);
  #else
  tolua_cclass(tolua_S,"ScrollView","ScrollView","Layout",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ScrollView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ScrollView_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_ScrollView_createInstance00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_ScrollView_addChild00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_ScrollView_addChild01);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_ScrollView_addChild02);
   tolua_function(tolua_S,"scrollToTop",tolua_CocoStudio_ScrollView_scrollToTop00);
   tolua_function(tolua_S,"onTouchEnded",tolua_CocoStudio_ScrollView_onTouchEnded00);
   tolua_function(tolua_S,"scrollToPercentHorizontal",tolua_CocoStudio_ScrollView_scrollToPercentHorizontal00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_ScrollView_getDescription00);
   tolua_function(tolua_S,"removeAllChildren",tolua_CocoStudio_ScrollView_removeAllChildren00);
   tolua_function(tolua_S,"scrollToBottom",tolua_CocoStudio_ScrollView_scrollToBottom00);
   tolua_function(tolua_S,"getChildren",tolua_CocoStudio_ScrollView_getChildren00);
   tolua_function(tolua_S,"getChildByTag",tolua_CocoStudio_ScrollView_getChildByTag00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_ScrollView_onEnter00);
   tolua_function(tolua_S,"setInnerContainerSize",tolua_CocoStudio_ScrollView_setInnerContainerSize00);
   tolua_function(tolua_S,"scrollToBottomLeft",tolua_CocoStudio_ScrollView_scrollToBottomLeft00);
   tolua_function(tolua_S,"getInnerContainer",tolua_CocoStudio_ScrollView_getInnerContainer00);
   tolua_function(tolua_S,"jumpToBottom",tolua_CocoStudio_ScrollView_jumpToBottom00);
   tolua_function(tolua_S,"getChildByName",tolua_CocoStudio_ScrollView_getChildByName00);
   tolua_function(tolua_S,"scrollToTopLeft",tolua_CocoStudio_ScrollView_scrollToTopLeft00);
   tolua_function(tolua_S,"jumpToTopRight",tolua_CocoStudio_ScrollView_jumpToTopRight00);
   tolua_function(tolua_S,"scrollToPercentBothDirection",tolua_CocoStudio_ScrollView_scrollToPercentBothDirection00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ScrollView_delete00);
   tolua_function(tolua_S,"removeNodeByTag",tolua_CocoStudio_ScrollView_removeNodeByTag00);
   tolua_function(tolua_S,"getInnerContainerSize",tolua_CocoStudio_ScrollView_getInnerContainerSize00);
   tolua_function(tolua_S,"isBounceEnabled",tolua_CocoStudio_ScrollView_isBounceEnabled00);
   tolua_function(tolua_S,"jumpToPercentVertical",tolua_CocoStudio_ScrollView_jumpToPercentVertical00);
   tolua_function(tolua_S,"setInertiaScrollEnabled",tolua_CocoStudio_ScrollView_setInertiaScrollEnabled00);
   tolua_function(tolua_S,"onTouchMoved",tolua_CocoStudio_ScrollView_onTouchMoved00);
   tolua_function(tolua_S,"jumpToTopLeft",tolua_CocoStudio_ScrollView_jumpToTopLeft00);
   tolua_function(tolua_S,"jumpToPercentHorizontal",tolua_CocoStudio_ScrollView_jumpToPercentHorizontal00);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_ScrollView_addNode00);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_ScrollView_addNode01);
   tolua_function(tolua_S,"addNode",tolua_CocoStudio_ScrollView_addNode02);
   tolua_function(tolua_S,"jumpToBottomRight",tolua_CocoStudio_ScrollView_jumpToBottomRight00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_ScrollView_update00);
   tolua_function(tolua_S,"getLayoutType",tolua_CocoStudio_ScrollView_getLayoutType00);
   tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_CocoStudio_ScrollView_removeAllChildrenWithCleanup00);
   tolua_function(tolua_S,"onTouchCancelled",tolua_CocoStudio_ScrollView_onTouchCancelled00);
   tolua_function(tolua_S,"getNodeByTag",tolua_CocoStudio_ScrollView_getNodeByTag00);
   tolua_function(tolua_S,"isInertiaScrollEnabled",tolua_CocoStudio_ScrollView_isInertiaScrollEnabled00);
   tolua_function(tolua_S,"setBounceEnabled",tolua_CocoStudio_ScrollView_setBounceEnabled00);
   tolua_function(tolua_S,"jumpToTop",tolua_CocoStudio_ScrollView_jumpToTop00);
   tolua_function(tolua_S,"scrollToLeft",tolua_CocoStudio_ScrollView_scrollToLeft00);
   tolua_function(tolua_S,"jumpToPercentBothDirection",tolua_CocoStudio_ScrollView_jumpToPercentBothDirection00);
   tolua_function(tolua_S,"scrollToPercentVertical",tolua_CocoStudio_ScrollView_scrollToPercentVertical00);
   tolua_function(tolua_S,"onTouchBegan",tolua_CocoStudio_ScrollView_onTouchBegan00);
   tolua_function(tolua_S,"scrollToBottomRight",tolua_CocoStudio_ScrollView_scrollToBottomRight00);
   tolua_function(tolua_S,"removeNode",tolua_CocoStudio_ScrollView_removeNode00);
   tolua_function(tolua_S,"removeAllNodes",tolua_CocoStudio_ScrollView_removeAllNodes00);
   tolua_function(tolua_S,"jumpToLeft",tolua_CocoStudio_ScrollView_jumpToLeft00);
   tolua_function(tolua_S,"scrollToRight",tolua_CocoStudio_ScrollView_scrollToRight00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_ScrollView_removeChild00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_ScrollView_removeChild01);
   tolua_function(tolua_S,"getNodes",tolua_CocoStudio_ScrollView_getNodes00);
   tolua_function(tolua_S,"jumpToBottomLeft",tolua_CocoStudio_ScrollView_jumpToBottomLeft00);
   tolua_function(tolua_S,"getTouchEndPoint",tolua_CocoStudio_ScrollView_getTouchEndPoint00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ScrollView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ScrollView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ScrollView_new00_local);
   tolua_function(tolua_S,"setLayoutType",tolua_CocoStudio_ScrollView_setLayoutType00);
   tolua_function(tolua_S,"jumpToRight",tolua_CocoStudio_ScrollView_jumpToRight00);
   tolua_function(tolua_S,"getChildrenCount",tolua_CocoStudio_ScrollView_getChildrenCount00);
   tolua_function(tolua_S,"scrollToTopRight",tolua_CocoStudio_ScrollView_scrollToTopRight00);
   tolua_variable(tolua_S,"__UIScrollInterface__",tolua_get_ScrollView___UIScrollInterface__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Button","Button","Widget",tolua_collect_Button);
  #else
  tolua_cclass(tolua_S,"Button","Button","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Button");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Button_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_Button_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_Button_setAnchorPoint00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_Button_getVirtualRenderer00);
   tolua_function(tolua_S,"getTitleText",tolua_CocoStudio_Button_getTitleText00);
   tolua_function(tolua_S,"setTitleFontSize",tolua_CocoStudio_Button_setTitleFontSize00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_Button_getDescription00);
   tolua_function(tolua_S,"setScale9Enabled",tolua_CocoStudio_Button_setScale9Enabled00);
   tolua_function(tolua_S,"setTitleColor",tolua_CocoStudio_Button_setTitleColor00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_Button_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"setCapInsetsDisabledRenderer",tolua_CocoStudio_Button_setCapInsetsDisabledRenderer00);
   tolua_function(tolua_S,"getCapInsetPressedRenderer",tolua_CocoStudio_Button_getCapInsetPressedRenderer00);
   tolua_function(tolua_S,"getTitleColor",tolua_CocoStudio_Button_getTitleColor00);
   tolua_function(tolua_S,"loadTextureDisabled",tolua_CocoStudio_Button_loadTextureDisabled00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Button_delete00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_Button_getContentSize00);
   tolua_function(tolua_S,"setTitleText",tolua_CocoStudio_Button_setTitleText00);
   tolua_function(tolua_S,"getCapInsetNormalRenderer",tolua_CocoStudio_Button_getCapInsetNormalRenderer00);
   tolua_function(tolua_S,"setCapInsetsNormalRenderer",tolua_CocoStudio_Button_setCapInsetsNormalRenderer00);
   tolua_function(tolua_S,"loadTexturePressed",tolua_CocoStudio_Button_loadTexturePressed00);
   tolua_function(tolua_S,"setTitleFontName",tolua_CocoStudio_Button_setTitleFontName00);
   tolua_function(tolua_S,"loadTextures",tolua_CocoStudio_Button_loadTextures00);
   tolua_function(tolua_S,"isScale9Enabled",tolua_CocoStudio_Button_isScale9Enabled00);
   tolua_function(tolua_S,"getCapInsetDisabledRenderer",tolua_CocoStudio_Button_getCapInsetDisabledRenderer00);
   tolua_function(tolua_S,"loadTextureNormal",tolua_CocoStudio_Button_loadTextureNormal00);
   tolua_function(tolua_S,"setCapInsetsPressedRenderer",tolua_CocoStudio_Button_setCapInsetsPressedRenderer00);
   tolua_function(tolua_S,"getTitleFontSize",tolua_CocoStudio_Button_getTitleFontSize00);
   tolua_function(tolua_S,"getTitleFontName",tolua_CocoStudio_Button_getTitleFontName00);
   tolua_function(tolua_S,"setCapInsets",tolua_CocoStudio_Button_setCapInsets00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Button_new00_local);
   tolua_function(tolua_S,"setPressedActionEnabled",tolua_CocoStudio_Button_setPressedActionEnabled00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FrameCreateCallFunc","FrameCreateCallFunc","CCObject",tolua_collect_FrameCreateCallFunc);
  #else
  tolua_cclass(tolua_S,"FrameCreateCallFunc","FrameCreateCallFunc","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FrameCreateCallFunc");
   tolua_function(tolua_S,"delete",tolua_CocoStudio_FrameCreateCallFunc_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_FrameCreateCallFunc_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_FrameCreateCallFunc_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_FrameCreateCallFunc_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuarticActionOut","CCEaseQuarticActionOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuarticActionOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuarticActionOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuarticActionOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuarticActionOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuarticActionOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCColor3bObject","CCColor3bObject","CCObject",tolua_collect_CCColor3bObject);
  #else
  tolua_cclass(tolua_S,"CCColor3bObject","CCColor3bObject","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCColor3bObject");
   tolua_variable(tolua_S,"value",tolua_get_CCColor3bObject_value,tolua_set_CCColor3bObject_value);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCColor3bObject_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCColor3bObject_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCColor3bObject_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ImageView","ImageView","Widget",tolua_collect_ImageView);
  #else
  tolua_cclass(tolua_S,"ImageView","ImageView","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ImageView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ImageView_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_ImageView_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_ImageView_setAnchorPoint00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_ImageView_getVirtualRenderer00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_ImageView_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"loadTexture",tolua_CocoStudio_ImageView_loadTexture00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_ImageView_getDescription00);
   tolua_function(tolua_S,"setScale9Enabled",tolua_CocoStudio_ImageView_setScale9Enabled00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ImageView_delete00);
   tolua_function(tolua_S,"setTextureRect",tolua_CocoStudio_ImageView_setTextureRect00);
   tolua_function(tolua_S,"setCapInsets",tolua_CocoStudio_ImageView_setCapInsets00);
   tolua_function(tolua_S,"getCapInsets",tolua_CocoStudio_ImageView_getCapInsets00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_ImageView_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ImageView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ImageView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ImageView_new00_local);
   tolua_function(tolua_S,"isScale9Enabled",tolua_CocoStudio_ImageView_isScale9Enabled00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ArmatureMovementDispatcher","ArmatureMovementDispatcher","CCObject",tolua_collect_ArmatureMovementDispatcher);
  #else
  tolua_cclass(tolua_S,"ArmatureMovementDispatcher","ArmatureMovementDispatcher","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ArmatureMovementDispatcher");
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ArmatureMovementDispatcher_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ArmatureMovementDispatcher_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ArmatureMovementDispatcher_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ArmatureMovementDispatcher_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Margin","Margin","",tolua_collect_Margin);
  #else
  tolua_cclass(tolua_S,"Margin","Margin","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Margin");
   tolua_variable(tolua_S,"left",tolua_get_Margin_left,tolua_set_Margin_left);
   tolua_variable(tolua_S,"top",tolua_get_Margin_top,tolua_set_Margin_top);
   tolua_variable(tolua_S,"right",tolua_get_Margin_right,tolua_set_Margin_right);
   tolua_variable(tolua_S,"bottom",tolua_get_Margin_bottom,tolua_set_Margin_bottom);
   tolua_function(tolua_S,"setMargin",tolua_CocoStudio_Margin_setMargin00);
   tolua_function(tolua_S,"equals",tolua_CocoStudio_Margin_equals00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Margin_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Margin_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Margin_new00_local);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Margin_new01);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Margin_new01_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Margin_new01_local);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Margin_new02);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Margin_new02_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Margin_new02_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArrayForObjectSorting","CCArrayForObjectSorting","CCArray",tolua_collect_CCArrayForObjectSorting);
  #else
  tolua_cclass(tolua_S,"CCArrayForObjectSorting","CCArrayForObjectSorting","CCArray",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArrayForObjectSorting");
   tolua_function(tolua_S,"setObjectID_ofSortedObject",tolua_CocoStudio_CCArrayForObjectSorting_setObjectID_ofSortedObject00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCArrayForObjectSorting_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCArrayForObjectSorting_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCArrayForObjectSorting_new00_local);
   tolua_function(tolua_S,"indexOfSortedObject",tolua_CocoStudio_CCArrayForObjectSorting_indexOfSortedObject00);
   tolua_function(tolua_S,"getObjectWithObjectID",tolua_CocoStudio_CCArrayForObjectSorting_getObjectWithObjectID00);
   tolua_function(tolua_S,"insertSortedObject",tolua_CocoStudio_CCArrayForObjectSorting_insertSortedObject00);
   tolua_function(tolua_S,"objectWithObjectID",tolua_CocoStudio_CCArrayForObjectSorting_objectWithObjectID00);
   tolua_function(tolua_S,"removeSortedObject",tolua_CocoStudio_CCArrayForObjectSorting_removeSortedObject00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseCubicActionOut","CCEaseCubicActionOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCubicActionOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCubicActionOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCubicActionOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCubicActionOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCubicActionOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCComAudio","CCComAudio","CCComponent",tolua_collect_CCComAudio);
  #else
  tolua_cclass(tolua_S,"CCComAudio","CCComAudio","CCComponent",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCComAudio");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCComAudio_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_CCComAudio_createInstance00);
   tolua_function(tolua_S,"stopAllEffects",tolua_CocoStudio_CCComAudio_stopAllEffects00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCComAudio_onEnter00);
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_CCComAudio_serialize00);
   tolua_function(tolua_S,"getEffectsVolume",tolua_CocoStudio_CCComAudio_getEffectsVolume00);
   tolua_function(tolua_S,"stopEffect",tolua_CocoStudio_CCComAudio_stopEffect00);
   tolua_function(tolua_S,"getBackgroundMusicVolume",tolua_CocoStudio_CCComAudio_getBackgroundMusicVolume00);
   tolua_function(tolua_S,"willPlayBackgroundMusic",tolua_CocoStudio_CCComAudio_willPlayBackgroundMusic00);
   tolua_function(tolua_S,"pauseBackgroundMusic",tolua_CocoStudio_CCComAudio_pauseBackgroundMusic00);
   tolua_function(tolua_S,"setBackgroundMusicVolume",tolua_CocoStudio_CCComAudio_setBackgroundMusicVolume00);
   tolua_function(tolua_S,"end",tolua_CocoStudio_CCComAudio_end00);
   tolua_function(tolua_S,"isEnabled",tolua_CocoStudio_CCComAudio_isEnabled00);
   tolua_function(tolua_S,"stopBackgroundMusic",tolua_CocoStudio_CCComAudio_stopBackgroundMusic00);
   tolua_function(tolua_S,"stopBackgroundMusic",tolua_CocoStudio_CCComAudio_stopBackgroundMusic01);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCComAudio_delete00);
   tolua_function(tolua_S,"isBackgroundMusicPlaying",tolua_CocoStudio_CCComAudio_isBackgroundMusicPlaying00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCComAudio_init00);
   tolua_function(tolua_S,"isLoop",tolua_CocoStudio_CCComAudio_isLoop00);
   tolua_function(tolua_S,"pauseAllEffects",tolua_CocoStudio_CCComAudio_pauseAllEffects00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCComAudio_setEnabled00);
   tolua_function(tolua_S,"preloadBackgroundMusic",tolua_CocoStudio_CCComAudio_preloadBackgroundMusic00);
   tolua_function(tolua_S,"playBackgroundMusic",tolua_CocoStudio_CCComAudio_playBackgroundMusic00);
   tolua_function(tolua_S,"playBackgroundMusic",tolua_CocoStudio_CCComAudio_playBackgroundMusic01);
   tolua_function(tolua_S,"playBackgroundMusic",tolua_CocoStudio_CCComAudio_playBackgroundMusic02);
   tolua_function(tolua_S,"playEffect",tolua_CocoStudio_CCComAudio_playEffect00);
   tolua_function(tolua_S,"playEffect",tolua_CocoStudio_CCComAudio_playEffect01);
   tolua_function(tolua_S,"playEffect",tolua_CocoStudio_CCComAudio_playEffect02);
   tolua_function(tolua_S,"resumeAllEffects",tolua_CocoStudio_CCComAudio_resumeAllEffects00);
   tolua_function(tolua_S,"setLoop",tolua_CocoStudio_CCComAudio_setLoop00);
   tolua_function(tolua_S,"unloadEffect",tolua_CocoStudio_CCComAudio_unloadEffect00);
   tolua_function(tolua_S,"rewindBackgroundMusic",tolua_CocoStudio_CCComAudio_rewindBackgroundMusic00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCComAudio_onExit00);
   tolua_function(tolua_S,"preloadEffect",tolua_CocoStudio_CCComAudio_preloadEffect00);
   tolua_function(tolua_S,"pauseEffect",tolua_CocoStudio_CCComAudio_pauseEffect00);
   tolua_function(tolua_S,"resumeBackgroundMusic",tolua_CocoStudio_CCComAudio_resumeBackgroundMusic00);
   tolua_function(tolua_S,"setFile",tolua_CocoStudio_CCComAudio_setFile00);
   tolua_function(tolua_S,"setEffectsVolume",tolua_CocoStudio_CCComAudio_setEffectsVolume00);
   tolua_function(tolua_S,"getFile",tolua_CocoStudio_CCComAudio_getFile00);
   tolua_function(tolua_S,"resumeEffect",tolua_CocoStudio_CCComAudio_resumeEffect00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCColliderDetector","CCColliderDetector","CCObject",tolua_collect_CCColliderDetector);
  #else
  tolua_cclass(tolua_S,"CCColliderDetector","CCColliderDetector","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCColliderDetector");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCColliderDetector_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCColliderDetector_create01);
   tolua_function(tolua_S,"getBone",tolua_CocoStudio_CCColliderDetector_getBone00);
   tolua_function(tolua_S,"addContourData",tolua_CocoStudio_CCColliderDetector_addContourData00);
   tolua_function(tolua_S,"addContourDataList",tolua_CocoStudio_CCColliderDetector_addContourDataList00);
   tolua_function(tolua_S,"getActive",tolua_CocoStudio_CCColliderDetector_getActive00);
   tolua_function(tolua_S,"setActive",tolua_CocoStudio_CCColliderDetector_setActive00);
   tolua_function(tolua_S,"updateTransform",tolua_CocoStudio_CCColliderDetector_updateTransform00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCColliderDetector_delete00);
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_CCColliderDetector_removeAll00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCColliderDetector_init00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCColliderDetector_init01);
   tolua_function(tolua_S,"removeContourData",tolua_CocoStudio_CCColliderDetector_removeContourData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCColliderDetector_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCColliderDetector_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCColliderDetector_new00_local);
   tolua_function(tolua_S,"setBone",tolua_CocoStudio_CCColliderDetector_setBone00);
   tolua_function(tolua_S,"getColliderBodyList",tolua_CocoStudio_CCColliderDetector_getColliderBodyList00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIScrollInterface","UIScrollInterface","",tolua_collect_UIScrollInterface);
  #else
  tolua_cclass(tolua_S,"UIScrollInterface","UIScrollInterface","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIScrollInterface");
   tolua_function(tolua_S,"delete",tolua_CocoStudio_UIScrollInterface_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UICCLabelAtlas","UICCLabelAtlas","CCLabelAtlas",tolua_collect_UICCLabelAtlas);
  #else
  tolua_cclass(tolua_S,"UICCLabelAtlas","UICCLabelAtlas","CCLabelAtlas",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UICCLabelAtlas");
   tolua_function(tolua_S,"create",tolua_CocoStudio_UICCLabelAtlas_create00);
   tolua_function(tolua_S,"setProperty",tolua_CocoStudio_UICCLabelAtlas_setProperty00);
   tolua_function(tolua_S,"setProperty",tolua_CocoStudio_UICCLabelAtlas_setProperty01);
   tolua_function(tolua_S,"updateDisplayedOpacity",tolua_CocoStudio_UICCLabelAtlas_updateDisplayedOpacity00);
   tolua_function(tolua_S,"draw",tolua_CocoStudio_UICCLabelAtlas_draw00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_UICCLabelAtlas_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_UICCLabelAtlas_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_UICCLabelAtlas_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_UICCLabelAtlas_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCAnimationData","CCAnimationData","CCObject",tolua_collect_CCAnimationData);
  #else
  tolua_cclass(tolua_S,"CCAnimationData","CCAnimationData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCAnimationData");
   tolua_variable(tolua_S,"name",tolua_get_CCAnimationData_name,tolua_set_CCAnimationData_name);
   tolua_variable(tolua_S,"movementDataDic",tolua_get_CCAnimationData_movementDataDic,tolua_set_CCAnimationData_movementDataDic);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCAnimationData_create00);
   tolua_function(tolua_S,"getMovement",tolua_CocoStudio_CCAnimationData_getMovement00);
   tolua_function(tolua_S,"getMovementCount",tolua_CocoStudio_CCAnimationData_getMovementCount00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCAnimationData_delete00);
   tolua_function(tolua_S,"addMovement",tolua_CocoStudio_CCAnimationData_addMovement00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCAnimationData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCAnimationData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCAnimationData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlColourPicker","CCControlColourPicker","CCControl",tolua_collect_CCControlColourPicker);
  #else
  tolua_cclass(tolua_S,"CCControlColourPicker","CCControlColourPicker","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlColourPicker");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlColourPicker_create00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlColourPicker_setEnabled00);
   tolua_function(tolua_S,"getHuePicker",tolua_CocoStudio_CCControlColourPicker_getHuePicker00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_CCControlColourPicker_setColor00);
   tolua_function(tolua_S,"hueSliderValueChanged",tolua_CocoStudio_CCControlColourPicker_hueSliderValueChanged00);
   tolua_function(tolua_S,"getcolourPicker",tolua_CocoStudio_CCControlColourPicker_getcolourPicker00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlColourPicker_delete00);
   tolua_function(tolua_S,"setBackground",tolua_CocoStudio_CCControlColourPicker_setBackground00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCControlColourPicker_init00);
   tolua_function(tolua_S,"setcolourPicker",tolua_CocoStudio_CCControlColourPicker_setcolourPicker00);
   tolua_function(tolua_S,"colourSliderValueChanged",tolua_CocoStudio_CCControlColourPicker_colourSliderValueChanged00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlColourPicker_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlColourPicker_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlColourPicker_new00_local);
   tolua_function(tolua_S,"setHuePicker",tolua_CocoStudio_CCControlColourPicker_setHuePicker00);
   tolua_function(tolua_S,"getBackground",tolua_CocoStudio_CCControlColourPicker_getBackground00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TextureFrame","TextureFrame","Frame",tolua_collect_TextureFrame);
  #else
  tolua_cclass(tolua_S,"TextureFrame","TextureFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TextureFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_TextureFrame_create00);
   tolua_function(tolua_S,"getTextureName",tolua_CocoStudio_TextureFrame_getTextureName00);
   tolua_function(tolua_S,"setNode",tolua_CocoStudio_TextureFrame_setNode00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_TextureFrame_onEnter00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_TextureFrame_clone00);
   tolua_function(tolua_S,"setTextureName",tolua_CocoStudio_TextureFrame_setTextureName00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_TextureFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_TextureFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_TextureFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UICCTextField","UICCTextField","CCTextFieldTTF",tolua_collect_UICCTextField);
  #else
  tolua_cclass(tolua_S,"UICCTextField","UICCTextField","CCTextFieldTTF",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UICCTextField");
   tolua_function(tolua_S,"create",tolua_CocoStudio_UICCTextField_create00);
   tolua_function(tolua_S,"onTextFieldAttachWithIME",tolua_CocoStudio_UICCTextField_onTextFieldAttachWithIME00);
   tolua_function(tolua_S,"setPasswordText",tolua_CocoStudio_UICCTextField_setPasswordText00);
   tolua_function(tolua_S,"setAttachWithIME",tolua_CocoStudio_UICCTextField_setAttachWithIME00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_UICCTextField_onEnter00);
   tolua_function(tolua_S,"getDeleteBackward",tolua_CocoStudio_UICCTextField_getDeleteBackward00);
   tolua_function(tolua_S,"getAttachWithIME",tolua_CocoStudio_UICCTextField_getAttachWithIME00);
   tolua_function(tolua_S,"onTextFieldDeleteBackward",tolua_CocoStudio_UICCTextField_onTextFieldDeleteBackward00);
   tolua_function(tolua_S,"getInsertText",tolua_CocoStudio_UICCTextField_getInsertText00);
   tolua_function(tolua_S,"deleteBackward",tolua_CocoStudio_UICCTextField_deleteBackward00);
   tolua_function(tolua_S,"setInsertText",tolua_CocoStudio_UICCTextField_setInsertText00);
   tolua_function(tolua_S,"getDetachWithIME",tolua_CocoStudio_UICCTextField_getDetachWithIME00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_UICCTextField_delete00);
   tolua_function(tolua_S,"getCharCount",tolua_CocoStudio_UICCTextField_getCharCount00);
   tolua_function(tolua_S,"closeIME",tolua_CocoStudio_UICCTextField_closeIME00);
   tolua_function(tolua_S,"setPasswordEnabled",tolua_CocoStudio_UICCTextField_setPasswordEnabled00);
   tolua_function(tolua_S,"setMaxLengthEnabled",tolua_CocoStudio_UICCTextField_setMaxLengthEnabled00);
   tolua_function(tolua_S,"setPasswordStyleText",tolua_CocoStudio_UICCTextField_setPasswordStyleText00);
   tolua_function(tolua_S,"insertText",tolua_CocoStudio_UICCTextField_insertText00);
   tolua_function(tolua_S,"isPasswordEnabled",tolua_CocoStudio_UICCTextField_isPasswordEnabled00);
   tolua_function(tolua_S,"onTextFieldInsertText",tolua_CocoStudio_UICCTextField_onTextFieldInsertText00);
   tolua_function(tolua_S,"onTextFieldDetachWithIME",tolua_CocoStudio_UICCTextField_onTextFieldDetachWithIME00);
   tolua_function(tolua_S,"getMaxLength",tolua_CocoStudio_UICCTextField_getMaxLength00);
   tolua_function(tolua_S,"isMaxLengthEnabled",tolua_CocoStudio_UICCTextField_isMaxLengthEnabled00);
   tolua_function(tolua_S,"openIME",tolua_CocoStudio_UICCTextField_openIME00);
   tolua_function(tolua_S,"setDetachWithIME",tolua_CocoStudio_UICCTextField_setDetachWithIME00);
   tolua_function(tolua_S,"setMaxLength",tolua_CocoStudio_UICCTextField_setMaxLength00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_UICCTextField_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_UICCTextField_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_UICCTextField_new00_local);
   tolua_function(tolua_S,"setDeleteBackward",tolua_CocoStudio_UICCTextField_setDeleteBackward00);
   tolua_variable(tolua_S,"__CCTextFieldDelegate__",tolua_get_UICCTextField___CCTextFieldDelegate__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CocoLoader","CocoLoader","",tolua_collect_CocoLoader);
  #else
  tolua_cclass(tolua_S,"CocoLoader","CocoLoader","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CocoLoader");
   tolua_function(tolua_S,"GetMemoryAddr_AttribDesc",tolua_CocoStudio_CocoLoader_GetMemoryAddr_AttribDesc00);
   tolua_function(tolua_S,"GetCocoObjectDescArray",tolua_CocoStudio_CocoLoader_GetCocoObjectDescArray00);
   tolua_function(tolua_S,"GetRootCocoNode",tolua_CocoStudio_CocoLoader_GetRootCocoNode00);
   tolua_function(tolua_S,"GetMemoryAddr_String",tolua_CocoStudio_CocoLoader_GetMemoryAddr_String00);
   tolua_function(tolua_S,"GetMemoryAddr_CocoNode",tolua_CocoStudio_CocoLoader_GetMemoryAddr_CocoNode00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CocoLoader_delete00);
   tolua_function(tolua_S,"GetCocoObjectDesc",tolua_CocoStudio_CocoLoader_GetCocoObjectDesc00);
   tolua_function(tolua_S,"GetCocoObjectDesc",tolua_CocoStudio_CocoLoader_GetCocoObjectDesc01);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CocoLoader_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CocoLoader_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CocoLoader_new00_local);
   tolua_function(tolua_S,"ReadCocoBinBuff",tolua_CocoStudio_CocoLoader_ReadCocoBinBuff00);
   tolua_function(tolua_S,"GetFileHeader",tolua_CocoStudio_CocoLoader_GetFileHeader00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCScrollView","CCScrollView","CCLayer",tolua_collect_CCScrollView);
  #else
  tolua_cclass(tolua_S,"CCScrollView","CCScrollView","CCLayer",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCScrollView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScrollView_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScrollView_create01);
   tolua_function(tolua_S,"isClippingToBounds",tolua_CocoStudio_CCScrollView_isClippingToBounds00);
   tolua_function(tolua_S,"setContainer",tolua_CocoStudio_CCScrollView_setContainer00);
   tolua_function(tolua_S,"setContentOffsetInDuration",tolua_CocoStudio_CCScrollView_setContentOffsetInDuration00);
   tolua_function(tolua_S,"setZoomScaleInDuration",tolua_CocoStudio_CCScrollView_setZoomScaleInDuration00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCScrollView_addChild00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCScrollView_addChild01);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCScrollView_addChild02);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCScrollView_ccTouchBegan00);
   tolua_function(tolua_S,"getContainer",tolua_CocoStudio_CCScrollView_getContainer00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCScrollView_ccTouchEnded00);
   tolua_function(tolua_S,"getDirection",tolua_CocoStudio_CCScrollView_getDirection00);
   tolua_function(tolua_S,"setMinScale",tolua_CocoStudio_CCScrollView_setMinScale00);
   tolua_function(tolua_S,"getZoomScale",tolua_CocoStudio_CCScrollView_getZoomScale00);
   tolua_function(tolua_S,"getScriptHandler",tolua_CocoStudio_CCScrollView_getScriptHandler00);
   tolua_function(tolua_S,"updateInset",tolua_CocoStudio_CCScrollView_updateInset00);
   tolua_function(tolua_S,"initWithViewSize",tolua_CocoStudio_CCScrollView_initWithViewSize00);
   tolua_function(tolua_S,"pause",tolua_CocoStudio_CCScrollView_pause00);
   tolua_function(tolua_S,"setDirection",tolua_CocoStudio_CCScrollView_setDirection00);
   tolua_function(tolua_S,"registerScriptHandler",tolua_CocoStudio_CCScrollView_registerScriptHandler00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_CCScrollView_visit00);
   tolua_function(tolua_S,"setBounceable",tolua_CocoStudio_CCScrollView_setBounceable00);
   tolua_function(tolua_S,"setContentOffset",tolua_CocoStudio_CCScrollView_setContentOffset00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCScrollView_delete00);
   tolua_function(tolua_S,"isDragging",tolua_CocoStudio_CCScrollView_isDragging00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCScrollView_init00);
   tolua_function(tolua_S,"isBounceable",tolua_CocoStudio_CCScrollView_isBounceable00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_CCScrollView_getContentSize00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCScrollView_ccTouchMoved00);
   tolua_function(tolua_S,"setTouchEnabled",tolua_CocoStudio_CCScrollView_setTouchEnabled00);
   tolua_function(tolua_S,"getContentOffset",tolua_CocoStudio_CCScrollView_getContentOffset00);
   tolua_function(tolua_S,"resume",tolua_CocoStudio_CCScrollView_resume00);
   tolua_function(tolua_S,"setClippingToBounds",tolua_CocoStudio_CCScrollView_setClippingToBounds00);
   tolua_function(tolua_S,"setViewSize",tolua_CocoStudio_CCScrollView_setViewSize00);
   tolua_function(tolua_S,"getViewSize",tolua_CocoStudio_CCScrollView_getViewSize00);
   tolua_function(tolua_S,"maxContainerOffset",tolua_CocoStudio_CCScrollView_maxContainerOffset00);
   tolua_function(tolua_S,"setDelegate",tolua_CocoStudio_CCScrollView_setDelegate00);
   tolua_function(tolua_S,"setContentSize",tolua_CocoStudio_CCScrollView_setContentSize00);
   tolua_function(tolua_S,"setMaxScale",tolua_CocoStudio_CCScrollView_setMaxScale00);
   tolua_function(tolua_S,"isTouchMoved",tolua_CocoStudio_CCScrollView_isTouchMoved00);
   tolua_function(tolua_S,"getDelegate",tolua_CocoStudio_CCScrollView_getDelegate00);
   tolua_function(tolua_S,"unregisterScriptHandler",tolua_CocoStudio_CCScrollView_unregisterScriptHandler00);
   tolua_function(tolua_S,"isNodeVisible",tolua_CocoStudio_CCScrollView_isNodeVisible00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCScrollView_ccTouchCancelled00);
   tolua_function(tolua_S,"minContainerOffset",tolua_CocoStudio_CCScrollView_minContainerOffset00);
   tolua_function(tolua_S,"getTouchPoint",tolua_CocoStudio_CCScrollView_getTouchPoint00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCScrollView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCScrollView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCScrollView_new00_local);
   tolua_function(tolua_S,"registerWithTouchDispatcher",tolua_CocoStudio_CCScrollView_registerWithTouchDispatcher00);
   tolua_function(tolua_S,"setZoomScale",tolua_CocoStudio_CCScrollView_setZoomScale00);
   tolua_function(tolua_S,"setZoomScale",tolua_CocoStudio_CCScrollView_setZoomScale01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionRotationFrame","ActionRotationFrame","ActionFrame",tolua_collect_ActionRotationFrame);
  #else
  tolua_cclass(tolua_S,"ActionRotationFrame","ActionRotationFrame","ActionFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionRotationFrame");
   tolua_variable(tolua_S,"m_rotation",tolua_get_ActionRotationFrame_m_rotation,tolua_set_ActionRotationFrame_m_rotation);
   tolua_function(tolua_S,"setRotation",tolua_CocoStudio_ActionRotationFrame_setRotation00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionRotationFrame_delete00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionRotationFrame_getAction00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionRotationFrame_getAction01);
   tolua_function(tolua_S,"getRotation",tolua_CocoStudio_ActionRotationFrame_getRotation00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionRotationFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionRotationFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionRotationFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ColliderBody","ColliderBody","CCObject",tolua_collect_ColliderBody);
  #else
  tolua_cclass(tolua_S,"ColliderBody","ColliderBody","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ColliderBody");
   tolua_function(tolua_S,"getContourData",tolua_CocoStudio_ColliderBody_getContourData00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ColliderBody_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ColliderBody_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ColliderBody_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ColliderBody_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ScaleFrame","ScaleFrame","Frame",tolua_collect_ScaleFrame);
  #else
  tolua_cclass(tolua_S,"ScaleFrame","ScaleFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ScaleFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ScaleFrame_create00);
   tolua_function(tolua_S,"setScaleY",tolua_CocoStudio_ScaleFrame_setScaleY00);
   tolua_function(tolua_S,"setScaleX",tolua_CocoStudio_ScaleFrame_setScaleX00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_ScaleFrame_onEnter00);
   tolua_function(tolua_S,"getScaleY",tolua_CocoStudio_ScaleFrame_getScaleY00);
   tolua_function(tolua_S,"getScaleX",tolua_CocoStudio_ScaleFrame_getScaleX00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_ScaleFrame_clone00);
   tolua_function(tolua_S,"setScale",tolua_CocoStudio_ScaleFrame_setScale00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ScaleFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ScaleFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ScaleFrame_new00_local);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_ScaleFrame_apply00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CheckBox","CheckBox","Widget",tolua_collect_CheckBox);
  #else
  tolua_cclass(tolua_S,"CheckBox","CheckBox","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CheckBox");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CheckBox_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_CheckBox_createInstance00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_CheckBox_setAnchorPoint00);
   tolua_function(tolua_S,"getSelectedState",tolua_CocoStudio_CheckBox_getSelectedState00);
   tolua_function(tolua_S,"loadTextureBackGroundSelected",tolua_CocoStudio_CheckBox_loadTextureBackGroundSelected00);
   tolua_function(tolua_S,"loadTextureBackGroundDisabled",tolua_CocoStudio_CheckBox_loadTextureBackGroundDisabled00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_CheckBox_getDescription00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_CheckBox_getVirtualRenderer00);
   tolua_function(tolua_S,"loadTextureFrontCross",tolua_CocoStudio_CheckBox_loadTextureFrontCross00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_CheckBox_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CheckBox_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CheckBox_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CheckBox_new00_local);
   tolua_function(tolua_S,"loadTextures",tolua_CocoStudio_CheckBox_loadTextures00);
   tolua_function(tolua_S,"onTouchEnded",tolua_CocoStudio_CheckBox_onTouchEnded00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CheckBox_delete00);
   tolua_function(tolua_S,"loadTextureBackGround",tolua_CocoStudio_CheckBox_loadTextureBackGround00);
   tolua_function(tolua_S,"setSelectedState",tolua_CocoStudio_CheckBox_setSelectedState00);
   tolua_function(tolua_S,"loadTextureFrontCrossDisabled",tolua_CocoStudio_CheckBox_loadTextureFrontCrossDisabled00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTween","CCTween","CCProcessBase",tolua_collect_CCTween);
  #else
  tolua_cclass(tolua_S,"CCTween","CCTween","CCProcessBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTween");
   tolua_variable(tolua_S,"m_iBetweenDuration",tolua_get_CCTween_m_iBetweenDuration,tolua_set_CCTween_m_iBetweenDuration);
   tolua_variable(tolua_S,"m_iTotalDuration",tolua_get_CCTween_m_iTotalDuration,tolua_set_CCTween_m_iTotalDuration);
   tolua_variable(tolua_S,"m_iFromIndex",tolua_get_CCTween_m_iFromIndex,tolua_set_CCTween_m_iFromIndex);
   tolua_variable(tolua_S,"m_iToIndex",tolua_get_CCTween_m_iToIndex,tolua_set_CCTween_m_iToIndex);
   tolua_variable(tolua_S,"m_bPassLastFrame",tolua_get_CCTween_m_bPassLastFrame,tolua_set_CCTween_m_bPassLastFrame);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCTween_create00);
   tolua_function(tolua_S,"play",tolua_CocoStudio_CCTween_play00);
   tolua_function(tolua_S,"gotoAndPause",tolua_CocoStudio_CCTween_gotoAndPause00);
   tolua_function(tolua_S,"getMovementBoneData",tolua_CocoStudio_CCTween_getMovementBoneData00);
   tolua_function(tolua_S,"getAnimation",tolua_CocoStudio_CCTween_getAnimation00);
   tolua_function(tolua_S,"setMovementBoneData",tolua_CocoStudio_CCTween_setMovementBoneData00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCTween_delete00);
   tolua_function(tolua_S,"gotoAndPlay",tolua_CocoStudio_CCTween_gotoAndPlay00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCTween_init00);
   tolua_function(tolua_S,"setAnimation",tolua_CocoStudio_CCTween_setAnimation00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCTween_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCTween_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCTween_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionFrameEasing","ActionFrameEasing","CCObject",tolua_collect_ActionFrameEasing);
  #else
  tolua_cclass(tolua_S,"ActionFrameEasing","ActionFrameEasing","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionFrameEasing");
   tolua_function(tolua_S,"easeValue",tolua_CocoStudio_ActionFrameEasing_easeValue00);
   tolua_function(tolua_S,"bounceTime",tolua_CocoStudio_ActionFrameEasing_bounceTime00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionFrameEasing_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionFrameEasing_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionFrameEasing_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionFrameEasing_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCDecorativeDisplay","CCDecorativeDisplay","CCObject",tolua_collect_CCDecorativeDisplay);
  #else
  tolua_cclass(tolua_S,"CCDecorativeDisplay","CCDecorativeDisplay","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCDecorativeDisplay");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCDecorativeDisplay_create00);
   tolua_function(tolua_S,"getDisplay",tolua_CocoStudio_CCDecorativeDisplay_getDisplay00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCDecorativeDisplay_delete00);
   tolua_function(tolua_S,"setDisplay",tolua_CocoStudio_CCDecorativeDisplay_setDisplay00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCDecorativeDisplay_init00);
   tolua_function(tolua_S,"setDisplayData",tolua_CocoStudio_CCDecorativeDisplay_setDisplayData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCDecorativeDisplay_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCDecorativeDisplay_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCDecorativeDisplay_new00_local);
   tolua_function(tolua_S,"getDisplayData",tolua_CocoStudio_CCDecorativeDisplay_getDisplayData00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ColorFrame","ColorFrame","Frame",tolua_collect_ColorFrame);
  #else
  tolua_cclass(tolua_S,"ColorFrame","ColorFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ColorFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ColorFrame_create00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_ColorFrame_onEnter00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_ColorFrame_setColor00);
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_ColorFrame_getColor00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_ColorFrame_clone00);
   tolua_function(tolua_S,"setAlpha",tolua_CocoStudio_ColorFrame_setAlpha00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ColorFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ColorFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ColorFrame_new00_local);
   tolua_function(tolua_S,"getAlpha",tolua_CocoStudio_ColorFrame_getAlpha00);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_ColorFrame_apply00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCContourData","CCContourData","CCObject",tolua_collect_CCContourData);
  #else
  tolua_cclass(tolua_S,"CCContourData","CCContourData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCContourData");
   tolua_variable(tolua_S,"vertexList",tolua_get_CCContourData_vertexList,tolua_set_CCContourData_vertexList);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCContourData_create00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCContourData_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCContourData_delete00);
   tolua_function(tolua_S,"addVertex",tolua_CocoStudio_CCContourData_addVertex00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCContourData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCContourData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCContourData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCMovementData","CCMovementData","CCObject",tolua_collect_CCMovementData);
  #else
  tolua_cclass(tolua_S,"CCMovementData","CCMovementData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCMovementData");
   tolua_variable(tolua_S,"name",tolua_get_CCMovementData_name,tolua_set_CCMovementData_name);
   tolua_variable(tolua_S,"duration",tolua_get_CCMovementData_duration,tolua_set_CCMovementData_duration);
   tolua_variable(tolua_S,"scale",tolua_get_CCMovementData_scale,tolua_set_CCMovementData_scale);
   tolua_variable(tolua_S,"durationTo",tolua_get_CCMovementData_durationTo,tolua_set_CCMovementData_durationTo);
   tolua_variable(tolua_S,"durationTween",tolua_get_CCMovementData_durationTween,tolua_set_CCMovementData_durationTween);
   tolua_variable(tolua_S,"loop",tolua_get_CCMovementData_loop,tolua_set_CCMovementData_loop);
   tolua_variable(tolua_S,"movBoneDataDic",tolua_get_CCMovementData_movBoneDataDic,tolua_set_CCMovementData_movBoneDataDic);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCMovementData_create00);
   tolua_function(tolua_S,"addMovementBoneData",tolua_CocoStudio_CCMovementData_addMovementBoneData00);
   tolua_function(tolua_S,"getMovementBoneData",tolua_CocoStudio_CCMovementData_getMovementBoneData00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCMovementData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCMovementData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCMovementData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCMovementData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCArmatureAnimation","CCArmatureAnimation","CCProcessBase",tolua_collect_CCArmatureAnimation);
  #else
  tolua_cclass(tolua_S,"CCArmatureAnimation","CCArmatureAnimation","CCProcessBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCArmatureAnimation");
   tolua_variable(tolua_S,"m_fSpeedScale",tolua_get_CCArmatureAnimation_m_fSpeedScale,tolua_set_CCArmatureAnimation_m_fSpeedScale);
   tolua_variable(tolua_S,"m_strMovementID",tolua_get_CCArmatureAnimation_m_strMovementID,tolua_set_CCArmatureAnimation_m_strMovementID);
   tolua_variable(tolua_S,"m_iToIndex",tolua_get_CCArmatureAnimation_m_iToIndex,tolua_set_CCArmatureAnimation_m_iToIndex);
   tolua_variable(tolua_S,"m_bIgnoreFrameEvent",tolua_get_CCArmatureAnimation_m_bIgnoreFrameEvent,tolua_set_CCArmatureAnimation_m_bIgnoreFrameEvent);
   tolua_variable(tolua_S,"m_bOnMovementList",tolua_get_CCArmatureAnimation_m_bOnMovementList,tolua_set_CCArmatureAnimation_m_bOnMovementList);
   tolua_variable(tolua_S,"m_bMovementListLoop",tolua_get_CCArmatureAnimation_m_bMovementListLoop,tolua_set_CCArmatureAnimation_m_bMovementListLoop);
   tolua_variable(tolua_S,"m_uMovementIndex",tolua_get_CCArmatureAnimation_unsigned_m_uMovementIndex,tolua_set_CCArmatureAnimation_unsigned_m_uMovementIndex);
   tolua_variable(tolua_S,"m_iMovementListDurationTo",tolua_get_CCArmatureAnimation_m_iMovementListDurationTo,tolua_set_CCArmatureAnimation_m_iMovementListDurationTo);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCArmatureAnimation_create00);
   tolua_function(tolua_S,"getUserObject",tolua_CocoStudio_CCArmatureAnimation_getUserObject00);
   tolua_function(tolua_S,"setScriptObjectDict",tolua_CocoStudio_CCArmatureAnimation_setScriptObjectDict00);
   tolua_function(tolua_S,"getSpeedScale",tolua_CocoStudio_CCArmatureAnimation_getSpeedScale00);
   tolua_function(tolua_S,"pause",tolua_CocoStudio_CCArmatureAnimation_pause00);
   tolua_function(tolua_S,"setSpeedScale",tolua_CocoStudio_CCArmatureAnimation_setSpeedScale00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCArmatureAnimation_delete00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCArmatureAnimation_init00);
   tolua_function(tolua_S,"play",tolua_CocoStudio_CCArmatureAnimation_play00);
   tolua_function(tolua_S,"setUserObject",tolua_CocoStudio_CCArmatureAnimation_setUserObject00);
   tolua_function(tolua_S,"gotoAndPause",tolua_CocoStudio_CCArmatureAnimation_gotoAndPause00);
   tolua_function(tolua_S,"resume",tolua_CocoStudio_CCArmatureAnimation_resume00);
   tolua_function(tolua_S,"stop",tolua_CocoStudio_CCArmatureAnimation_stop00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCArmatureAnimation_update00);
   tolua_function(tolua_S,"getAnimationData",tolua_CocoStudio_CCArmatureAnimation_getAnimationData00);
   tolua_function(tolua_S,"getScriptObjectDict",tolua_CocoStudio_CCArmatureAnimation_getScriptObjectDict00);
   tolua_function(tolua_S,"playWithArray",tolua_CocoStudio_CCArmatureAnimation_playWithArray00);
   tolua_function(tolua_S,"playWithIndexArray",tolua_CocoStudio_CCArmatureAnimation_playWithIndexArray00);
   tolua_function(tolua_S,"playWithIndex",tolua_CocoStudio_CCArmatureAnimation_playWithIndex00);
   tolua_function(tolua_S,"getCurrentMovementID",tolua_CocoStudio_CCArmatureAnimation_getCurrentMovementID00);
   tolua_function(tolua_S,"setAnimationData",tolua_CocoStudio_CCArmatureAnimation_setAnimationData00);
   tolua_function(tolua_S,"gotoAndPlay",tolua_CocoStudio_CCArmatureAnimation_gotoAndPlay00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCArmatureAnimation_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCArmatureAnimation_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCArmatureAnimation_new00_local);
   tolua_function(tolua_S,"getMovementCount",tolua_CocoStudio_CCArmatureAnimation_getMovementCount00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Timeline","Timeline","CCObject",tolua_collect_Timeline);
  #else
  tolua_cclass(tolua_S,"Timeline","Timeline","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Timeline");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Timeline_create00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_Timeline_clone00);
   tolua_function(tolua_S,"gotoFrame",tolua_CocoStudio_Timeline_gotoFrame00);
   tolua_function(tolua_S,"setNode",tolua_CocoStudio_Timeline_setNode00);
   tolua_function(tolua_S,"getActionTimeline",tolua_CocoStudio_Timeline_getActionTimeline00);
   tolua_function(tolua_S,"insertFrame",tolua_CocoStudio_Timeline_insertFrame00);
   tolua_function(tolua_S,"setActionTag",tolua_CocoStudio_Timeline_setActionTag00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Timeline_delete00);
   tolua_function(tolua_S,"addFrame",tolua_CocoStudio_Timeline_addFrame00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_Timeline_init00);
   tolua_function(tolua_S,"getFrames",tolua_CocoStudio_Timeline_getFrames00);
   tolua_function(tolua_S,"getActionTag",tolua_CocoStudio_Timeline_getActionTag00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Timeline_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Timeline_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Timeline_new00_local);
   tolua_function(tolua_S,"getNode",tolua_CocoStudio_Timeline_getNode00);
   tolua_function(tolua_S,"removeFrame",tolua_CocoStudio_Timeline_removeFrame00);
   tolua_function(tolua_S,"setActionTimeline",tolua_CocoStudio_Timeline_setActionTimeline00);
   tolua_function(tolua_S,"stepToFrame",tolua_CocoStudio_Timeline_stepToFrame00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTransformHelp","CCTransformHelp","",tolua_collect_CCTransformHelp);
  #else
  tolua_cclass(tolua_S,"CCTransformHelp","CCTransformHelp","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTransformHelp");
   tolua_function(tolua_S,"transformFromParentWithoutScale",tolua_CocoStudio_CCTransformHelp_transformFromParentWithoutScale00);
   tolua_function(tolua_S,"nodeToMatrix",tolua_CocoStudio_CCTransformHelp_nodeToMatrix00);
   tolua_function(tolua_S,"transformToParentWithoutScale",tolua_CocoStudio_CCTransformHelp_transformToParentWithoutScale00);
   tolua_function(tolua_S,"nodeConcat",tolua_CocoStudio_CCTransformHelp_nodeConcat00);
   tolua_function(tolua_S,"matrixToNode",tolua_CocoStudio_CCTransformHelp_matrixToNode00);
   tolua_function(tolua_S,"transformFromParent",tolua_CocoStudio_CCTransformHelp_transformFromParent00);
   tolua_function(tolua_S,"nodeSub",tolua_CocoStudio_CCTransformHelp_nodeSub00);
   tolua_function(tolua_S,"transformToParent",tolua_CocoStudio_CCTransformHelp_transformToParent00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCTransformHelp_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCTransformHelp_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCTransformHelp_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCSortableObject","CCSortableObject","",tolua_collect_CCSortableObject);
  #else
  tolua_cclass(tolua_S,"CCSortableObject","CCSortableObject","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCSortableObject");
   tolua_function(tolua_S,"getObjectID",tolua_CocoStudio_CCSortableObject_getObjectID00);
   tolua_function(tolua_S,"setObjectID",tolua_CocoStudio_CCSortableObject_setObjectID00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCSortableObject_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PositionFrame","PositionFrame","Frame",tolua_collect_PositionFrame);
  #else
  tolua_cclass(tolua_S,"PositionFrame","PositionFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PositionFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_PositionFrame_create00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_PositionFrame_onEnter00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_PositionFrame_clone00);
   tolua_function(tolua_S,"getX",tolua_CocoStudio_PositionFrame_getX00);
   tolua_function(tolua_S,"getY",tolua_CocoStudio_PositionFrame_getY00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_PositionFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_PositionFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_PositionFrame_new00_local);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_PositionFrame_apply00);
   tolua_function(tolua_S,"setPosition",tolua_CocoStudio_PositionFrame_setPosition00);
   tolua_function(tolua_S,"setX",tolua_CocoStudio_PositionFrame_setX00);
   tolua_function(tolua_S,"setY",tolua_CocoStudio_PositionFrame_setY00);
   tolua_function(tolua_S,"getPosition",tolua_CocoStudio_PositionFrame_getPosition00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ListView","ListView","ScrollView",tolua_collect_ListView);
  #else
  tolua_cclass(tolua_S,"ListView","ListView","ScrollView",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ListView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ListView_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_ListView_createInstance00);
   tolua_function(tolua_S,"setGravity",tolua_CocoStudio_ListView_setGravity00);
   tolua_function(tolua_S,"removeLastItem",tolua_CocoStudio_ListView_removeLastItem00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_ListView_getDescription00);
   tolua_function(tolua_S,"getItemsMargin",tolua_CocoStudio_ListView_getItemsMargin00);
   tolua_function(tolua_S,"getIndex",tolua_CocoStudio_ListView_getIndex00);
   tolua_function(tolua_S,"pushBackCustomItem",tolua_CocoStudio_ListView_pushBackCustomItem00);
   tolua_function(tolua_S,"insertDefaultItem",tolua_CocoStudio_ListView_insertDefaultItem00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ListView_delete00);
   tolua_function(tolua_S,"removeAllItems",tolua_CocoStudio_ListView_removeAllItems00);
   tolua_function(tolua_S,"getItems",tolua_CocoStudio_ListView_getItems00);
   tolua_function(tolua_S,"getCurSelectedIndex",tolua_CocoStudio_ListView_getCurSelectedIndex00);
   tolua_function(tolua_S,"sortAllChildren",tolua_CocoStudio_ListView_sortAllChildren00);
   tolua_function(tolua_S,"setItemsMargin",tolua_CocoStudio_ListView_setItemsMargin00);
   tolua_function(tolua_S,"getItem",tolua_CocoStudio_ListView_getItem00);
   tolua_function(tolua_S,"removeItem",tolua_CocoStudio_ListView_removeItem00);
   tolua_function(tolua_S,"pushBackDefaultItem",tolua_CocoStudio_ListView_pushBackDefaultItem00);
   tolua_function(tolua_S,"refreshView",tolua_CocoStudio_ListView_refreshView00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ListView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ListView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ListView_new00_local);
   tolua_function(tolua_S,"setItemModel",tolua_CocoStudio_ListView_setItemModel00);
   tolua_function(tolua_S,"requestRefreshView",tolua_CocoStudio_ListView_requestRefreshView00);
   tolua_function(tolua_S,"insertCustomItem",tolua_CocoStudio_ListView_insertCustomItem00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionTimeline","ActionTimeline","CCAction",tolua_collect_ActionTimeline);
  #else
  tolua_cclass(tolua_S,"ActionTimeline","ActionTimeline","CCAction",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionTimeline");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ActionTimeline_create00);
   tolua_function(tolua_S,"setScriptObjectDict",tolua_CocoStudio_ActionTimeline_setScriptObjectDict00);
   tolua_function(tolua_S,"addTimeline",tolua_CocoStudio_ActionTimeline_addTimeline00);
   tolua_function(tolua_S,"getCurrentFrame",tolua_CocoStudio_ActionTimeline_getCurrentFrame00);
   tolua_function(tolua_S,"getStartFrame",tolua_CocoStudio_ActionTimeline_getStartFrame00);
   tolua_function(tolua_S,"pause",tolua_CocoStudio_ActionTimeline_pause00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionTimeline_delete00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_ActionTimeline_init00);
   tolua_function(tolua_S,"removeTimeline",tolua_CocoStudio_ActionTimeline_removeTimeline00);
   tolua_function(tolua_S,"isDone",tolua_CocoStudio_ActionTimeline_isDone00);
   tolua_function(tolua_S,"resume",tolua_CocoStudio_ActionTimeline_resume00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_ActionTimeline_clone00);
   tolua_function(tolua_S,"getScriptObjectDict",tolua_CocoStudio_ActionTimeline_getScriptObjectDict00);
   tolua_function(tolua_S,"step",tolua_CocoStudio_ActionTimeline_step00);
   tolua_function(tolua_S,"getTimeSpeed",tolua_CocoStudio_ActionTimeline_getTimeSpeed00);
   tolua_function(tolua_S,"getDuration",tolua_CocoStudio_ActionTimeline_getDuration00);
   tolua_function(tolua_S,"gotoFrameAndPause",tolua_CocoStudio_ActionTimeline_gotoFrameAndPause00);
   tolua_function(tolua_S,"isPlaying",tolua_CocoStudio_ActionTimeline_isPlaying00);
   tolua_function(tolua_S,"gotoFrameAndPlay",tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay00);
   tolua_function(tolua_S,"gotoFrameAndPlay",tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay01);
   tolua_function(tolua_S,"gotoFrameAndPlay",tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay02);
   tolua_function(tolua_S,"gotoFrameAndPlay",tolua_CocoStudio_ActionTimeline_gotoFrameAndPlay03);
   tolua_function(tolua_S,"clearFrameEventCallFunc",tolua_CocoStudio_ActionTimeline_clearFrameEventCallFunc00);
   tolua_function(tolua_S,"startWithTarget",tolua_CocoStudio_ActionTimeline_startWithTarget00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_ActionTimeline_reverse00);
   tolua_function(tolua_S,"getEndFrame",tolua_CocoStudio_ActionTimeline_getEndFrame00);
   tolua_function(tolua_S,"setTimeSpeed",tolua_CocoStudio_ActionTimeline_setTimeSpeed00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionTimeline_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionTimeline_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionTimeline_new00_local);
   tolua_function(tolua_S,"setDuration",tolua_CocoStudio_ActionTimeline_setDuration00);
   tolua_function(tolua_S,"setCurrentFrame",tolua_CocoStudio_ActionTimeline_setCurrentFrame00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlStepper","CCControlStepper","CCControl",tolua_collect_CCControlStepper);
  #else
  tolua_cclass(tolua_S,"CCControlStepper","CCControlStepper","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlStepper");
   tolua_variable(tolua_S,"m_dValue",tolua_get_CCControlStepper_m_dValue,tolua_set_CCControlStepper_m_dValue);
   tolua_variable(tolua_S,"m_bContinuous",tolua_get_CCControlStepper_m_bContinuous,tolua_set_CCControlStepper_m_bContinuous);
   tolua_variable(tolua_S,"m_bAutorepeat",tolua_get_CCControlStepper_m_bAutorepeat,tolua_set_CCControlStepper_m_bAutorepeat);
   tolua_variable(tolua_S,"m_bWraps",tolua_get_CCControlStepper_m_bWraps,tolua_set_CCControlStepper_m_bWraps);
   tolua_variable(tolua_S,"m_dMinimumValue",tolua_get_CCControlStepper_m_dMinimumValue,tolua_set_CCControlStepper_m_dMinimumValue);
   tolua_variable(tolua_S,"m_dMaximumValue",tolua_get_CCControlStepper_m_dMaximumValue,tolua_set_CCControlStepper_m_dMaximumValue);
   tolua_variable(tolua_S,"m_dStepValue",tolua_get_CCControlStepper_m_dStepValue,tolua_set_CCControlStepper_m_dStepValue);
   tolua_variable(tolua_S,"m_bTouchInsideFlag",tolua_get_CCControlStepper_m_bTouchInsideFlag,tolua_set_CCControlStepper_m_bTouchInsideFlag);
   tolua_variable(tolua_S,"m_eTouchedPart",tolua_get_CCControlStepper_m_eTouchedPart,tolua_set_CCControlStepper_m_eTouchedPart);
   tolua_variable(tolua_S,"m_nAutorepeatCount",tolua_get_CCControlStepper_m_nAutorepeatCount,tolua_set_CCControlStepper_m_nAutorepeatCount);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlStepper_create00);
   tolua_function(tolua_S,"setMinusSprite",tolua_CocoStudio_CCControlStepper_setMinusSprite00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCControlStepper_ccTouchBegan00);
   tolua_function(tolua_S,"getMinusLabel",tolua_CocoStudio_CCControlStepper_getMinusLabel00);
   tolua_function(tolua_S,"setWraps",tolua_CocoStudio_CCControlStepper_setWraps00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCControlStepper_ccTouchEnded00);
   tolua_function(tolua_S,"isContinuous",tolua_CocoStudio_CCControlStepper_isContinuous00);
   tolua_function(tolua_S,"getMinusSprite",tolua_CocoStudio_CCControlStepper_getMinusSprite00);
   tolua_function(tolua_S,"updateLayoutUsingTouchLocation",tolua_CocoStudio_CCControlStepper_updateLayoutUsingTouchLocation00);
   tolua_function(tolua_S,"setValueWithSendingEvent",tolua_CocoStudio_CCControlStepper_setValueWithSendingEvent00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlStepper_delete00);
   tolua_function(tolua_S,"getPlusLabel",tolua_CocoStudio_CCControlStepper_getPlusLabel00);
   tolua_function(tolua_S,"stopAutorepeat",tolua_CocoStudio_CCControlStepper_stopAutorepeat00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCControlStepper_ccTouchMoved00);
   tolua_function(tolua_S,"setMaximumValue",tolua_CocoStudio_CCControlStepper_setMaximumValue00);
   tolua_function(tolua_S,"setPlusSprite",tolua_CocoStudio_CCControlStepper_setPlusSprite00);
   tolua_function(tolua_S,"setMinusLabel",tolua_CocoStudio_CCControlStepper_setMinusLabel00);
   tolua_function(tolua_S,"setValue",tolua_CocoStudio_CCControlStepper_setValue00);
   tolua_function(tolua_S,"setStepValue",tolua_CocoStudio_CCControlStepper_setStepValue00);
   tolua_function(tolua_S,"getPlusSprite",tolua_CocoStudio_CCControlStepper_getPlusSprite00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCControlStepper_update00);
   tolua_function(tolua_S,"setMinimumValue",tolua_CocoStudio_CCControlStepper_setMinimumValue00);
   tolua_function(tolua_S,"startAutorepeat",tolua_CocoStudio_CCControlStepper_startAutorepeat00);
   tolua_function(tolua_S,"initWithMinusSpriteAndPlusSprite",tolua_CocoStudio_CCControlStepper_initWithMinusSpriteAndPlusSprite00);
   tolua_function(tolua_S,"getValue",tolua_CocoStudio_CCControlStepper_getValue00);
   tolua_function(tolua_S,"setPlusLabel",tolua_CocoStudio_CCControlStepper_setPlusLabel00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlStepper_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlStepper_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlStepper_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionManager","ActionManager","CCObject",tolua_collect_ActionManager);
  #else
  tolua_cclass(tolua_S,"ActionManager","ActionManager","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionManager");
   tolua_function(tolua_S,"purge",tolua_CocoStudio_ActionManager_purge00);
   tolua_function(tolua_S,"shareManager",tolua_CocoStudio_ActionManager_shareManager00);
   tolua_function(tolua_S,"getActionByName",tolua_CocoStudio_ActionManager_getActionByName00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionManager_delete00);
   tolua_function(tolua_S,"initWithBinary",tolua_CocoStudio_ActionManager_initWithBinary00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionManager_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionManager_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionManager_new00_local);
   tolua_function(tolua_S,"playActionByName",tolua_CocoStudio_ActionManager_playActionByName00);
   tolua_function(tolua_S,"playActionByName",tolua_CocoStudio_ActionManager_playActionByName01);
   tolua_function(tolua_S,"releaseActions",tolua_CocoStudio_ActionManager_releaseActions00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCTableViewDelegate","CCTableViewDelegate","CCScrollViewDelegate",NULL);
  tolua_beginmodule(tolua_S,"CCTableViewDelegate");
   tolua_function(tolua_S,"tableCellTouched",tolua_CocoStudio_CCTableViewDelegate_tableCellTouched00);
   tolua_function(tolua_S,"tableCellWillRecycle",tolua_CocoStudio_CCTableViewDelegate_tableCellWillRecycle00);
   tolua_function(tolua_S,"tableCellHighlight",tolua_CocoStudio_CCTableViewDelegate_tableCellHighlight00);
   tolua_function(tolua_S,"tableCellUnhighlight",tolua_CocoStudio_CCTableViewDelegate_tableCellUnhighlight00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCComAttribute","CCComAttribute","CCComponent",tolua_collect_CCComAttribute);
  #else
  tolua_cclass(tolua_S,"CCComAttribute","CCComAttribute","CCComponent",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCComAttribute");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCComAttribute_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_CCComAttribute_createInstance00);
   tolua_function(tolua_S,"getFloat",tolua_CocoStudio_CCComAttribute_getFloat00);
   tolua_function(tolua_S,"getBool",tolua_CocoStudio_CCComAttribute_getBool00);
   tolua_function(tolua_S,"setCString",tolua_CocoStudio_CCComAttribute_setCString00);
   tolua_function(tolua_S,"setFloat",tolua_CocoStudio_CCComAttribute_setFloat00);
   tolua_function(tolua_S,"getCString",tolua_CocoStudio_CCComAttribute_getCString00);
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_CCComAttribute_serialize00);
   tolua_function(tolua_S,"setInt",tolua_CocoStudio_CCComAttribute_setInt00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCComAttribute_delete00);
   tolua_function(tolua_S,"parse",tolua_CocoStudio_CCComAttribute_parse00);
   tolua_function(tolua_S,"getInt",tolua_CocoStudio_CCComAttribute_getInt00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCComAttribute_init00);
   tolua_function(tolua_S,"setBool",tolua_CocoStudio_CCComAttribute_setBool00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuinticActionInOut","CCEaseQuinticActionInOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuinticActionInOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuinticActionInOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuinticActionInOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuinticActionInOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuinticActionInOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LinearLayoutParameter","LinearLayoutParameter","LayoutParameter",tolua_collect_LinearLayoutParameter);
  #else
  tolua_cclass(tolua_S,"LinearLayoutParameter","LinearLayoutParameter","LayoutParameter",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LinearLayoutParameter");
   tolua_function(tolua_S,"create",tolua_CocoStudio_LinearLayoutParameter_create00);
   tolua_function(tolua_S,"setGravity",tolua_CocoStudio_LinearLayoutParameter_setGravity00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_LinearLayoutParameter_delete00);
   tolua_function(tolua_S,"createCloneInstance",tolua_CocoStudio_LinearLayoutParameter_createCloneInstance00);
   tolua_function(tolua_S,"copyProperties",tolua_CocoStudio_LinearLayoutParameter_copyProperties00);
   tolua_function(tolua_S,"getGravity",tolua_CocoStudio_LinearLayoutParameter_getGravity00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_LinearLayoutParameter_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_LinearLayoutParameter_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_LinearLayoutParameter_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TriggerObj","TriggerObj","CCObject",tolua_collect_TriggerObj);
  #else
  tolua_cclass(tolua_S,"TriggerObj","TriggerObj","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TriggerObj");
   tolua_function(tolua_S,"create",tolua_CocoStudio_TriggerObj_create00);
   tolua_function(tolua_S,"detect",tolua_CocoStudio_TriggerObj_detect00);
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_TriggerObj_serialize00);
   tolua_function(tolua_S,"setEnable",tolua_CocoStudio_TriggerObj_setEnable00);
   tolua_function(tolua_S,"getId",tolua_CocoStudio_TriggerObj_getId00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_TriggerObj_delete00);
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_TriggerObj_removeAll00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_TriggerObj_init00);
   tolua_function(tolua_S,"done",tolua_CocoStudio_TriggerObj_done00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_TriggerObj_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_TriggerObj_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_TriggerObj_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuinticActionIn","CCEaseQuinticActionIn","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuinticActionIn");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuinticActionIn_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuinticActionIn_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuinticActionIn_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuinticActionIn_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LayoutParameter","LayoutParameter","CCObject",tolua_collect_LayoutParameter);
  #else
  tolua_cclass(tolua_S,"LayoutParameter","LayoutParameter","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LayoutParameter");
   tolua_function(tolua_S,"create",tolua_CocoStudio_LayoutParameter_create00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_LayoutParameter_clone00);
   tolua_function(tolua_S,"getLayoutType",tolua_CocoStudio_LayoutParameter_getLayoutType00);
   tolua_function(tolua_S,"getMargin",tolua_CocoStudio_LayoutParameter_getMargin00);
   tolua_function(tolua_S,"createCloneInstance",tolua_CocoStudio_LayoutParameter_createCloneInstance00);
   tolua_function(tolua_S,"copyProperties",tolua_CocoStudio_LayoutParameter_copyProperties00);
   tolua_function(tolua_S,"setMargin",tolua_CocoStudio_LayoutParameter_setMargin00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_LayoutParameter_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_LayoutParameter_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_LayoutParameter_new00_local);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_LayoutParameter_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionTimelineCache","ActionTimelineCache","CCObject",tolua_collect_ActionTimelineCache);
  #else
  tolua_cclass(tolua_S,"ActionTimelineCache","ActionTimelineCache","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionTimelineCache");
   tolua_function(tolua_S,"destroyInstance",tolua_CocoStudio_ActionTimelineCache_destroyInstance00);
   tolua_function(tolua_S,"getInstance",tolua_CocoStudio_ActionTimelineCache_getInstance00);
   tolua_function(tolua_S,"createAction",tolua_CocoStudio_ActionTimelineCache_createAction00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionTimelineCache_delete00);
   tolua_function(tolua_S,"purge",tolua_CocoStudio_ActionTimelineCache_purge00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_ActionTimelineCache_init00);
   tolua_function(tolua_S,"loadAnimationActionWithContent",tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithContent00);
   tolua_function(tolua_S,"loadAnimationActionWithFile",tolua_CocoStudio_ActionTimelineCache_loadAnimationActionWithFile00);
   tolua_function(tolua_S,"removeAction",tolua_CocoStudio_ActionTimelineCache_removeAction00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCControlUtils","CCControlUtils","",NULL);
  tolua_beginmodule(tolua_S,"CCControlUtils");
   tolua_function(tolua_S,"RGBfromHSV",tolua_CocoStudio_CCControlUtils_RGBfromHSV00);
   tolua_function(tolua_S,"CCRectUnion",tolua_CocoStudio_CCControlUtils_CCRectUnion00);
   tolua_function(tolua_S,"addSpriteToTargetWithPosAndAnchor",tolua_CocoStudio_CCControlUtils_addSpriteToTargetWithPosAndAnchor00);
   tolua_function(tolua_S,"HSVfromRGB",tolua_CocoStudio_CCControlUtils_HSVfromRGB00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ScrollInnerContainer","ScrollInnerContainer","Layout",tolua_collect_ScrollInnerContainer);
  #else
  tolua_cclass(tolua_S,"ScrollInnerContainer","ScrollInnerContainer","Layout",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ScrollInnerContainer");
   tolua_function(tolua_S,"create",tolua_CocoStudio_ScrollInnerContainer_create00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ScrollInnerContainer_delete00);
   tolua_function(tolua_S,"getLayoutSize",tolua_CocoStudio_ScrollInnerContainer_getLayoutSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ScrollInnerContainer_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ScrollInnerContainer_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ScrollInnerContainer_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlButton","CCControlButton","CCControl",tolua_collect_CCControlButton);
  #else
  tolua_cclass(tolua_S,"CCControlButton","CCControlButton","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlButton");
   tolua_variable(tolua_S,"m_doesAdjustBackgroundImage",tolua_get_CCControlButton_m_doesAdjustBackgroundImage,tolua_set_CCControlButton_m_doesAdjustBackgroundImage);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlButton_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlButton_create01);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlButton_create02);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlButton_create03);
   tolua_function(tolua_S,"setTitleColorDispatchTable",tolua_CocoStudio_CCControlButton_setTitleColorDispatchTable00);
   tolua_function(tolua_S,"setZoomOnTouchDown",tolua_CocoStudio_CCControlButton_setZoomOnTouchDown00);
   tolua_function(tolua_S,"setSelected",tolua_CocoStudio_CCControlButton_setSelected00);
   tolua_function(tolua_S,"setTitleLabel",tolua_CocoStudio_CCControlButton_setTitleLabel00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCControlButton_ccTouchBegan00);
   tolua_function(tolua_S,"setTitleTTFSizeForState",tolua_CocoStudio_CCControlButton_setTitleTTFSizeForState00);
   tolua_function(tolua_S,"setAdjustBackgroundImage",tolua_CocoStudio_CCControlButton_setAdjustBackgroundImage00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCControlButton_ccTouchEnded00);
   tolua_function(tolua_S,"setHighlighted",tolua_CocoStudio_CCControlButton_setHighlighted00);
   tolua_function(tolua_S,"setBackgroundSpriteDispatchTable",tolua_CocoStudio_CCControlButton_setBackgroundSpriteDispatchTable00);
   tolua_function(tolua_S,"setTitleLabelForState",tolua_CocoStudio_CCControlButton_setTitleLabelForState00);
   tolua_function(tolua_S,"setTitleForState",tolua_CocoStudio_CCControlButton_setTitleForState00);
   tolua_function(tolua_S,"getTitleDispatchTable",tolua_CocoStudio_CCControlButton_getTitleDispatchTable00);
   tolua_function(tolua_S,"setLabelAnchorPoint",tolua_CocoStudio_CCControlButton_setLabelAnchorPoint00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCControlButton_ccTouchCancelled00);
   tolua_function(tolua_S,"getLabelAnchorPoint",tolua_CocoStudio_CCControlButton_getLabelAnchorPoint00);
   tolua_function(tolua_S,"initWithBackgroundSprite",tolua_CocoStudio_CCControlButton_initWithBackgroundSprite00);
   tolua_function(tolua_S,"getTitleTTFSizeForState",tolua_CocoStudio_CCControlButton_getTitleTTFSizeForState00);
   tolua_function(tolua_S,"setTitleDispatchTable",tolua_CocoStudio_CCControlButton_setTitleDispatchTable00);
   tolua_function(tolua_S,"isPushed",tolua_CocoStudio_CCControlButton_isPushed00);
   tolua_function(tolua_S,"setOpacity",tolua_CocoStudio_CCControlButton_setOpacity00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlButton_delete00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCControlButton_init00);
   tolua_function(tolua_S,"setTitleTTFForState",tolua_CocoStudio_CCControlButton_setTitleTTFForState00);
   tolua_function(tolua_S,"setPreferredSize",tolua_CocoStudio_CCControlButton_setPreferredSize00);
   tolua_function(tolua_S,"getHorizontalOrigin",tolua_CocoStudio_CCControlButton_getHorizontalOrigin00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCControlButton_ccTouchMoved00);
   tolua_function(tolua_S,"getOpacity",tolua_CocoStudio_CCControlButton_getOpacity00);
   tolua_function(tolua_S,"getCurrentTitleColor",tolua_CocoStudio_CCControlButton_getCurrentTitleColor00);
   tolua_function(tolua_S,"getTitleColorDispatchTable",tolua_CocoStudio_CCControlButton_getTitleColorDispatchTable00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlButton_setEnabled00);
   tolua_function(tolua_S,"getBackgroundSpriteForState",tolua_CocoStudio_CCControlButton_getBackgroundSpriteForState00);
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_CCControlButton_getColor00);
   tolua_function(tolua_S,"setMargins",tolua_CocoStudio_CCControlButton_setMargins00);
   tolua_function(tolua_S,"needsLayout",tolua_CocoStudio_CCControlButton_needsLayout00);
   tolua_function(tolua_S,"initWithTitleAndFontNameAndFontSize",tolua_CocoStudio_CCControlButton_initWithTitleAndFontNameAndFontSize00);
   tolua_function(tolua_S,"setTitleBMFontForState",tolua_CocoStudio_CCControlButton_setTitleBMFontForState00);
   tolua_function(tolua_S,"getTitleTTFForState",tolua_CocoStudio_CCControlButton_getTitleTTFForState00);
   tolua_function(tolua_S,"getBackgroundSprite",tolua_CocoStudio_CCControlButton_getBackgroundSprite00);
   tolua_function(tolua_S,"getTitleColorForState",tolua_CocoStudio_CCControlButton_getTitleColorForState00);
   tolua_function(tolua_S,"setTitleColorForState",tolua_CocoStudio_CCControlButton_setTitleColorForState00);
   tolua_function(tolua_S,"doesAdjustBackgroundImage",tolua_CocoStudio_CCControlButton_doesAdjustBackgroundImage00);
   tolua_function(tolua_S,"setBackgroundSpriteFrameForState",tolua_CocoStudio_CCControlButton_setBackgroundSpriteFrameForState00);
   tolua_function(tolua_S,"setBackgroundSpriteForState",tolua_CocoStudio_CCControlButton_setBackgroundSpriteForState00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_CCControlButton_setColor00);
   tolua_function(tolua_S,"getTitleLabelDispatchTable",tolua_CocoStudio_CCControlButton_getTitleLabelDispatchTable00);
   tolua_function(tolua_S,"initWithLabelAndBackgroundSprite",tolua_CocoStudio_CCControlButton_initWithLabelAndBackgroundSprite00);
   tolua_function(tolua_S,"setTitleLabelDispatchTable",tolua_CocoStudio_CCControlButton_setTitleLabelDispatchTable00);
   tolua_function(tolua_S,"getTitleLabel",tolua_CocoStudio_CCControlButton_getTitleLabel00);
   tolua_function(tolua_S,"getPreferredSize",tolua_CocoStudio_CCControlButton_getPreferredSize00);
   tolua_function(tolua_S,"getVerticalMargin",tolua_CocoStudio_CCControlButton_getVerticalMargin00);
   tolua_function(tolua_S,"getBackgroundSpriteDispatchTable",tolua_CocoStudio_CCControlButton_getBackgroundSpriteDispatchTable00);
   tolua_function(tolua_S,"getTitleLabelForState",tolua_CocoStudio_CCControlButton_getTitleLabelForState00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlButton_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlButton_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlButton_new00_local);
   tolua_function(tolua_S,"getCurrentTitle",tolua_CocoStudio_CCControlButton_getCurrentTitle00);
   tolua_function(tolua_S,"getTitleBMFontForState",tolua_CocoStudio_CCControlButton_getTitleBMFontForState00);
   tolua_function(tolua_S,"setBackgroundSprite",tolua_CocoStudio_CCControlButton_setBackgroundSprite00);
   tolua_function(tolua_S,"getZoomOnTouchDown",tolua_CocoStudio_CCControlButton_getZoomOnTouchDown00);
   tolua_function(tolua_S,"getTitleForState",tolua_CocoStudio_CCControlButton_getTitleForState00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Frame","Frame","CCObject",tolua_collect_Frame);
  #else
  tolua_cclass(tolua_S,"Frame","Frame","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Frame");
   tolua_function(tolua_S,"clone",tolua_CocoStudio_Frame_clone00);
   tolua_function(tolua_S,"setNode",tolua_CocoStudio_Frame_setNode00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_Frame_onEnter00);
   tolua_function(tolua_S,"setTimeline",tolua_CocoStudio_Frame_setTimeline00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Frame_delete00);
   tolua_function(tolua_S,"getFrameIndex",tolua_CocoStudio_Frame_getFrameIndex00);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_Frame_apply00);
   tolua_function(tolua_S,"isTween",tolua_CocoStudio_Frame_isTween00);
   tolua_function(tolua_S,"setFrameIndex",tolua_CocoStudio_Frame_setFrameIndex00);
   tolua_function(tolua_S,"setTween",tolua_CocoStudio_Frame_setTween00);
   tolua_function(tolua_S,"getTimeline",tolua_CocoStudio_Frame_getTimeline00);
   tolua_function(tolua_S,"getNode",tolua_CocoStudio_Frame_getNode00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseCircleActionIn","CCEaseCircleActionIn","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCircleActionIn");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCircleActionIn_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCircleActionIn_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCircleActionIn_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCircleActionIn_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlSwitch","CCControlSwitch","CCControl",tolua_collect_CCControlSwitch);
  #else
  tolua_cclass(tolua_S,"CCControlSwitch","CCControlSwitch","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlSwitch");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlSwitch_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlSwitch_create01);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlSwitch_setEnabled00);
   tolua_function(tolua_S,"setOn",tolua_CocoStudio_CCControlSwitch_setOn00);
   tolua_function(tolua_S,"setOn",tolua_CocoStudio_CCControlSwitch_setOn01);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCControlSwitch_ccTouchBegan00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlSwitch_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlSwitch_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlSwitch_new00_local);
   tolua_function(tolua_S,"isOn",tolua_CocoStudio_CCControlSwitch_isOn00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCControlSwitch_ccTouchCancelled00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCControlSwitch_ccTouchEnded00);
   tolua_function(tolua_S,"initWithMaskSprite",tolua_CocoStudio_CCControlSwitch_initWithMaskSprite00);
   tolua_function(tolua_S,"initWithMaskSprite",tolua_CocoStudio_CCControlSwitch_initWithMaskSprite01);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCControlSwitch_ccTouchMoved00);
   tolua_function(tolua_S,"hasMoved",tolua_CocoStudio_CCControlSwitch_hasMoved00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlSwitch_delete00);
   tolua_function(tolua_S,"locationFromTouch",tolua_CocoStudio_CCControlSwitch_locationFromTouch00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RichElementImage","RichElementImage","RichElement",tolua_collect_RichElementImage);
  #else
  tolua_cclass(tolua_S,"RichElementImage","RichElementImage","RichElement",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RichElementImage");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RichElementImage_create00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_RichElementImage_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RichElementImage_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RichElementImage_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RichElementImage_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RichElementImage_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCProcessBase","CCProcessBase","CCObject",tolua_collect_CCProcessBase);
  #else
  tolua_cclass(tolua_S,"CCProcessBase","CCProcessBase","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCProcessBase");
   tolua_function(tolua_S,"getRawDuration",tolua_CocoStudio_CCProcessBase_getRawDuration00);
   tolua_function(tolua_S,"setCurrentPercent",tolua_CocoStudio_CCProcessBase_setCurrentPercent00);
   tolua_function(tolua_S,"getIsPause",tolua_CocoStudio_CCProcessBase_getIsPause00);
   tolua_function(tolua_S,"pause",tolua_CocoStudio_CCProcessBase_pause00);
   tolua_function(tolua_S,"getCurrentFrameIndex",tolua_CocoStudio_CCProcessBase_getCurrentFrameIndex00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCProcessBase_delete00);
   tolua_function(tolua_S,"play",tolua_CocoStudio_CCProcessBase_play00);
   tolua_function(tolua_S,"getCurrentPercent",tolua_CocoStudio_CCProcessBase_getCurrentPercent00);
   tolua_function(tolua_S,"resume",tolua_CocoStudio_CCProcessBase_resume00);
   tolua_function(tolua_S,"setIsComplete",tolua_CocoStudio_CCProcessBase_setIsComplete00);
   tolua_function(tolua_S,"stop",tolua_CocoStudio_CCProcessBase_stop00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCProcessBase_update00);
   tolua_function(tolua_S,"getIsComplete",tolua_CocoStudio_CCProcessBase_getIsComplete00);
   tolua_function(tolua_S,"getProcessScale",tolua_CocoStudio_CCProcessBase_getProcessScale00);
   tolua_function(tolua_S,"setRawDuration",tolua_CocoStudio_CCProcessBase_setRawDuration00);
   tolua_function(tolua_S,"setIsPause",tolua_CocoStudio_CCProcessBase_setIsPause00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCProcessBase_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCProcessBase_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCProcessBase_new00_local);
   tolua_function(tolua_S,"getIsPlaying",tolua_CocoStudio_CCProcessBase_getIsPlaying00);
   tolua_function(tolua_S,"setProcessScale",tolua_CocoStudio_CCProcessBase_setProcessScale00);
   tolua_function(tolua_S,"setIsPlaying",tolua_CocoStudio_CCProcessBase_setIsPlaying00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionNode","ActionNode","CCObject",tolua_collect_ActionNode);
  #else
  tolua_cclass(tolua_S,"ActionNode","ActionNode","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionNode");
   tolua_function(tolua_S,"addFrame",tolua_CocoStudio_ActionNode_addFrame00);
   tolua_function(tolua_S,"setObject",tolua_CocoStudio_ActionNode_setObject00);
   tolua_function(tolua_S,"setUnitTime",tolua_CocoStudio_ActionNode_setUnitTime00);
   tolua_function(tolua_S,"updateActionToTimeLine",tolua_CocoStudio_ActionNode_updateActionToTimeLine00);
   tolua_function(tolua_S,"insertFrame",tolua_CocoStudio_ActionNode_insertFrame00);
   tolua_function(tolua_S,"setActionTag",tolua_CocoStudio_ActionNode_setActionTag00);
   tolua_function(tolua_S,"deleteFrame",tolua_CocoStudio_ActionNode_deleteFrame00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionNode_delete00);
   tolua_function(tolua_S,"getObject",tolua_CocoStudio_ActionNode_getObject00);
   tolua_function(tolua_S,"getFirstFrameIndex",tolua_CocoStudio_ActionNode_getFirstFrameIndex00);
   tolua_function(tolua_S,"initWithBinary",tolua_CocoStudio_ActionNode_initWithBinary00);
   tolua_function(tolua_S,"isActionDoneOnce",tolua_CocoStudio_ActionNode_isActionDoneOnce00);
   tolua_function(tolua_S,"getActionTag",tolua_CocoStudio_ActionNode_getActionTag00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionNode_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionNode_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionNode_new00_local);
   tolua_function(tolua_S,"getLastFrameIndex",tolua_CocoStudio_ActionNode_getLastFrameIndex00);
   tolua_function(tolua_S,"getUnitTime",tolua_CocoStudio_ActionNode_getUnitTime00);
   tolua_function(tolua_S,"stopAction",tolua_CocoStudio_ActionNode_stopAction00);
   tolua_function(tolua_S,"playAction",tolua_CocoStudio_ActionNode_playAction00);
   tolua_function(tolua_S,"clearAllFrame",tolua_CocoStudio_ActionNode_clearAllFrame00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCEditBoxDelegate","CCEditBoxDelegate","",tolua_collect_CCEditBoxDelegate);
  #else
  tolua_cclass(tolua_S,"CCEditBoxDelegate","CCEditBoxDelegate","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCEditBoxDelegate");
   tolua_function(tolua_S,"editBoxReturn",tolua_CocoStudio_CCEditBoxDelegate_editBoxReturn00);
   tolua_function(tolua_S,"editBoxEditingDidEnd",tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidEnd00);
   tolua_function(tolua_S,"editBoxTextChanged",tolua_CocoStudio_CCEditBoxDelegate_editBoxTextChanged00);
   tolua_function(tolua_S,"editBoxEditingDidBegin",tolua_CocoStudio_CCEditBoxDelegate_editBoxEditingDidBegin00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCEditBoxDelegate_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCScale9Sprite","CCScale9Sprite","CCNodeRGBA",tolua_collect_CCScale9Sprite);
  #else
  tolua_cclass(tolua_S,"CCScale9Sprite","CCScale9Sprite","CCNodeRGBA",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCScale9Sprite");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScale9Sprite_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScale9Sprite_create01);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScale9Sprite_create02);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScale9Sprite_create03);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCScale9Sprite_create04);
   tolua_function(tolua_S,"createWithSpriteFrameName",tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName00);
   tolua_function(tolua_S,"createWithSpriteFrameName",tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrameName01);
   tolua_function(tolua_S,"createWithSpriteFrame",tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame00);
   tolua_function(tolua_S,"createWithSpriteFrame",tolua_CocoStudio_CCScale9Sprite_createWithSpriteFrame01);
   tolua_function(tolua_S,"getCapInsets",tolua_CocoStudio_CCScale9Sprite_getCapInsets00);
   tolua_function(tolua_S,"setOpacityModifyRGB",tolua_CocoStudio_CCScale9Sprite_setOpacityModifyRGB00);
   tolua_function(tolua_S,"setInsetTop",tolua_CocoStudio_CCScale9Sprite_setInsetTop00);
   tolua_function(tolua_S,"updateWithBatchNode",tolua_CocoStudio_CCScale9Sprite_updateWithBatchNode00);
   tolua_function(tolua_S,"setInsetBottom",tolua_CocoStudio_CCScale9Sprite_setInsetBottom00);
   tolua_function(tolua_S,"isOpacityModifyRGB",tolua_CocoStudio_CCScale9Sprite_isOpacityModifyRGB00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_CCScale9Sprite_visit00);
   tolua_function(tolua_S,"initWithSpriteFrameName",tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName00);
   tolua_function(tolua_S,"initWithSpriteFrameName",tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrameName01);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCScale9Sprite_delete00);
   tolua_function(tolua_S,"updateDisplayedOpacity",tolua_CocoStudio_CCScale9Sprite_updateDisplayedOpacity00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCScale9Sprite_init00);
   tolua_function(tolua_S,"setPreferredSize",tolua_CocoStudio_CCScale9Sprite_setPreferredSize00);
   tolua_function(tolua_S,"getOpacity",tolua_CocoStudio_CCScale9Sprite_getOpacity00);
   tolua_function(tolua_S,"setSpriteFrame",tolua_CocoStudio_CCScale9Sprite_setSpriteFrame00);
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_CCScale9Sprite_getColor00);
   tolua_function(tolua_S,"initWithBatchNode",tolua_CocoStudio_CCScale9Sprite_initWithBatchNode00);
   tolua_function(tolua_S,"initWithBatchNode",tolua_CocoStudio_CCScale9Sprite_initWithBatchNode01);
   tolua_function(tolua_S,"getInsetBottom",tolua_CocoStudio_CCScale9Sprite_getInsetBottom00);
   tolua_function(tolua_S,"resizableSpriteWithCapInsets",tolua_CocoStudio_CCScale9Sprite_resizableSpriteWithCapInsets00);
   tolua_function(tolua_S,"setOpacity",tolua_CocoStudio_CCScale9Sprite_setOpacity00);
   tolua_function(tolua_S,"setContentSize",tolua_CocoStudio_CCScale9Sprite_setContentSize00);
   tolua_function(tolua_S,"getInsetRight",tolua_CocoStudio_CCScale9Sprite_getInsetRight00);
   tolua_function(tolua_S,"getOriginalSize",tolua_CocoStudio_CCScale9Sprite_getOriginalSize00);
   tolua_function(tolua_S,"initWithFile",tolua_CocoStudio_CCScale9Sprite_initWithFile00);
   tolua_function(tolua_S,"initWithFile",tolua_CocoStudio_CCScale9Sprite_initWithFile01);
   tolua_function(tolua_S,"initWithFile",tolua_CocoStudio_CCScale9Sprite_initWithFile02);
   tolua_function(tolua_S,"initWithFile",tolua_CocoStudio_CCScale9Sprite_initWithFile03);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_CCScale9Sprite_setColor00);
   tolua_function(tolua_S,"getInsetTop",tolua_CocoStudio_CCScale9Sprite_getInsetTop00);
   tolua_function(tolua_S,"setInsetLeft",tolua_CocoStudio_CCScale9Sprite_setInsetLeft00);
   tolua_function(tolua_S,"initWithSpriteFrame",tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame00);
   tolua_function(tolua_S,"initWithSpriteFrame",tolua_CocoStudio_CCScale9Sprite_initWithSpriteFrame01);
   tolua_function(tolua_S,"getPreferredSize",tolua_CocoStudio_CCScale9Sprite_getPreferredSize00);
   tolua_function(tolua_S,"setCapInsets",tolua_CocoStudio_CCScale9Sprite_setCapInsets00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCScale9Sprite_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCScale9Sprite_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCScale9Sprite_new00_local);
   tolua_function(tolua_S,"getInsetLeft",tolua_CocoStudio_CCScale9Sprite_getInsetLeft00);
   tolua_function(tolua_S,"updateDisplayedColor",tolua_CocoStudio_CCScale9Sprite_updateDisplayedColor00);
   tolua_function(tolua_S,"setInsetRight",tolua_CocoStudio_CCScale9Sprite_setInsetRight00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Layout","Layout","Widget",tolua_collect_Layout);
  #else
  tolua_cclass(tolua_S,"Layout","Layout","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Layout");
   tolua_function(tolua_S,"create",tolua_CocoStudio_Layout_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_Layout_createInstance00);
   tolua_function(tolua_S,"setBackGroundColorVector",tolua_CocoStudio_Layout_setBackGroundColorVector00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Layout_addChild00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Layout_addChild01);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_Layout_addChild02);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_Layout_onEnter00);
   tolua_function(tolua_S,"setClippingType",tolua_CocoStudio_Layout_setClippingType00);
   tolua_function(tolua_S,"setBackGroundColorType",tolua_CocoStudio_Layout_setBackGroundColorType00);
   tolua_function(tolua_S,"setBackGroundImageColor",tolua_CocoStudio_Layout_setBackGroundImageColor00);
   tolua_function(tolua_S,"getBackGroundColorVector",tolua_CocoStudio_Layout_getBackGroundColorVector00);
   tolua_function(tolua_S,"removeAllChildren",tolua_CocoStudio_Layout_removeAllChildren00);
   tolua_function(tolua_S,"getClippingType",tolua_CocoStudio_Layout_getClippingType00);
   tolua_function(tolua_S,"removeBackGroundImage",tolua_CocoStudio_Layout_removeBackGroundImage00);
   tolua_function(tolua_S,"getBackGroundColorOpacity",tolua_CocoStudio_Layout_getBackGroundColorOpacity00);
   tolua_function(tolua_S,"isClippingEnabled",tolua_CocoStudio_Layout_isClippingEnabled00);
   tolua_function(tolua_S,"setBackGroundImageOpacity",tolua_CocoStudio_Layout_setBackGroundImageOpacity00);
   tolua_function(tolua_S,"setBackGroundImage",tolua_CocoStudio_Layout_setBackGroundImage00);
   tolua_function(tolua_S,"setBackGroundColor",tolua_CocoStudio_Layout_setBackGroundColor00);
   tolua_function(tolua_S,"setBackGroundColor",tolua_CocoStudio_Layout_setBackGroundColor01);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_Layout_visit00);
   tolua_function(tolua_S,"requestDoLayout",tolua_CocoStudio_Layout_requestDoLayout00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_Layout_delete00);
   tolua_function(tolua_S,"getBackGroundImageCapInsets",tolua_CocoStudio_Layout_getBackGroundImageCapInsets00);
   tolua_function(tolua_S,"getBackGroundColor",tolua_CocoStudio_Layout_getBackGroundColor00);
   tolua_function(tolua_S,"setClippingEnabled",tolua_CocoStudio_Layout_setClippingEnabled00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_Layout_getDescription00);
   tolua_function(tolua_S,"getBackGroundImageColor",tolua_CocoStudio_Layout_getBackGroundImageColor00);
   tolua_function(tolua_S,"isBackGroundImageScale9Enabled",tolua_CocoStudio_Layout_isBackGroundImageScale9Enabled00);
   tolua_function(tolua_S,"getBackGroundColorType",tolua_CocoStudio_Layout_getBackGroundColorType00);
   tolua_function(tolua_S,"getBackGroundEndColor",tolua_CocoStudio_Layout_getBackGroundEndColor00);
   tolua_function(tolua_S,"setBackGroundColorOpacity",tolua_CocoStudio_Layout_setBackGroundColorOpacity00);
   tolua_function(tolua_S,"getBackGroundImageOpacity",tolua_CocoStudio_Layout_getBackGroundImageOpacity00);
   tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_CocoStudio_Layout_removeAllChildrenWithCleanup00);
   tolua_function(tolua_S,"sortAllChildren",tolua_CocoStudio_Layout_sortAllChildren00);
   tolua_function(tolua_S,"setBackGroundImageCapInsets",tolua_CocoStudio_Layout_setBackGroundImageCapInsets00);
   tolua_function(tolua_S,"getBackGroundImageTextureSize",tolua_CocoStudio_Layout_getBackGroundImageTextureSize00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_Layout_onExit00);
   tolua_function(tolua_S,"getLayoutType",tolua_CocoStudio_Layout_getLayoutType00);
   tolua_function(tolua_S,"getBackGroundStartColor",tolua_CocoStudio_Layout_getBackGroundStartColor00);
   tolua_function(tolua_S,"hitTest",tolua_CocoStudio_Layout_hitTest00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_Layout_removeChild00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_Layout_removeChild01);
   tolua_function(tolua_S,"new",tolua_CocoStudio_Layout_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_Layout_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_Layout_new00_local);
   tolua_function(tolua_S,"setBackGroundImageScale9Enabled",tolua_CocoStudio_Layout_setBackGroundImageScale9Enabled00);
   tolua_function(tolua_S,"setLayoutType",tolua_CocoStudio_Layout_setLayoutType00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTextureData","CCTextureData","CCObject",tolua_collect_CCTextureData);
  #else
  tolua_cclass(tolua_S,"CCTextureData","CCTextureData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTextureData");
   tolua_variable(tolua_S,"height",tolua_get_CCTextureData_height,tolua_set_CCTextureData_height);
   tolua_variable(tolua_S,"width",tolua_get_CCTextureData_width,tolua_set_CCTextureData_width);
   tolua_variable(tolua_S,"pivotX",tolua_get_CCTextureData_pivotX,tolua_set_CCTextureData_pivotX);
   tolua_variable(tolua_S,"pivotY",tolua_get_CCTextureData_pivotY,tolua_set_CCTextureData_pivotY);
   tolua_variable(tolua_S,"name",tolua_get_CCTextureData_name,tolua_set_CCTextureData_name);
   tolua_variable(tolua_S,"contourDataList",tolua_get_CCTextureData_contourDataList,tolua_set_CCTextureData_contourDataList);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCTextureData_create00);
   tolua_function(tolua_S,"getContourData",tolua_CocoStudio_CCTextureData_getContourData00);
   tolua_function(tolua_S,"addContourData",tolua_CocoStudio_CCTextureData_addContourData00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCTextureData_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCTextureData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCTextureData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCTextureData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCTextureData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LoadingBar","LoadingBar","Widget",tolua_collect_LoadingBar);
  #else
  tolua_cclass(tolua_S,"LoadingBar","LoadingBar","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LoadingBar");
   tolua_function(tolua_S,"create",tolua_CocoStudio_LoadingBar_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_LoadingBar_createInstance00);
   tolua_function(tolua_S,"setPercent",tolua_CocoStudio_LoadingBar_setPercent00);
   tolua_function(tolua_S,"getVirtualRenderer",tolua_CocoStudio_LoadingBar_getVirtualRenderer00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_LoadingBar_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"loadTexture",tolua_CocoStudio_LoadingBar_loadTexture00);
   tolua_function(tolua_S,"setDirection",tolua_CocoStudio_LoadingBar_setDirection00);
   tolua_function(tolua_S,"getPercentage",tolua_CocoStudio_LoadingBar_getPercentage00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_LoadingBar_getDescription00);
   tolua_function(tolua_S,"setScale9Enabled",tolua_CocoStudio_LoadingBar_setScale9Enabled00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_LoadingBar_delete00);
   tolua_function(tolua_S,"setCapInsets",tolua_CocoStudio_LoadingBar_setCapInsets00);
   tolua_function(tolua_S,"getDirection",tolua_CocoStudio_LoadingBar_getDirection00);
   tolua_function(tolua_S,"setPercentage",tolua_CocoStudio_LoadingBar_setPercentage00);
   tolua_function(tolua_S,"getCapInsets",tolua_CocoStudio_LoadingBar_getCapInsets00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_LoadingBar_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_LoadingBar_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_LoadingBar_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_LoadingBar_new00_local);
   tolua_function(tolua_S,"isScale9Enabled",tolua_CocoStudio_LoadingBar_isScale9Enabled00);
   tolua_function(tolua_S,"getPercent",tolua_CocoStudio_LoadingBar_getPercent00);
   tolua_variable(tolua_S,"__CCMeasurableProtocol__",tolua_get_LoadingBar___CCMeasurableProtocol__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCDisplayManager","CCDisplayManager","CCObject",tolua_collect_CCDisplayManager);
  #else
  tolua_cclass(tolua_S,"CCDisplayManager","CCDisplayManager","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCDisplayManager");
   tolua_variable(tolua_S,"m_bVisible",tolua_get_CCDisplayManager_m_bVisible,tolua_set_CCDisplayManager_m_bVisible);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCDisplayManager_create00);
   tolua_function(tolua_S,"getCurrentDecorativeDisplay",tolua_CocoStudio_CCDisplayManager_getCurrentDecorativeDisplay00);
   tolua_function(tolua_S,"getDisplayRenderNode",tolua_CocoStudio_CCDisplayManager_getDisplayRenderNode00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCDisplayManager_delete00);
   tolua_function(tolua_S,"getAnchorPointInPoints",tolua_CocoStudio_CCDisplayManager_getAnchorPointInPoints00);
   tolua_function(tolua_S,"setCurrentDecorativeDisplay",tolua_CocoStudio_CCDisplayManager_setCurrentDecorativeDisplay00);
   tolua_function(tolua_S,"removeDisplay",tolua_CocoStudio_CCDisplayManager_removeDisplay00);
   tolua_function(tolua_S,"setForceChangeDisplay",tolua_CocoStudio_CCDisplayManager_setForceChangeDisplay00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCDisplayManager_init00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_CCDisplayManager_getContentSize00);
   tolua_function(tolua_S,"getBoundingBox",tolua_CocoStudio_CCDisplayManager_getBoundingBox00);
   tolua_function(tolua_S,"addDisplay",tolua_CocoStudio_CCDisplayManager_addDisplay00);
   tolua_function(tolua_S,"addDisplay",tolua_CocoStudio_CCDisplayManager_addDisplay01);
   tolua_function(tolua_S,"containPoint",tolua_CocoStudio_CCDisplayManager_containPoint00);
   tolua_function(tolua_S,"containPoint",tolua_CocoStudio_CCDisplayManager_containPoint01);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCDisplayManager_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCDisplayManager_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCDisplayManager_new00_local);
   tolua_function(tolua_S,"initDisplayList",tolua_CocoStudio_CCDisplayManager_initDisplayList00);
   tolua_function(tolua_S,"changeDisplayWithIndex",tolua_CocoStudio_CCDisplayManager_changeDisplayWithIndex00);
   tolua_function(tolua_S,"changeDisplayWithName",tolua_CocoStudio_CCDisplayManager_changeDisplayWithName00);
   tolua_function(tolua_S,"getDecorativeDisplayByIndex",tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayByIndex00);
   tolua_function(tolua_S,"getCurrentDisplayIndex",tolua_CocoStudio_CCDisplayManager_getCurrentDisplayIndex00);
   tolua_function(tolua_S,"getForceChangeDisplay",tolua_CocoStudio_CCDisplayManager_getForceChangeDisplay00);
   tolua_function(tolua_S,"getAnchorPoint",tolua_CocoStudio_CCDisplayManager_getAnchorPoint00);
   tolua_function(tolua_S,"getDecorativeDisplayList",tolua_CocoStudio_CCDisplayManager_getDecorativeDisplayList00);
   tolua_function(tolua_S,"isVisible",tolua_CocoStudio_CCDisplayManager_isVisible00);
   tolua_function(tolua_S,"setVisible",tolua_CocoStudio_CCDisplayManager_setVisible00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlHuePicker","CCControlHuePicker","CCControl",tolua_collect_CCControlHuePicker);
  #else
  tolua_cclass(tolua_S,"CCControlHuePicker","CCControlHuePicker","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlHuePicker");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlHuePicker_create00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlHuePicker_setEnabled00);
   tolua_function(tolua_S,"initWithTargetAndPos",tolua_CocoStudio_CCControlHuePicker_initWithTargetAndPos00);
   tolua_function(tolua_S,"setHue",tolua_CocoStudio_CCControlHuePicker_setHue00);
   tolua_function(tolua_S,"getStartPos",tolua_CocoStudio_CCControlHuePicker_getStartPos00);
   tolua_function(tolua_S,"getHue",tolua_CocoStudio_CCControlHuePicker_getHue00);
   tolua_function(tolua_S,"getSlider",tolua_CocoStudio_CCControlHuePicker_getSlider00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlHuePicker_delete00);
   tolua_function(tolua_S,"setBackground",tolua_CocoStudio_CCControlHuePicker_setBackground00);
   tolua_function(tolua_S,"setHuePercentage",tolua_CocoStudio_CCControlHuePicker_setHuePercentage00);
   tolua_function(tolua_S,"getBackground",tolua_CocoStudio_CCControlHuePicker_getBackground00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlHuePicker_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlHuePicker_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlHuePicker_new00_local);
   tolua_function(tolua_S,"getHuePercentage",tolua_CocoStudio_CCControlHuePicker_getHuePercentage00);
   tolua_function(tolua_S,"setSlider",tolua_CocoStudio_CCControlHuePicker_setSlider00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RichElementCustomNode","RichElementCustomNode","RichElement",tolua_collect_RichElementCustomNode);
  #else
  tolua_cclass(tolua_S,"RichElementCustomNode","RichElementCustomNode","RichElement",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RichElementCustomNode");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RichElementCustomNode_create00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_RichElementCustomNode_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RichElementCustomNode_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RichElementCustomNode_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RichElementCustomNode_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RichElementCustomNode_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseBezierAction","CCEaseBezierAction","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseBezierAction");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseBezierAction_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseBezierAction_copyWithZone00);
   tolua_function(tolua_S,"setBezierParamer",tolua_CocoStudio_CCEaseBezierAction_setBezierParamer00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseBezierAction_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseBezierAction_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCBaseData","CCBaseData","CCObject",tolua_collect_CCBaseData);
  #else
  tolua_cclass(tolua_S,"CCBaseData","CCBaseData","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCBaseData");
   tolua_variable(tolua_S,"x",tolua_get_CCBaseData_x,tolua_set_CCBaseData_x);
   tolua_variable(tolua_S,"y",tolua_get_CCBaseData_y,tolua_set_CCBaseData_y);
   tolua_variable(tolua_S,"zOrder",tolua_get_CCBaseData_zOrder,tolua_set_CCBaseData_zOrder);
   tolua_variable(tolua_S,"skewX",tolua_get_CCBaseData_skewX,tolua_set_CCBaseData_skewX);
   tolua_variable(tolua_S,"skewY",tolua_get_CCBaseData_skewY,tolua_set_CCBaseData_skewY);
   tolua_variable(tolua_S,"scaleX",tolua_get_CCBaseData_scaleX,tolua_set_CCBaseData_scaleX);
   tolua_variable(tolua_S,"scaleY",tolua_get_CCBaseData_scaleY,tolua_set_CCBaseData_scaleY);
   tolua_variable(tolua_S,"tweenRotate",tolua_get_CCBaseData_tweenRotate,tolua_set_CCBaseData_tweenRotate);
   tolua_variable(tolua_S,"isUseColorInfo",tolua_get_CCBaseData_isUseColorInfo,tolua_set_CCBaseData_isUseColorInfo);
   tolua_variable(tolua_S,"a",tolua_get_CCBaseData_a,tolua_set_CCBaseData_a);
   tolua_variable(tolua_S,"r",tolua_get_CCBaseData_r,tolua_set_CCBaseData_r);
   tolua_variable(tolua_S,"g",tolua_get_CCBaseData_g,tolua_set_CCBaseData_g);
   tolua_variable(tolua_S,"b",tolua_get_CCBaseData_b,tolua_set_CCBaseData_b);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCBaseData_create00);
   tolua_function(tolua_S,"setColor",tolua_CocoStudio_CCBaseData_setColor00);
   tolua_function(tolua_S,"getColor",tolua_CocoStudio_CCBaseData_getColor00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCBaseData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCBaseData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCBaseData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCBaseData_new00_local);
   tolua_function(tolua_S,"copy",tolua_CocoStudio_CCBaseData_copy00);
   tolua_function(tolua_S,"subtract",tolua_CocoStudio_CCBaseData_subtract00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"PageViewDataSource","PageViewDataSource","",NULL);
  tolua_beginmodule(tolua_S,"PageViewDataSource");
   tolua_function(tolua_S,"pageItemDidRecycled",tolua_CocoStudio_PageViewDataSource_pageItemDidRecycled00);
   tolua_function(tolua_S,"pageItemAtIndex",tolua_CocoStudio_PageViewDataSource_pageItemAtIndex00);
   tolua_function(tolua_S,"pageViewItemCount",tolua_CocoStudio_PageViewDataSource_pageViewItemCount00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCInputDelegate","CCInputDelegate","CCTouchDelegate",tolua_collect_CCInputDelegate);
  #else
  tolua_cclass(tolua_S,"CCInputDelegate","CCInputDelegate","CCTouchDelegate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCInputDelegate");
   tolua_function(tolua_S,"isAccelerometerEnabled",tolua_CocoStudio_CCInputDelegate_isAccelerometerEnabled00);
   tolua_function(tolua_S,"setTouchEnabled",tolua_CocoStudio_CCInputDelegate_setTouchEnabled00);
   tolua_function(tolua_S,"didAccelerate",tolua_CocoStudio_CCInputDelegate_didAccelerate00);
   tolua_function(tolua_S,"getTouchMode",tolua_CocoStudio_CCInputDelegate_getTouchMode00);
   tolua_function(tolua_S,"setAccelerometerEnabled",tolua_CocoStudio_CCInputDelegate_setAccelerometerEnabled00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCInputDelegate_ccTouchBegan00);
   tolua_function(tolua_S,"setKeypadEnabled",tolua_CocoStudio_CCInputDelegate_setKeypadEnabled00);
   tolua_function(tolua_S,"isKeypadEnabled",tolua_CocoStudio_CCInputDelegate_isKeypadEnabled00);
   tolua_function(tolua_S,"ccTouchesCancelled",tolua_CocoStudio_CCInputDelegate_ccTouchesCancelled00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCInputDelegate_delete00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCInputDelegate_ccTouchCancelled00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCInputDelegate_ccTouchEnded00);
   tolua_function(tolua_S,"isTouchEnabled",tolua_CocoStudio_CCInputDelegate_isTouchEnabled00);
   tolua_function(tolua_S,"ccTouchesBegan",tolua_CocoStudio_CCInputDelegate_ccTouchesBegan00);
   tolua_function(tolua_S,"setTouchPriority",tolua_CocoStudio_CCInputDelegate_setTouchPriority00);
   tolua_function(tolua_S,"ccTouchesMoved",tolua_CocoStudio_CCInputDelegate_ccTouchesMoved00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCInputDelegate_ccTouchMoved00);
   tolua_function(tolua_S,"getTouchPriority",tolua_CocoStudio_CCInputDelegate_getTouchPriority00);
   tolua_function(tolua_S,"ccTouchesEnded",tolua_CocoStudio_CCInputDelegate_ccTouchesEnded00);
   tolua_function(tolua_S,"setTouchMode",tolua_CocoStudio_CCInputDelegate_setTouchMode00);
   tolua_variable(tolua_S,"__CCAccelerometerDelegate__",tolua_get_CCInputDelegate___CCAccelerometerDelegate__,NULL);
   tolua_variable(tolua_S,"__CCKeypadDelegate__",tolua_get_CCInputDelegate___CCKeypadDelegate__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCComRender","CCComRender","CCComponent",tolua_collect_CCComRender);
  #else
  tolua_cclass(tolua_S,"CCComRender","CCComRender","CCComponent",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCComRender");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCComRender_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCComRender_create01);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_CCComRender_createInstance00);
   tolua_function(tolua_S,"setNode",tolua_CocoStudio_CCComRender_setNode00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCComRender_onEnter00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCComRender_onExit00);
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_CCComRender_serialize00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCComRender_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCComRender_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCComRender_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCComRender_new00_local);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCComRender_new01);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCComRender_new01_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCComRender_new01_local);
   tolua_function(tolua_S,"getNode",tolua_CocoStudio_CCComRender_getNode00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionFadeFrame","ActionFadeFrame","ActionFrame",tolua_collect_ActionFadeFrame);
  #else
  tolua_cclass(tolua_S,"ActionFadeFrame","ActionFadeFrame","ActionFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionFadeFrame");
   tolua_function(tolua_S,"getOpacity",tolua_CocoStudio_ActionFadeFrame_getOpacity00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionFadeFrame_delete00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionFadeFrame_getAction00);
   tolua_function(tolua_S,"setOpacity",tolua_CocoStudio_ActionFadeFrame_setOpacity00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionFadeFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionFadeFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionFadeFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlPotentiometer","CCControlPotentiometer","CCControl",tolua_collect_CCControlPotentiometer);
  #else
  tolua_cclass(tolua_S,"CCControlPotentiometer","CCControlPotentiometer","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlPotentiometer");
   tolua_variable(tolua_S,"m_fValue",tolua_get_CCControlPotentiometer_m_fValue,tolua_set_CCControlPotentiometer_m_fValue);
   tolua_variable(tolua_S,"m_fMinimumValue",tolua_get_CCControlPotentiometer_m_fMinimumValue,tolua_set_CCControlPotentiometer_m_fMinimumValue);
   tolua_variable(tolua_S,"m_fMaximumValue",tolua_get_CCControlPotentiometer_m_fMaximumValue,tolua_set_CCControlPotentiometer_m_fMaximumValue);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlPotentiometer_create00);
   tolua_function(tolua_S,"setPreviousLocation",tolua_CocoStudio_CCControlPotentiometer_setPreviousLocation00);
   tolua_function(tolua_S,"setProgressTimer",tolua_CocoStudio_CCControlPotentiometer_setProgressTimer00);
   tolua_function(tolua_S,"potentiometerMoved",tolua_CocoStudio_CCControlPotentiometer_potentiometerMoved00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCControlPotentiometer_ccTouchEnded00);
   tolua_function(tolua_S,"getMinimumValue",tolua_CocoStudio_CCControlPotentiometer_getMinimumValue00);
   tolua_function(tolua_S,"setThumbSprite",tolua_CocoStudio_CCControlPotentiometer_setThumbSprite00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlPotentiometer_delete00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCControlPotentiometer_ccTouchBegan00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCControlPotentiometer_ccTouchMoved00);
   tolua_function(tolua_S,"getPreviousLocation",tolua_CocoStudio_CCControlPotentiometer_getPreviousLocation00);
   tolua_function(tolua_S,"setEnabled",tolua_CocoStudio_CCControlPotentiometer_setEnabled00);
   tolua_function(tolua_S,"setValue",tolua_CocoStudio_CCControlPotentiometer_setValue00);
   tolua_function(tolua_S,"setMaximumValue",tolua_CocoStudio_CCControlPotentiometer_setMaximumValue00);
   tolua_function(tolua_S,"setMinimumValue",tolua_CocoStudio_CCControlPotentiometer_setMinimumValue00);
   tolua_function(tolua_S,"potentiometerEnded",tolua_CocoStudio_CCControlPotentiometer_potentiometerEnded00);
   tolua_function(tolua_S,"distanceBetweenPointAndPoint",tolua_CocoStudio_CCControlPotentiometer_distanceBetweenPointAndPoint00);
   tolua_function(tolua_S,"getProgressTimer",tolua_CocoStudio_CCControlPotentiometer_getProgressTimer00);
   tolua_function(tolua_S,"getMaximumValue",tolua_CocoStudio_CCControlPotentiometer_getMaximumValue00);
   tolua_function(tolua_S,"angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint",tolua_CocoStudio_CCControlPotentiometer_angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint00);
   tolua_function(tolua_S,"isTouchInside",tolua_CocoStudio_CCControlPotentiometer_isTouchInside00);
   tolua_function(tolua_S,"getValue",tolua_CocoStudio_CCControlPotentiometer_getValue00);
   tolua_function(tolua_S,"potentiometerBegan",tolua_CocoStudio_CCControlPotentiometer_potentiometerBegan00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCControlPotentiometer_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCControlPotentiometer_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCControlPotentiometer_new00_local);
   tolua_function(tolua_S,"getThumbSprite",tolua_CocoStudio_CCControlPotentiometer_getThumbSprite00);
   tolua_function(tolua_S,"initWithTrackSprite_ProgressTimer_ThumbSprite",tolua_CocoStudio_CCControlPotentiometer_initWithTrackSprite_ProgressTimer_ThumbSprite00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkewFrame","SkewFrame","Frame",tolua_collect_SkewFrame);
  #else
  tolua_cclass(tolua_S,"SkewFrame","SkewFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkewFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_SkewFrame_create00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_SkewFrame_onEnter00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_SkewFrame_clone00);
   tolua_function(tolua_S,"getSkewY",tolua_CocoStudio_SkewFrame_getSkewY00);
   tolua_function(tolua_S,"getSkewX",tolua_CocoStudio_SkewFrame_getSkewX00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_SkewFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_SkewFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_SkewFrame_new00_local);
   tolua_function(tolua_S,"apply",tolua_CocoStudio_SkewFrame_apply00);
   tolua_function(tolua_S,"setSkewX",tolua_CocoStudio_SkewFrame_setSkewX00);
   tolua_function(tolua_S,"setSkewY",tolua_CocoStudio_SkewFrame_setSkewY00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RichElement","RichElement","CCObject",tolua_collect_RichElement);
  #else
  tolua_cclass(tolua_S,"RichElement","RichElement","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RichElement");
   tolua_function(tolua_S,"init",tolua_CocoStudio_RichElement_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RichElement_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RichElement_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RichElement_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RichElement_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionObject","ActionObject","CCObject",tolua_collect_ActionObject);
  #else
  tolua_cclass(tolua_S,"ActionObject","ActionObject","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionObject");
   tolua_function(tolua_S,"setCurrentTime",tolua_CocoStudio_ActionObject_setCurrentTime00);
   tolua_function(tolua_S,"pause",tolua_CocoStudio_ActionObject_pause00);
   tolua_function(tolua_S,"setUnitTime",tolua_CocoStudio_ActionObject_setUnitTime00);
   tolua_function(tolua_S,"setName",tolua_CocoStudio_ActionObject_setName00);
   tolua_function(tolua_S,"getTotalTime",tolua_CocoStudio_ActionObject_getTotalTime00);
   tolua_function(tolua_S,"simulationActionUpdate",tolua_CocoStudio_ActionObject_simulationActionUpdate00);
   tolua_function(tolua_S,"getName",tolua_CocoStudio_ActionObject_getName00);
   tolua_function(tolua_S,"stop",tolua_CocoStudio_ActionObject_stop00);
   tolua_function(tolua_S,"play",tolua_CocoStudio_ActionObject_play00);
   tolua_function(tolua_S,"play",tolua_CocoStudio_ActionObject_play01);
   tolua_function(tolua_S,"getCurrentTime",tolua_CocoStudio_ActionObject_getCurrentTime00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionObject_delete00);
   tolua_function(tolua_S,"getLoop",tolua_CocoStudio_ActionObject_getLoop00);
   tolua_function(tolua_S,"initWithBinary",tolua_CocoStudio_ActionObject_initWithBinary00);
   tolua_function(tolua_S,"addActionNode",tolua_CocoStudio_ActionObject_addActionNode00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionObject_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionObject_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionObject_new00_local);
   tolua_function(tolua_S,"getUnitTime",tolua_CocoStudio_ActionObject_getUnitTime00);
   tolua_function(tolua_S,"isPlaying",tolua_CocoStudio_ActionObject_isPlaying00);
   tolua_function(tolua_S,"updateToFrameByTime",tolua_CocoStudio_ActionObject_updateToFrameByTime00);
   tolua_function(tolua_S,"setLoop",tolua_CocoStudio_ActionObject_setLoop00);
   tolua_function(tolua_S,"removeActionNode",tolua_CocoStudio_ActionObject_removeActionNode00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCControlSlider","CCControlSlider","CCControl",tolua_collect_CCControlSlider);
  #else
  tolua_cclass(tolua_S,"CCControlSlider","CCControlSlider","CCControl",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCControlSlider");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCControlSlider_create00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_CCControlSlider_ccTouchBegan00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_CCControlSlider_ccTouchEnded00);
   tolua_function(tolua_S,"markDiscreteMode",tolua_CocoStudio_CCControlSlider_markDiscreteMode00);
   tolua_function(tolua_S,"getMaximumAllowedValue",tolua_CocoStudio_CCControlSlider_getMaximumAllowedValue00);
   tolua_function(tolua_S,"getMinimumAllowedValue",tolua_CocoStudio_CCControlSlider_getMinimumAllowedValue00);
   tolua_function(tolua_S,"getMinimumValue",tolua_CocoStudio_CCControlSlider_getMinimumValue00);
   tolua_function(tolua_S,"setThumbSprite",tolua_CocoStudio_CCControlSlider_setThumbSprite00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCControlSlider_delete00);
   tolua_function(tolua_S,"setMinimumValue",tolua_CocoStudio_CCControlSlider_setMinimumValue00);
   tolua_function(tolua_S,"setMinimumAllowedValue",tolua_CocoStudio_CCControlSlider_setMinimumAllowedValue00);
   tolua_function(tolua_S,"setProgressSprite",tolua_CocoStudio_CCControlSlider_setProgressSprite00);
   tolua_function(tolua_S,"clearDiscreteMode",tolua_CocoStudio_CCControlSlider_clearDiscreteMode00);
   tolua_function(tolua_S,"setValue",tolua_CocoStudio_CCControlSlider_setValue00);
   tolua_function(tolua_S,"setMaximumValue",tolua_CocoStudio_CCControlSlider_setMaximumValue00);
   tolua_function(tolua_S,"needsLayout",tolua_CocoStudio_CCControlSlider_needsLayout00);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_CCControlSlider_ccTouchMoved00);
   tolua_function(tolua_S,"setDiscreteMode",tolua_CocoStudio_CCControlSlider_setDiscreteMode00);
   tolua_function(tolua_S,"getBackgroundSprite",tolua_CocoStudio_CCControlSlider_getBackgroundSprite00);
   tolua_function(tolua_S,"getIntValue",tolua_CocoStudio_CCControlSlider_getIntValue00);
   tolua_function(tolua_S,"getMaximumValue",tolua_CocoStudio_CCControlSlider_getMaximumValue00);
   tolua_function(tolua_S,"getValue",tolua_CocoStudio_CCControlSlider_getValue00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_CCControlSlider_ccTouchCancelled00);
   tolua_function(tolua_S,"getThumbSprite",tolua_CocoStudio_CCControlSlider_getThumbSprite00);
   tolua_function(tolua_S,"isDiscreteMode",tolua_CocoStudio_CCControlSlider_isDiscreteMode00);
   tolua_function(tolua_S,"getProgressSprite",tolua_CocoStudio_CCControlSlider_getProgressSprite00);
   tolua_function(tolua_S,"setBackgroundSprite",tolua_CocoStudio_CCControlSlider_setBackgroundSprite00);
   tolua_function(tolua_S,"setMaximumAllowedValue",tolua_CocoStudio_CCControlSlider_setMaximumAllowedValue00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseCircleActionInOut","CCEaseCircleActionInOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseCircleActionInOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseCircleActionInOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseCircleActionInOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseCircleActionInOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseCircleActionInOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GUIReader","GUIReader","CCObject",tolua_collect_GUIReader);
  #else
  tolua_cclass(tolua_S,"GUIReader","GUIReader","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GUIReader");
   tolua_function(tolua_S,"purge",tolua_CocoStudio_GUIReader_purge00);
   tolua_function(tolua_S,"shareReader",tolua_CocoStudio_GUIReader_shareReader00);
   tolua_function(tolua_S,"setFilePath",tolua_CocoStudio_GUIReader_setFilePath00);
   tolua_function(tolua_S,"getFileDesignSize",tolua_CocoStudio_GUIReader_getFileDesignSize00);
   tolua_function(tolua_S,"storeFileDesignSize",tolua_CocoStudio_GUIReader_storeFileDesignSize00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_GUIReader_delete00);
   tolua_function(tolua_S,"widgetFromJsonFile",tolua_CocoStudio_GUIReader_widgetFromJsonFile00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_GUIReader_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_GUIReader_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_GUIReader_new00_local);
   tolua_function(tolua_S,"getFilePath",tolua_CocoStudio_GUIReader_getFilePath00);
   tolua_function(tolua_S,"widgetFromBinaryFile",tolua_CocoStudio_GUIReader_widgetFromBinaryFile00);
   tolua_function(tolua_S,"getVersionInteger",tolua_CocoStudio_GUIReader_getVersionInteger00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCTableViewDataSource","CCTableViewDataSource","",tolua_collect_CCTableViewDataSource);
  #else
  tolua_cclass(tolua_S,"CCTableViewDataSource","CCTableViewDataSource","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCTableViewDataSource");
   tolua_function(tolua_S,"numberOfCellsInTableView",tolua_CocoStudio_CCTableViewDataSource_numberOfCellsInTableView00);
   tolua_function(tolua_S,"tableCellAtIndex",tolua_CocoStudio_CCTableViewDataSource_tableCellAtIndex00);
   tolua_function(tolua_S,"tableCellSizeForIndex",tolua_CocoStudio_CCTableViewDataSource_tableCellSizeForIndex00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCTableViewDataSource_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InnerActionFrame","InnerActionFrame","Frame",tolua_collect_InnerActionFrame);
  #else
  tolua_cclass(tolua_S,"InnerActionFrame","InnerActionFrame","Frame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InnerActionFrame");
   tolua_function(tolua_S,"create",tolua_CocoStudio_InnerActionFrame_create00);
   tolua_function(tolua_S,"getStartFrameIndex",tolua_CocoStudio_InnerActionFrame_getStartFrameIndex00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_InnerActionFrame_onEnter00);
   tolua_function(tolua_S,"clone",tolua_CocoStudio_InnerActionFrame_clone00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_InnerActionFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_InnerActionFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_InnerActionFrame_new00_local);
   tolua_function(tolua_S,"setStartFrameIndex",tolua_CocoStudio_InnerActionFrame_setStartFrameIndex00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BaseTriggerAction","BaseTriggerAction","CCObject",tolua_collect_BaseTriggerAction);
  #else
  tolua_cclass(tolua_S,"BaseTriggerAction","BaseTriggerAction","CCObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BaseTriggerAction");
   tolua_function(tolua_S,"removeAll",tolua_CocoStudio_BaseTriggerAction_removeAll00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_BaseTriggerAction_init00);
   tolua_function(tolua_S,"serialize",tolua_CocoStudio_BaseTriggerAction_serialize00);
   tolua_function(tolua_S,"done",tolua_CocoStudio_BaseTriggerAction_done00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_BaseTriggerAction_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCSkin","CCSkin","CCSprite",tolua_collect_CCSkin);
  #else
  tolua_cclass(tolua_S,"CCSkin","CCSkin","CCSprite",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCSkin");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCSkin_create00);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCSkin_create01);
   tolua_function(tolua_S,"createWithSpriteFrameName",tolua_CocoStudio_CCSkin_createWithSpriteFrameName00);
   tolua_function(tolua_S,"getBone",tolua_CocoStudio_CCSkin_getBone00);
   tolua_function(tolua_S,"nodeToWorldTransform",tolua_CocoStudio_CCSkin_nodeToWorldTransform00);
   tolua_function(tolua_S,"initWithFile",tolua_CocoStudio_CCSkin_initWithFile00);
   tolua_function(tolua_S,"nodeToWorldTransformAR",tolua_CocoStudio_CCSkin_nodeToWorldTransformAR00);
   tolua_function(tolua_S,"updateTransform",tolua_CocoStudio_CCSkin_updateTransform00);
   tolua_function(tolua_S,"getDisplayName",tolua_CocoStudio_CCSkin_getDisplayName00);
   tolua_function(tolua_S,"updateArmatureTransform",tolua_CocoStudio_CCSkin_updateArmatureTransform00);
   tolua_function(tolua_S,"initWithSpriteFrameName",tolua_CocoStudio_CCSkin_initWithSpriteFrameName00);
   tolua_function(tolua_S,"setSkinData",tolua_CocoStudio_CCSkin_setSkinData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCSkin_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCSkin_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCSkin_new00_local);
   tolua_function(tolua_S,"getSkinData",tolua_CocoStudio_CCSkin_getSkinData00);
   tolua_function(tolua_S,"setBone",tolua_CocoStudio_CCSkin_setBone00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PageView","PageView","Layout",tolua_collect_PageView);
  #else
  tolua_cclass(tolua_S,"PageView","PageView","Layout",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PageView");
   tolua_function(tolua_S,"create",tolua_CocoStudio_PageView_create00);
   tolua_function(tolua_S,"createInstance",tolua_CocoStudio_PageView_createInstance00);
   tolua_function(tolua_S,"onTouchEnded",tolua_CocoStudio_PageView_onTouchEnded00);
   tolua_function(tolua_S,"getCurPageIndex",tolua_CocoStudio_PageView_getCurPageIndex00);
   tolua_function(tolua_S,"onTouchMoved",tolua_CocoStudio_PageView_onTouchMoved00);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_PageView_getDescription00);
   tolua_function(tolua_S,"getCurPage",tolua_CocoStudio_PageView_getCurPage00);
   tolua_function(tolua_S,"recyclePage",tolua_CocoStudio_PageView_recyclePage00);
   tolua_function(tolua_S,"getDataSource",tolua_CocoStudio_PageView_getDataSource00);
   tolua_function(tolua_S,"setCurPage",tolua_CocoStudio_PageView_setCurPage00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_PageView_onEnter00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_PageView_delete00);
   tolua_function(tolua_S,"dequeuePageItem",tolua_CocoStudio_PageView_dequeuePageItem00);
   tolua_function(tolua_S,"reloadData",tolua_CocoStudio_PageView_reloadData00);
   tolua_function(tolua_S,"reloadData",tolua_CocoStudio_PageView_reloadData01);
   tolua_function(tolua_S,"getRightChild",tolua_CocoStudio_PageView_getRightChild00);
   tolua_function(tolua_S,"getLayoutType",tolua_CocoStudio_PageView_getLayoutType00);
   tolua_function(tolua_S,"setRightChild",tolua_CocoStudio_PageView_setRightChild00);
   tolua_function(tolua_S,"enqueuePageItem",tolua_CocoStudio_PageView_enqueuePageItem00);
   tolua_function(tolua_S,"getLeftChild",tolua_CocoStudio_PageView_getLeftChild00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_PageView_update00);
   tolua_function(tolua_S,"onTouchCancelled",tolua_CocoStudio_PageView_onTouchCancelled00);
   tolua_function(tolua_S,"scrollToPage",tolua_CocoStudio_PageView_scrollToPage00);
   tolua_function(tolua_S,"onTouchBegan",tolua_CocoStudio_PageView_onTouchBegan00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_PageView_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_PageView_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_PageView_new00_local);
   tolua_function(tolua_S,"setDataSource",tolua_CocoStudio_PageView_setDataSource00);
   tolua_function(tolua_S,"setLeftChild",tolua_CocoStudio_PageView_setLeftChild00);
   tolua_function(tolua_S,"setLayoutType",tolua_CocoStudio_PageView_setLayoutType00);
   tolua_variable(tolua_S,"__UIScrollInterface__",tolua_get_PageView___UIScrollInterface__,NULL);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuadraticActionOut","CCEaseQuadraticActionOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuadraticActionOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuadraticActionOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuadraticActionOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuadraticActionOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuadraticActionOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCSpriteDisplayData","CCSpriteDisplayData","CCDisplayData",tolua_collect_CCSpriteDisplayData);
  #else
  tolua_cclass(tolua_S,"CCSpriteDisplayData","CCSpriteDisplayData","CCDisplayData",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCSpriteDisplayData");
   tolua_variable(tolua_S,"skinData",tolua_get_CCSpriteDisplayData_skinData,tolua_set_CCSpriteDisplayData_skinData);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCSpriteDisplayData_create00);
   tolua_function(tolua_S,"copy",tolua_CocoStudio_CCSpriteDisplayData_copy00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCSpriteDisplayData_delete00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCSpriteDisplayData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCSpriteDisplayData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCSpriteDisplayData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCBatchNode","CCBatchNode","CCNode",tolua_collect_CCBatchNode);
  #else
  tolua_cclass(tolua_S,"CCBatchNode","CCBatchNode","CCNode",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCBatchNode");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCBatchNode_create00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCBatchNode_addChild00);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCBatchNode_addChild01);
   tolua_function(tolua_S,"addChild",tolua_CocoStudio_CCBatchNode_addChild02);
   tolua_function(tolua_S,"draw",tolua_CocoStudio_CCBatchNode_draw00);
   tolua_function(tolua_S,"getTexureAtlasWithTexture",tolua_CocoStudio_CCBatchNode_getTexureAtlasWithTexture00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_CCBatchNode_visit00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCBatchNode_delete00);
   tolua_function(tolua_S,"removeChild",tolua_CocoStudio_CCBatchNode_removeChild00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCBatchNode_init00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCBatchNode_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCBatchNode_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCBatchNode_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCEaseQuarticActionInOut","CCEaseQuarticActionInOut","CCActionEase",NULL);
  tolua_beginmodule(tolua_S,"CCEaseQuarticActionInOut");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEaseQuarticActionInOut_create00);
   tolua_function(tolua_S,"copyWithZone",tolua_CocoStudio_CCEaseQuarticActionInOut_copyWithZone00);
   tolua_function(tolua_S,"update",tolua_CocoStudio_CCEaseQuarticActionInOut_update00);
   tolua_function(tolua_S,"reverse",tolua_CocoStudio_CCEaseQuarticActionInOut_reverse00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RichText","RichText","Widget",tolua_collect_RichText);
  #else
  tolua_cclass(tolua_S,"RichText","RichText","Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RichText");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RichText_create00);
   tolua_function(tolua_S,"insertElement",tolua_CocoStudio_RichText_insertElement00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_RichText_setAnchorPoint00);
   tolua_function(tolua_S,"pushBackElement",tolua_CocoStudio_RichText_pushBackElement00);
   tolua_function(tolua_S,"formatText",tolua_CocoStudio_RichText_formatText00);
   tolua_function(tolua_S,"ignoreContentAdaptWithSize",tolua_CocoStudio_RichText_ignoreContentAdaptWithSize00);
   tolua_function(tolua_S,"setVerticalSpace",tolua_CocoStudio_RichText_setVerticalSpace00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_RichText_visit00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RichText_delete00);
   tolua_function(tolua_S,"getContentSize",tolua_CocoStudio_RichText_getContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RichText_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RichText_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RichText_new00_local);
   tolua_function(tolua_S,"removeElement",tolua_CocoStudio_RichText_removeElement00);
   tolua_function(tolua_S,"removeElement",tolua_CocoStudio_RichText_removeElement01);
   tolua_function(tolua_S,"getDescription",tolua_CocoStudio_RichText_getDescription00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TouchGroup","TouchGroup","CCLayer",tolua_collect_TouchGroup);
  #else
  tolua_cclass(tolua_S,"TouchGroup","TouchGroup","CCLayer",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TouchGroup");
   tolua_function(tolua_S,"create",tolua_CocoStudio_TouchGroup_create00);
   tolua_function(tolua_S,"getRootWidget",tolua_CocoStudio_TouchGroup_getRootWidget00);
   tolua_function(tolua_S,"removeWidget",tolua_CocoStudio_TouchGroup_removeWidget00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_TouchGroup_onEnter00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_TouchGroup_onExit00);
   tolua_function(tolua_S,"ccTouchBegan",tolua_CocoStudio_TouchGroup_ccTouchBegan00);
   tolua_function(tolua_S,"getWidgetByTag",tolua_CocoStudio_TouchGroup_getWidgetByTag00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_TouchGroup_delete00);
   tolua_function(tolua_S,"ccTouchCancelled",tolua_CocoStudio_TouchGroup_ccTouchCancelled00);
   tolua_function(tolua_S,"ccTouchEnded",tolua_CocoStudio_TouchGroup_ccTouchEnded00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_TouchGroup_init00);
   tolua_function(tolua_S,"getWidgetByName",tolua_CocoStudio_TouchGroup_getWidgetByName00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_TouchGroup_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_TouchGroup_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_TouchGroup_new00_local);
   tolua_function(tolua_S,"ccTouchMoved",tolua_CocoStudio_TouchGroup_ccTouchMoved00);
   tolua_function(tolua_S,"addWidget",tolua_CocoStudio_TouchGroup_addWidget00);
   tolua_function(tolua_S,"clear",tolua_CocoStudio_TouchGroup_clear00);
   tolua_function(tolua_S,"onEnterTransitionDidFinish",tolua_CocoStudio_TouchGroup_onEnterTransitionDidFinish00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RelativeLayoutParameter","RelativeLayoutParameter","LayoutParameter",tolua_collect_RelativeLayoutParameter);
  #else
  tolua_cclass(tolua_S,"RelativeLayoutParameter","RelativeLayoutParameter","LayoutParameter",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RelativeLayoutParameter");
   tolua_function(tolua_S,"create",tolua_CocoStudio_RelativeLayoutParameter_create00);
   tolua_function(tolua_S,"setAlign",tolua_CocoStudio_RelativeLayoutParameter_setAlign00);
   tolua_function(tolua_S,"copyProperties",tolua_CocoStudio_RelativeLayoutParameter_copyProperties00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_RelativeLayoutParameter_delete00);
   tolua_function(tolua_S,"setRelativeToWidgetName",tolua_CocoStudio_RelativeLayoutParameter_setRelativeToWidgetName00);
   tolua_function(tolua_S,"getRelativeName",tolua_CocoStudio_RelativeLayoutParameter_getRelativeName00);
   tolua_function(tolua_S,"getRelativeToWidgetName",tolua_CocoStudio_RelativeLayoutParameter_getRelativeToWidgetName00);
   tolua_function(tolua_S,"setRelativeName",tolua_CocoStudio_RelativeLayoutParameter_setRelativeName00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_RelativeLayoutParameter_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_RelativeLayoutParameter_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_RelativeLayoutParameter_new00_local);
   tolua_function(tolua_S,"getAlign",tolua_CocoStudio_RelativeLayoutParameter_getAlign00);
   tolua_function(tolua_S,"createCloneInstance",tolua_CocoStudio_RelativeLayoutParameter_createCloneInstance00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCBoneData","CCBoneData","CCBaseData",tolua_collect_CCBoneData);
  #else
  tolua_cclass(tolua_S,"CCBoneData","CCBoneData","CCBaseData",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCBoneData");
   tolua_variable(tolua_S,"name",tolua_get_CCBoneData_name,tolua_set_CCBoneData_name);
   tolua_variable(tolua_S,"parentName",tolua_get_CCBoneData_parentName,tolua_set_CCBoneData_parentName);
   tolua_variable(tolua_S,"displayDataList",tolua_get_CCBoneData_displayDataList,tolua_set_CCBoneData_displayDataList);
   tolua_variable(tolua_S,"boneDataTransform",tolua_get_CCBoneData_boneDataTransform,tolua_set_CCBoneData_boneDataTransform);
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCBoneData_create00);
   tolua_function(tolua_S,"getDisplayData",tolua_CocoStudio_CCBoneData_getDisplayData00);
   tolua_function(tolua_S,"init",tolua_CocoStudio_CCBoneData_init00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCBoneData_delete00);
   tolua_function(tolua_S,"addDisplayData",tolua_CocoStudio_CCBoneData_addDisplayData00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCBoneData_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCBoneData_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCBoneData_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ActionScaleFrame","ActionScaleFrame","ActionFrame",tolua_collect_ActionScaleFrame);
  #else
  tolua_cclass(tolua_S,"ActionScaleFrame","ActionScaleFrame","ActionFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ActionScaleFrame");
   tolua_function(tolua_S,"setScaleY",tolua_CocoStudio_ActionScaleFrame_setScaleY00);
   tolua_function(tolua_S,"setScaleX",tolua_CocoStudio_ActionScaleFrame_setScaleX00);
   tolua_function(tolua_S,"getScaleY",tolua_CocoStudio_ActionScaleFrame_getScaleY00);
   tolua_function(tolua_S,"getScaleX",tolua_CocoStudio_ActionScaleFrame_getScaleX00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_ActionScaleFrame_delete00);
   tolua_function(tolua_S,"getAction",tolua_CocoStudio_ActionScaleFrame_getAction00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_ActionScaleFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_ActionScaleFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_ActionScaleFrame_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCEditBox","CCEditBox","CCControlButton",tolua_collect_CCEditBox);
  #else
  tolua_cclass(tolua_S,"CCEditBox","CCEditBox","CCControlButton",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCEditBox");
   tolua_function(tolua_S,"create",tolua_CocoStudio_CCEditBox_create00);
   tolua_function(tolua_S,"setAnchorPoint",tolua_CocoStudio_CCEditBox_setAnchorPoint00);
   tolua_function(tolua_S,"onEnter",tolua_CocoStudio_CCEditBox_onEnter00);
   tolua_function(tolua_S,"keyboardDidShow",tolua_CocoStudio_CCEditBox_keyboardDidShow00);
   tolua_function(tolua_S,"getScriptEditBoxHandler",tolua_CocoStudio_CCEditBox_getScriptEditBoxHandler00);
   tolua_function(tolua_S,"getText",tolua_CocoStudio_CCEditBox_getText00);
   tolua_function(tolua_S,"keyboardDidHide",tolua_CocoStudio_CCEditBox_keyboardDidHide00);
   tolua_function(tolua_S,"setPlaceholderFontName",tolua_CocoStudio_CCEditBox_setPlaceholderFontName00);
   tolua_function(tolua_S,"getPlaceHolder",tolua_CocoStudio_CCEditBox_getPlaceHolder00);
   tolua_function(tolua_S,"setFontName",tolua_CocoStudio_CCEditBox_setFontName00);
   tolua_function(tolua_S,"registerScriptEditBoxHandler",tolua_CocoStudio_CCEditBox_registerScriptEditBoxHandler00);
   tolua_function(tolua_S,"visit",tolua_CocoStudio_CCEditBox_visit00);
   tolua_function(tolua_S,"setPlaceholderFontSize",tolua_CocoStudio_CCEditBox_setPlaceholderFontSize00);
   tolua_function(tolua_S,"delete",tolua_CocoStudio_CCEditBox_delete00);
   tolua_function(tolua_S,"unregisterScriptEditBoxHandler",tolua_CocoStudio_CCEditBox_unregisterScriptEditBoxHandler00);
   tolua_function(tolua_S,"keyboardWillShow",tolua_CocoStudio_CCEditBox_keyboardWillShow00);
   tolua_function(tolua_S,"setPlaceholderFontColor",tolua_CocoStudio_CCEditBox_setPlaceholderFontColor00);
   tolua_function(tolua_S,"setFontColor",tolua_CocoStudio_CCEditBox_setFontColor00);
   tolua_function(tolua_S,"keyboardWillHide",tolua_CocoStudio_CCEditBox_keyboardWillHide00);
   tolua_function(tolua_S,"touchDownAction",tolua_CocoStudio_CCEditBox_touchDownAction00);
   tolua_function(tolua_S,"setPlaceholderFont",tolua_CocoStudio_CCEditBox_setPlaceholderFont00);
   tolua_function(tolua_S,"setDelegate",tolua_CocoStudio_CCEditBox_setDelegate00);
   tolua_function(tolua_S,"setFontSize",tolua_CocoStudio_CCEditBox_setFontSize00);
   tolua_function(tolua_S,"initWithSizeAndBackgroundSprite",tolua_CocoStudio_CCEditBox_initWithSizeAndBackgroundSprite00);
   tolua_function(tolua_S,"setPlaceHolder",tolua_CocoStudio_CCEditBox_setPlaceHolder00);
   tolua_function(tolua_S,"setPosition",tolua_CocoStudio_CCEditBox_setPosition00);
   tolua_function(tolua_S,"getDelegate",tolua_CocoStudio_CCEditBox_getDelegate00);
   tolua_function(tolua_S,"getMaxLength",tolua_CocoStudio_CCEditBox_getMaxLength00);
   tolua_function(tolua_S,"setText",tolua_CocoStudio_CCEditBox_setText00);
   tolua_function(tolua_S,"onExit",tolua_CocoStudio_CCEditBox_onExit00);
   tolua_function(tolua_S,"setMaxLength",tolua_CocoStudio_CCEditBox_setMaxLength00);
   tolua_function(tolua_S,"setContentSize",tolua_CocoStudio_CCEditBox_setContentSize00);
   tolua_function(tolua_S,"new",tolua_CocoStudio_CCEditBox_new00);
   tolua_function(tolua_S,"new_local",tolua_CocoStudio_CCEditBox_new00_local);
   tolua_function(tolua_S,".call",tolua_CocoStudio_CCEditBox_new00_local);
   tolua_function(tolua_S,"setFont",tolua_CocoStudio_CCEditBox_setFont00);
   tolua_function(tolua_S,"setVisible",tolua_CocoStudio_CCEditBox_setVisible00);
   tolua_variable(tolua_S,"__CCIMEDelegate__",tolua_get_CCEditBox___CCIMEDelegate__,NULL);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"LAYOUT_CLIPPING_STENCIL",LAYOUT_CLIPPING_STENCIL);
  tolua_constant(tolua_S,"LAYOUT_CLIPPING_SCISSOR",LAYOUT_CLIPPING_SCISSOR);
  tolua_constant(tolua_S,"kCCTouchesAllAtOnce",kCCTouchesAllAtOnce);
  tolua_constant(tolua_S,"kCCTouchesOneByOne",kCCTouchesOneByOne);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_LEFT",LISTVIEW_GRAVITY_LEFT);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_RIGHT",LISTVIEW_GRAVITY_RIGHT);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_CENTER_HORIZONTAL",LISTVIEW_GRAVITY_CENTER_HORIZONTAL);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_TOP",LISTVIEW_GRAVITY_TOP);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_BOTTOM",LISTVIEW_GRAVITY_BOTTOM);
  tolua_constant(tolua_S,"LISTVIEW_GRAVITY_CENTER_VERTICAL",LISTVIEW_GRAVITY_CENTER_VERTICAL);
  tolua_constant(tolua_S,"LAYOUT_PARAMETER_NONE",LAYOUT_PARAMETER_NONE);
  tolua_constant(tolua_S,"LAYOUT_PARAMETER_LINEAR",LAYOUT_PARAMETER_LINEAR);
  tolua_constant(tolua_S,"LAYOUT_PARAMETER_RELATIVE",LAYOUT_PARAMETER_RELATIVE);
  tolua_constant(tolua_S,"LoadingBarTypeLeft",LoadingBarTypeLeft);
  tolua_constant(tolua_S,"LoadingBarTypeRight",LoadingBarTypeRight);
  tolua_constant(tolua_S,"kCCScrollViewDirectionNone",kCCScrollViewDirectionNone);
  tolua_constant(tolua_S,"kCCScrollViewDirectionHorizontal",kCCScrollViewDirectionHorizontal);
  tolua_constant(tolua_S,"kCCScrollViewDirectionVertical",kCCScrollViewDirectionVertical);
  tolua_constant(tolua_S,"kCCScrollViewDirectionBoth",kCCScrollViewDirectionBoth);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_NONE",LINEAR_GRAVITY_NONE);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_LEFT",LINEAR_GRAVITY_LEFT);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_TOP",LINEAR_GRAVITY_TOP);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_RIGHT",LINEAR_GRAVITY_RIGHT);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_BOTTOM",LINEAR_GRAVITY_BOTTOM);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_CENTER_VERTICAL",LINEAR_GRAVITY_CENTER_VERTICAL);
  tolua_constant(tolua_S,"LINEAR_GRAVITY_CENTER_HORIZONTAL",LINEAR_GRAVITY_CENTER_HORIZONTAL);
  tolua_constant(tolua_S,"kCCTextAlignmentLeft",kCCTextAlignmentLeft);
  tolua_constant(tolua_S,"kCCTextAlignmentCenter",kCCTextAlignmentCenter);
  tolua_constant(tolua_S,"kCCTextAlignmentRight",kCCTextAlignmentRight);
  tolua_constant(tolua_S,"kCCVerticalTextAlignmentTop",kCCVerticalTextAlignmentTop);
  tolua_constant(tolua_S,"kCCVerticalTextAlignmentCenter",kCCVerticalTextAlignmentCenter);
  tolua_constant(tolua_S,"kCCVerticalTextAlignmentBottom",kCCVerticalTextAlignmentBottom);
  tolua_constant(tolua_S,"UI_TEX_TYPE_LOCAL",UI_TEX_TYPE_LOCAL);
  tolua_constant(tolua_S,"UI_TEX_TYPE_PLIST",UI_TEX_TYPE_PLIST);
  tolua_constant(tolua_S,"LAYOUT_COLOR_NONE",LAYOUT_COLOR_NONE);
  tolua_constant(tolua_S,"LAYOUT_COLOR_SOLID",LAYOUT_COLOR_SOLID);
  tolua_constant(tolua_S,"LAYOUT_COLOR_GRADIENT",LAYOUT_COLOR_GRADIENT);
  tolua_constant(tolua_S,"LAYOUT_ABSOLUTE",LAYOUT_ABSOLUTE);
  tolua_constant(tolua_S,"LAYOUT_LINEAR_VERTICAL",LAYOUT_LINEAR_VERTICAL);
  tolua_constant(tolua_S,"LAYOUT_LINEAR_HORIZONTAL",LAYOUT_LINEAR_HORIZONTAL);
  tolua_constant(tolua_S,"LAYOUT_RELATIVE",LAYOUT_RELATIVE);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_NONE",RELATIVE_ALIGN_NONE);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_TOP_LEFT",RELATIVE_ALIGN_PARENT_TOP_LEFT);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_TOP_CENTER_HORIZONTAL",RELATIVE_ALIGN_PARENT_TOP_CENTER_HORIZONTAL);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_TOP_RIGHT",RELATIVE_ALIGN_PARENT_TOP_RIGHT);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_LEFT_CENTER_VERTICAL",RELATIVE_ALIGN_PARENT_LEFT_CENTER_VERTICAL);
  tolua_constant(tolua_S,"RELATIVE_CENTER_IN_PARENT",RELATIVE_CENTER_IN_PARENT);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_RIGHT_CENTER_VERTICAL",RELATIVE_ALIGN_PARENT_RIGHT_CENTER_VERTICAL);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_LEFT_BOTTOM",RELATIVE_ALIGN_PARENT_LEFT_BOTTOM);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_BOTTOM_CENTER_HORIZONTAL",RELATIVE_ALIGN_PARENT_BOTTOM_CENTER_HORIZONTAL);
  tolua_constant(tolua_S,"RELATIVE_ALIGN_PARENT_RIGHT_BOTTOM",RELATIVE_ALIGN_PARENT_RIGHT_BOTTOM);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_ABOVE_LEFTALIGN",RELATIVE_LOCATION_ABOVE_LEFTALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_ABOVE_CENTER",RELATIVE_LOCATION_ABOVE_CENTER);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_ABOVE_RIGHTALIGN",RELATIVE_LOCATION_ABOVE_RIGHTALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_LEFT_OF_TOPALIGN",RELATIVE_LOCATION_LEFT_OF_TOPALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_LEFT_OF_CENTER",RELATIVE_LOCATION_LEFT_OF_CENTER);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_LEFT_OF_BOTTOMALIGN",RELATIVE_LOCATION_LEFT_OF_BOTTOMALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_RIGHT_OF_TOPALIGN",RELATIVE_LOCATION_RIGHT_OF_TOPALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_RIGHT_OF_CENTER",RELATIVE_LOCATION_RIGHT_OF_CENTER);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_RIGHT_OF_BOTTOMALIGN",RELATIVE_LOCATION_RIGHT_OF_BOTTOMALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_BELOW_LEFTALIGN",RELATIVE_LOCATION_BELOW_LEFTALIGN);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_BELOW_CENTER",RELATIVE_LOCATION_BELOW_CENTER);
  tolua_constant(tolua_S,"RELATIVE_LOCATION_BELOW_RIGHTALIGN",RELATIVE_LOCATION_BELOW_RIGHTALIGN);
  tolua_constant(tolua_S,"POSITION_ABSOLUTE",POSITION_ABSOLUTE);
  tolua_constant(tolua_S,"POSITION_PERCENT",POSITION_PERCENT);
  tolua_constant(tolua_S,"WidgetTypeWidget",WidgetTypeWidget);
  tolua_constant(tolua_S,"WidgetTypeContainer",WidgetTypeContainer);
  tolua_constant(tolua_S,"SIZE_ABSOLUTE",SIZE_ABSOLUTE);
  tolua_constant(tolua_S,"SIZE_PERCENT",SIZE_PERCENT);
  tolua_constant(tolua_S,"BRIGHT_NONE",BRIGHT_NONE);
  tolua_constant(tolua_S,"BRIGHT_NORMAL",BRIGHT_NORMAL);
  tolua_constant(tolua_S,"BRIGHT_HIGHLIGHT",BRIGHT_HIGHLIGHT);
  tolua_constant(tolua_S,"kCCControlStepperPartMinus",kCCControlStepperPartMinus);
  tolua_constant(tolua_S,"kCCControlStepperPartPlus",kCCControlStepperPartPlus);
  tolua_constant(tolua_S,"kCCControlStepperPartNone",kCCControlStepperPartNone);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ccBlendFunc","ccBlendFunc","",tolua_collect_ccBlendFunc);
  #else
  tolua_cclass(tolua_S,"ccBlendFunc","ccBlendFunc","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ccBlendFunc");
   tolua_variable(tolua_S,"src",tolua_get_ccBlendFunc_unsigned_src,tolua_set_ccBlendFunc_unsigned_src);
   tolua_variable(tolua_S,"dst",tolua_get_ccBlendFunc_unsigned_dst,tolua_set_ccBlendFunc_unsigned_dst);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"stExpCocoObjectDesc","stExpCocoObjectDesc","",NULL);
  tolua_beginmodule(tolua_S,"stExpCocoObjectDesc");
   tolua_variable(tolua_S,"m_cAttribNum",tolua_get_stExpCocoObjectDesc_unsigned_m_cAttribNum,tolua_set_stExpCocoObjectDesc_unsigned_m_cAttribNum);
   tolua_variable(tolua_S,"m_szName",tolua_get_stExpCocoObjectDesc_unsigned_m_szName,tolua_set_stExpCocoObjectDesc_unsigned_m_szName);
   tolua_variable(tolua_S,"m_pAttribDescArray",tolua_get_stExpCocoObjectDesc_unsigned_m_pAttribDescArray,tolua_set_stExpCocoObjectDesc_unsigned_m_pAttribDescArray);
   tolua_function(tolua_S,"GetAttribDescArray",tolua_CocoStudio_stExpCocoObjectDesc_GetAttribDescArray00);
   tolua_function(tolua_S,"GetName",tolua_CocoStudio_stExpCocoObjectDesc_GetName00);
   tolua_function(tolua_S,"GetAttribNum",tolua_CocoStudio_stExpCocoObjectDesc_GetAttribNum00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCIMEKeyboardNotificationInfo","CCIMEKeyboardNotificationInfo","",NULL);
  tolua_beginmodule(tolua_S,"CCIMEKeyboardNotificationInfo");
   tolua_variable(tolua_S,"begin",tolua_get_CCIMEKeyboardNotificationInfo_begin,tolua_set_CCIMEKeyboardNotificationInfo_begin);
   tolua_variable(tolua_S,"end",tolua_get_CCIMEKeyboardNotificationInfo_end,tolua_set_CCIMEKeyboardNotificationInfo_end);
   tolua_variable(tolua_S,"duration",tolua_get_CCIMEKeyboardNotificationInfo_duration,tolua_set_CCIMEKeyboardNotificationInfo_duration);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"stCocoFileHeader","stCocoFileHeader","",NULL);
  tolua_beginmodule(tolua_S,"stCocoFileHeader");
   tolua_variable(tolua_S,"m_nDataSize",tolua_get_stCocoFileHeader_unsigned_m_nDataSize,tolua_set_stCocoFileHeader_unsigned_m_nDataSize);
   tolua_variable(tolua_S,"m_nCompressSize",tolua_get_stCocoFileHeader_unsigned_m_nCompressSize,tolua_set_stCocoFileHeader_unsigned_m_nCompressSize);
   tolua_variable(tolua_S,"m_ObjectCount",tolua_get_stCocoFileHeader_unsigned_m_ObjectCount,tolua_set_stCocoFileHeader_unsigned_m_ObjectCount);
   tolua_variable(tolua_S,"m_lAttribMemAddr",tolua_get_stCocoFileHeader_unsigned_m_lAttribMemAddr,tolua_set_stCocoFileHeader_unsigned_m_lAttribMemAddr);
   tolua_variable(tolua_S,"m_CocoNodeMemAddr",tolua_get_stCocoFileHeader_unsigned_m_CocoNodeMemAddr,tolua_set_stCocoFileHeader_unsigned_m_CocoNodeMemAddr);
   tolua_variable(tolua_S,"m_lStringMemAddr",tolua_get_stCocoFileHeader_unsigned_m_lStringMemAddr,tolua_set_stCocoFileHeader_unsigned_m_lStringMemAddr);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ccColor3B","ccColor3B","",tolua_collect_ccColor3B);
  #else
  tolua_cclass(tolua_S,"ccColor3B","ccColor3B","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ccColor3B");
   tolua_variable(tolua_S,"r",tolua_get_ccColor3B_unsigned_r,tolua_set_ccColor3B_unsigned_r);
   tolua_variable(tolua_S,"g",tolua_get_ccColor3B_unsigned_g,tolua_set_ccColor3B_unsigned_g);
   tolua_variable(tolua_S,"b",tolua_get_ccColor3B_unsigned_b,tolua_set_ccColor3B_unsigned_b);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HSV","HSV","",tolua_collect_HSV);
  #else
  tolua_cclass(tolua_S,"HSV","HSV","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HSV");
   tolua_variable(tolua_S,"h",tolua_get_HSV_h,tolua_set_HSV_h);
   tolua_variable(tolua_S,"s",tolua_get_HSV_s,tolua_set_HSV_s);
   tolua_variable(tolua_S,"v",tolua_get_HSV_v,tolua_set_HSV_v);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"stExpCocoNode","stExpCocoNode","",NULL);
  tolua_beginmodule(tolua_S,"stExpCocoNode");
   tolua_variable(tolua_S,"m_ObjIndex",tolua_get_stExpCocoNode_m_ObjIndex,tolua_set_stExpCocoNode_m_ObjIndex);
   tolua_variable(tolua_S,"m_AttribIndex",tolua_get_stExpCocoNode_m_AttribIndex,tolua_set_stExpCocoNode_m_AttribIndex);
   tolua_variable(tolua_S,"m_ChildNum",tolua_get_stExpCocoNode_unsigned_m_ChildNum,tolua_set_stExpCocoNode_unsigned_m_ChildNum);
   tolua_variable(tolua_S,"m_szValue",tolua_get_stExpCocoNode_unsigned_m_szValue,tolua_set_stExpCocoNode_unsigned_m_szValue);
   tolua_variable(tolua_S,"m_ChildArray",tolua_get_stExpCocoNode_unsigned_m_ChildArray,tolua_set_stExpCocoNode_unsigned_m_ChildArray);
   tolua_function(tolua_S,"GetChildArray",tolua_CocoStudio_stExpCocoNode_GetChildArray00);
   tolua_function(tolua_S,"WriteJson",tolua_CocoStudio_stExpCocoNode_WriteJson00);
   tolua_function(tolua_S,"GetName",tolua_CocoStudio_stExpCocoNode_GetName00);
   tolua_function(tolua_S,"GetValue",tolua_CocoStudio_stExpCocoNode_GetValue00);
   tolua_function(tolua_S,"GetChildNum",tolua_CocoStudio_stExpCocoNode_GetChildNum00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ccColor4B","ccColor4B","",tolua_collect_ccColor4B);
  #else
  tolua_cclass(tolua_S,"ccColor4B","ccColor4B","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ccColor4B");
   tolua_variable(tolua_S,"r",tolua_get_ccColor4B_unsigned_r,tolua_set_ccColor4B_unsigned_r);
   tolua_variable(tolua_S,"g",tolua_get_ccColor4B_unsigned_g,tolua_set_ccColor4B_unsigned_g);
   tolua_variable(tolua_S,"b",tolua_get_ccColor4B_unsigned_b,tolua_set_ccColor4B_unsigned_b);
   tolua_variable(tolua_S,"a",tolua_get_ccColor4B_unsigned_a,tolua_set_ccColor4B_unsigned_a);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RGBA","RGBA","",tolua_collect_RGBA);
  #else
  tolua_cclass(tolua_S,"RGBA","RGBA","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RGBA");
   tolua_variable(tolua_S,"r",tolua_get_RGBA_r,tolua_set_RGBA_r);
   tolua_variable(tolua_S,"g",tolua_get_RGBA_g,tolua_set_RGBA_g);
   tolua_variable(tolua_S,"b",tolua_get_RGBA_b,tolua_set_RGBA_b);
   tolua_variable(tolua_S,"a",tolua_get_RGBA_a,tolua_set_RGBA_a);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CCAffineTransform","CCAffineTransform","",tolua_collect_CCAffineTransform);
  #else
  tolua_cclass(tolua_S,"CCAffineTransform","CCAffineTransform","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CCAffineTransform");
   tolua_variable(tolua_S,"a",tolua_get_CCAffineTransform_a,tolua_set_CCAffineTransform_a);
   tolua_variable(tolua_S,"b",tolua_get_CCAffineTransform_b,tolua_set_CCAffineTransform_b);
   tolua_variable(tolua_S,"c",tolua_get_CCAffineTransform_c,tolua_set_CCAffineTransform_c);
   tolua_variable(tolua_S,"d",tolua_get_CCAffineTransform_d,tolua_set_CCAffineTransform_d);
   tolua_variable(tolua_S,"tx",tolua_get_CCAffineTransform_tx,tolua_set_CCAffineTransform_tx);
   tolua_variable(tolua_S,"ty",tolua_get_CCAffineTransform_ty,tolua_set_CCAffineTransform_ty);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_CocoStudio (lua_State* tolua_S) {
 return tolua_CocoStudio_open(tolua_S);
};
#endif

