
typedef enum
{
    PAGEVIEW_EVENT_TURNING,
}PageViewEventType;

typedef enum {
    PAGEVIEW_TOUCHLEFT,
    PAGEVIEW_TOUCHRIGHT
}PVTouchDir;

class PageViewDataSource {
    virtual int pageViewItemCount(PageView* pv);
    virtual Widget* pageItemAtIndex(PageView* pv, int index);
    virtual void pageItemDidRecycled(PageView* pv, Widget* item);
};

class PageView : public Layout , public UIScrollInterface
{
    PageView();
    virtual ~PageView();
    static PageView* create();
    void reloadData(int wantedPageIndex);
    void reloadData();
    void scrollToPage(int idx, bool animation = true);
    int getCurPageIndex() const;

    virtual bool onTouchBegan(CCTouch *touch, CCEvent *unusedEvent);
    virtual void onTouchMoved(CCTouch *touch, CCEvent *unusedEvent);
    virtual void onTouchEnded(CCTouch *touch, CCEvent *unusedEvent);
    virtual void onTouchCancelled(CCTouch *touch, CCEvent *unusedEvent);
    
    virtual void update(float dt);
    virtual void setLayoutType(LayoutType type);
    virtual LayoutType getLayoutType() const;
    virtual std::string getDescription() const;

    tolua_property PageViewDataSource* m_dataSource;
    tolua_property Widget* m_leftChild;
    tolua_property Widget* m_rightChild;
    tolua_property Widget* m_curPage;
};
